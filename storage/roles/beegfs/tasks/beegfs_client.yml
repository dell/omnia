#  Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Installing packages for BeeGFS client on RHEL/Rocky
  ansible.builtin.package:
    name: "{{ beegfs_pkgs_version }}"
    state: present
  when: compute_os in ["redhat", "rocky"]

- name: Installing packages for BeeGFS client on Ubuntu
  when: compute_os == "ubuntu"
  block:
    - name: Run apt info command and capture output
      ansible.builtin.command: apt info beegfs-helperd -a
      register: apt_info_output
      changed_when: false

    - name: Extract version line containing beegfs_version
      ansible.builtin.set_fact:
        beegfs_new_version: "{{ item.split(':')[1:] | join(':') | trim }}"
      loop: "{{ apt_info_output.stdout_lines }}"
      when: "'Version' in item and beegfs_version in item"

    - name: Display the extracted version line
      ansible.builtin.debug:
        var: beegfs_new_version

    - name: Installing packages for BeeGFS client
      ansible.builtin.command:
        cmd: "apt install -y {{ item }}"
      loop: "{{ beegfs_pkgs_version_ubuntu }}"
      changed_when: true

- name: Disable security features of BeeGFS helperd
  ansible.builtin.replace:
    path: "{{ helperd_location }}"
    regexp: "^connDisableAuthentication = false"
    replace: "connDisableAuthentication = true"
  when: hostvars['127.0.0.1']['beegfs_client_version'] >= '7.3.1'

- name: Disable security features of BeeGFS client
  ansible.builtin.replace:
    path: "{{ client_mount_location }}"
    regexp: "^connDisableAuthentication     = false"
    replace: "connDisableAuthentication     = true"
  when: hostvars['127.0.0.1']['beegfs_client_version'] >= '7.3.1'

- name: Copy and update the shared secret file configuration
  when:
    - hostvars['127.0.0.1']['beegfs_client_version'] >= '7.2.7'
    - hostvars['127.0.0.1']['beegfs_connauth_status']
  block:
    - name: Copy the shared secret file to the cluster
      ansible.builtin.copy:
        src: "{{ beegfs_secret_storage_filepath }}"
        dest: "{{ beegfs_client_secret_path }}"
        remote_src: false
        mode: "{{ beegfs_secretfile_mode }}"

    - name: Update the beegfs-helperd.conf file
      ansible.builtin.lineinfile:
        path: "{{ helperd_location }}"
        regexp: "{{ beegfs_secretfile_regexp }}"
        line: "{{ beegfs_secretfile_regexp_update }}"

    - name: Update the beegfs-client.conf file
      ansible.builtin.lineinfile:
        path: "{{ beegfs_client_secret_conf_file }}"
        regexp: "{{ beegfs_secretfile_regexp }}"
        line: "{{ beegfs_secretfile_regexp_update }}"

- name: Modify configuration files to support rdma
  when: beegfs_rdma_support
  block:
    - name: Modify BeeGFS client autobuild file for infiniband support
      ansible.builtin.lineinfile:
        path: "{{ beegfs_client_conf_file }}"
        regexp: "{{ default_arg }}"
        insertafter: "{{ default_arg }}"
        line: "{{ modified_arg }}"
      when:
        - beegfs_ofed_kernel_modules_path | length < 1

    - name: Modify BeeGFS client autobuild file for separate OFED kernel modules
      ansible.builtin.lineinfile:
        path: "{{ beegfs_client_conf_file }}"
        regexp: "{{ default_arg }}"
        insertafter: "{{ default_arg }}"
        line: "{{ modified_arg_ofed }}"
      when: beegfs_ofed_kernel_modules_path | length > 1

    - name: Rebuild BeeGFS client with OFED
      block:
        - name: Rebuilding BeeGFS client module with OFED
          ansible.builtin.command: "{{ rebuild_path }}"
          changed_when: true
      rescue:
        - name: Failed to rebuild BeeGFS client with OFED
          ansible.builtin.assert:
            that: false
            fail_msg: "{{ beegfs_rebuild_status }}"

- name: Modify BeeGFS client autobuild file for without RDMA
  ansible.builtin.lineinfile:
    path: "{{ beegfs_client_conf_file }}"
    regexp: "{{ default_arg }}"
    insertafter: "{{ default_arg }}"
    line: "{{ without_rdma_arg }}"
  when: not beegfs_rdma_support

- name: Disable sanity check
  ansible.builtin.lineinfile:
    path: "{{ beegfs_client_secret_conf_file }}"
    regexp: "{{ regexp_pattern }}"
    line: "{{ replacement_line }}"

- name: Modify BeeGFS mounts file for supporting different mount location
  ansible.builtin.lineinfile:
    path: "{{ beegfs_mount_file }}"
    regexp: "{{ client_mount_location }}"
    insertbefore: "{{ client_mount_location }}"
    line: "{{ beegfs_mounts }} {{ client_mount_location }}"
  when: beegfs_unmount_client

- name: Rebuild BeeGFS client
  block:
    - name: Rebuilding BeeGFS client module
      ansible.builtin.command: "{{ rebuild_path }}"
      changed_when: true
  rescue:
    - name: Failed to rebuild BeeGFS client
      ansible.builtin.assert:
        that: false
        fail_msg: "{{ beegfs_rebuild_tcp_msg }}"

- name: Configuring BeeGFS client
  ansible.builtin.command: "{{ beegfs_client_setup }} -m {{ beegfs_mgmt_server }}"
  changed_when: true

- name: Start and enable BeeGFS client and helperd modules
  block:
    - name: Starting and enabling BeeGFS client and helperd modules
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: restarted
        enabled: true
      with_items: "{{ beegfs_client_pkg }}"
  rescue:
    - name: Failed to start BeeGFS client or helperd modules
      ansible.builtin.assert:
        that: false
        fail_msg: "{{ beegfs_client_status }}"
