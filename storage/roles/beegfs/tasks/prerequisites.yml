#  Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Check for beegfs_ofed_kernel_modules_path
  when:
    - beegfs_rdma_support
    - beegfs_ofed_kernel_modules_path | length > 1
  block:
    - name: Verify beegfs_ofed_kernel_modules_path existence
      ansible.builtin.stat:
        path: "{{ beegfs_ofed_kernel_modules_path }}"
      register: beegfs_ofed_path

    - name: Fail if beegfs_ofed_kernel_modules_path doesn't exists
      ansible.builtin.fail:
        msg: "{{ fail_msg_beegfs_ofed_path }}"
      when: not beegfs_ofed_path.stat.exists

- name: Unmount previous existence of BeeGFS client
  when: beegfs_unmount_client
  block:
    - name: BeeGFS client mount config file
      ansible.builtin.command: cat "{{ beegfs_mount_file }}"
      failed_when: false
      changed_when: false
      register: client_mount_status

    - name: Fetch already mounted location
      ansible.builtin.set_fact:
        mounted_path: "{{ client_mount_status.stdout.split(' ')[0] }}"

    - name: Unmount already mounted BeeGFS file system
      ansible.builtin.command: "umount {{ mounted_path }}"
      register: umount_status
      until: umount_status is not failed
      retries: "{{ max_retries }}"
      changed_when: false
      failed_when: false

    - name: Remove beegfs mount location
      ansible.builtin.file:
        path: "{{ mounted_path }}"
        state: absent
      register: umount_file
      until: umount_file is not failed
      retries: "{{ max_retries }}"
      failed_when: false
  rescue:
    - name: Status of unmounting
      ansible.builtin.fail:
        msg: "{{ beegfs_mount_status_msg }}"

- name: Install common packages for BeeGFS client
  ansible.builtin.package:
    name: "{{ beegfs_common_pkgs_non_leap }}"
    state: present
