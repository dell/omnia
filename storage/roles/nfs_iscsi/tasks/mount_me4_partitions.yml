#  Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Get ME4 volume
  shell: >
    set -o pipefail && \
    lsscsi -s | grep ME4
  changed_when: false
  register: me4_output
  failed_when: false

- name: Create a temp file
  file:
    path: pv_mount.txt
    state: absent

- name: Get ME4 volume
  shell: >
    set -o pipefail && \
    lsscsi -s | grep ME4
  changed_when: false
  register: me4_output
  failed_when: false

- name: Set a temp variable
  set_fact:
    temp_info: "{{ me4_output.stdout.split('\n') }}"

- name: Create a temp file
  shell: echo {{ item }} >> pv_mount.txt
  with_items: "{{ temp_info }}"
  changed_when: false

- name: Extract the disks
  command:  awk -F' ' '{ print $6}' pv_mount.txt
  register: disk_op
  changed_when: false

- name: Create a list of mounted disks
  set_fact:
    mounted_pv_disks: "{{ mounted_pv_disks | default([]) }} + [ '{{ item }}']"
  when: item != '-'
  with_items: "{{ disk_op.stdout_lines }}"

- name: Get all mounted partitions
  command: df -h
  changed_when: false
  register: mounted_partitions

- name: Create partition on ME4 volumes
  command: "parted -a optimal {{ item }} --script -- mklabel gpt mkpart primary 0% {{ powervault_disk_partition_size }}"
  changed_when: true
  when: item not in mounted_partitions.stdout
  with_items: "{{ mounted_pv_disks }}"

- name: Update kernel with new partition changes
  command: partprobe
  changed_when: false

- name: Check ME4 mounted partitions
  shell: >
    set -o pipefail && \
    mount | grep me4
  failed_when: false
  changed_when: false
  register: me4_mounted_partitions

- name: Set file system on partition
  shell: >
    set -o pipefail && \
    echo y | mkfs -t ext4 {{ item.0 }}1
  when: item.1.location not in mounted_partitions.stdout
  with_together:
    - "{{ mounted_pv_disks }}"
    - "{{ pv_volumes }}"
  failed_when: false

- name: Creating NFS share directories
  file:
    path: "{{ item.location }}"
    state: directory
    mode: "{{ nfs_share_dir_mode }}"
  with_items: "{{ pv_volumes }}"

- name: Mount K8s partition on K8s NFS share
  command: "mount {{ item.0 }}1 {{ item.1.location }}"
  changed_when: true
  when: item.1.location not in me4_mounted_partitions.stdout
  with_together:
     - "{{ mounted_pv_disks }}"
     - "{{ pv_volumes }}"
  failed_when: false

- name: Configuring auto mount K8s partition on reboot
  lineinfile:
    path: "{{ fstab_file_path }}"
    line: "{{ item.0 }}1            {{ item.1.location }}      ext4            defaults        0     0"
  with_together:
    - "{{ mounted_pv_disks }}"
    - "{{ pv_volumes }}"