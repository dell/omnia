# Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Install nfs-utils
  ansible.builtin.package:
    name: nfs-utils
    state: present

- name: Install firewalld
  ansible.builtin.package:
    name: firewalld
    state: present

- name: Start and enable firewalld
  ansible.builtin.service:
    name: firewalld
    state: started
    enabled: true

- name: Start and enable rpcbind and nfs-server service
  ansible.builtin.service:
    name: "{{ item }}"
    state: restarted
    enabled: true
  with_items:
    - rpcbind
    - nfs-server

- name: Creating NFS share directory
  ansible.builtin.file:
    path: "{{ item.server_share_path }}"
    state: directory
    mode: "{{ nfs_share_dir_mode }}"
  loop: "{{ hostvars['127.0.0.1']['nfs_client_params'] }}"
  when: item.server_ip == ansible_host

- name: Adding NFS share entries in /etc/exports for nodes
  ansible.builtin.lineinfile:
    path: "{{ exports_file_path }}"
    line: "{{ item.server_share_path }} {{ hostvars['127.0.0.1']['admin_nic_subnet'] }}(rw,sync,no_root_squash)"
  with_items: "{{ hostvars['127.0.0.1']['nfs_client_params'] }}"
  when: item.server_ip == ansible_host

- name: Exporting the shared directories
  ansible.builtin.command: exportfs -r
  changed_when: true

- name: Configuring firewall
  ansible.builtin.command: "firewall-cmd --permanent --add-service={{ item }}"
  changed_when: true
  with_items:
    - "{{ nfs_services }}"

- name: Reload firewalld
  ansible.builtin.command: firewall-cmd --reload
  changed_when: true

- name: Restart nerdctl-registry service
  block:
    - name: Restart nerdctl-registry service
      ansible.builtin.systemd:
        name: nerdctl-registry
        state: restarted
      when:
        - inventory_hostname == "localhost" or
          inventory_hostname == hostvars['127.0.0.1']['admin_nic_ip']
  rescue:
    - name: Failed to restart nerdctl-registry
      ansible.builtin.debug:
        msg: "{{ nerdctl_registry_restart_fail_msg }}"
