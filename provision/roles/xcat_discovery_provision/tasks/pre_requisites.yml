# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Initialize variables
  ansible.builtin.set_fact:
    xcat_installation_status: false
    reprovision_status: false
    switch_based_node_status: false

- name: Check output of network table
  ansible.builtin.command: lsdef -t network
  changed_when: false
  failed_when: false
  register: network_table_check

- name: Restart postgresql and xcat services if xcat already installed
  ansible.builtin.service:
    name: "{{ item }}"
    state: restarted
    enabled: true
  failed_when: false
  with_items:
    - postgresql
    - xcatd
  when:
    - network_table_check.stderr is defined
    - xcat_connection_search_key in network_table_check.stderr | lower

- name: Gathering service facts
  ansible.builtin.service_facts:

- name: Set xcat_installation_status to true
  ansible.builtin.set_fact:
    xcat_installation_status: true
  when:
    - "'xcatd.service' in ansible_facts.services"
    - "'postgresql.service' in ansible_facts.services"
    - "'running' in ansible_facts.services['xcatd.service'].state"
    - "'running' in ansible_facts.services['postgresql.service'].state"

- name: Fail if xcat_installation_status is false
  ansible.builtin.fail:
    msg: "{{ xcat_status_fail_msg }}"
  when: not xcat_installation_status

- name: Check diskful osimage is created
  ansible.builtin.shell: >
      set -o pipefail && \
      lsdef -t osimage | grep "{{ osimage_search_key }}" | grep "{{ provision_os }}" | grep "{{ provision_os_version }}"
  changed_when: false
  failed_when: false
  register: diskful_osimage_precheck

- name: Fail if osimage not present
  ansible.builtin.fail:
    msg: "{{ repo_precheck }}"
  when:
    - diskful_osimage_precheck.stdout == ""
    - diskful_osimage_precheck.stderr == ""

- name: Set reprovision_status to true
  ansible.builtin.set_fact:
    reprovision_status: true
  when:
    - groups['all'] is defined
    - (groups['all'] | length > 0)
    - "'xcatd.service' in ansible_facts.services"
    - "'running' in ansible_facts.services['xcatd.service'].state"

- name: Warning - reprovision will be ignored
  ansible.builtin.pause:
    seconds: "{{ warning_wait_time }}"
    prompt: "{{ reprovision_warning_msg }}"
  when:
    - groups['all'] is defined
    - (groups['all'] | length > 0)
    - not reprovision_status
