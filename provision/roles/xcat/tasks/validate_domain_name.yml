# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Validate the domain_name
  ansible.builtin.assert:
    that:
      - domain_name | length > 1
      - domain_name is regex("^(?!-)[A-Za-z0-9-]+([\\-\\.]{1}[a-z0-9]+)*\\.[A-Za-z]{2,}$")
    success_msg: "{{ domain_name_success_msg }}"
    fail_msg: "{{ domain_name_fail_msg }}"

- name: Length of domain name and node name
  ansible.builtin.set_fact:
    domain_name_len: "{{ domain_name | length }}"
    node_name_len: "{{ node_name | length }}"

- name: Assert length of hostname is less than 64 characters
  ansible.builtin.assert:
    that:
      - domain_name_len|int + node_name_len|int < 59
    success_msg: "{{ hostname_success_msg }}"
    fail_msg: "{{ hostname_fail_msg }}"

- name: Fetch the short hostname
  ansible.builtin.command: hostname -s
  register: short_hostname
  changed_when: false

- name: Validate the short hostname
  ansible.builtin.assert:
    that:
      - short_hostname.stdout is regex(("^(([a-z]|[a-z][a-z0-9\-]*[a-z0-9])\.)*([a-z]|[a-z][a-z0-9\-]*[a-z0-9])$"))
      - short_hostname.stdout != "localhost"
    success_msg: "{{ server_hostname_success_msg }}"
    fail_msg: "{{ server_hostname_fail_msg }}"

- name: Fetch the domain name
  ansible.builtin.command: hostname -d
  register: domain_name_check
  changed_when: false
  failed_when: false

- name: Verify the domain name is not blank in hostname
  ansible.builtin.fail:
    msg: " {{ server_domain_name_blank_msg }}"
  when: domain_name_check.stdout | length < 1

- name: Set fact for the domain name in hostname
  ansible.builtin.set_fact:
    ms_domain_name: "{{ domain_name_check.stdout }}"

- name: Validate the domain name set on the host
  ansible.builtin.assert:
    that:
      - domain_name == ms_domain_name
    success_msg: "{{ server_domain_name_success_msg }}"
    fail_msg: "{{ server_domain_name_fail_msg }}"

- name: Fetch hostname of the server
  ansible.builtin.command: hostname
  changed_when: false
  register: machine_hostname

- name: Add hosts file entry
  ansible.builtin.lineinfile:
    dest: "{{ hosts_file_path }}"
    line: "{{ pxe_nic_ip }} {{ machine_hostname.stdout }}"
    state: present
    create: true
    mode: "{{ hosts_file_mode }}"
