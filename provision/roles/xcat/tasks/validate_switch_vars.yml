# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---
# Basic Validation
- name: Include base variable file base_vars.yml
  ansible.builtin.include_vars: "{{ provision_config_filename }}"
  no_log: true
  tags: init

- name: Set facts to validate snmp support
  ansible.builtin.set_fact:
    pxe_mapping_file: false
    switch_ip_pxe: false
  tags: init

# Check status of mapping file
- name: Set the mapping file value for host network
  ansible.builtin.set_fact:
    pxe_mapping_file: true
  when:
    - pxe_mapping_file_path | length > 0
    - '"/" in pxe_mapping_file_path'
  tags: init

- name: Assert if PXE mapping file path is valid or not
  block:
    - name: Check that the pxe mapping file path exists
      ansible.builtin.stat:
        path: "{{ pxe_mapping_file_path }}"
      register: pxe_stat_result
      tags: init

    - name: Fail if config file doesn't exist
      ansible.builtin.fail:
        msg: "{{ fail_msg_pxe_path }}"
      when: not pxe_stat_result.stat.exists
      tags: init
  when: pxe_mapping_file

# Assert the Switch details provided in case PXE mapping file not present
- name: Validate switch details exist if pxe mapping file not present
  block:
    - name: Validate if input params of provision config are not empty
      ansible.builtin.fail:
        msg: "{{ fail_switch_or_mapping_file }}"
      register: input_provision_check
      tags: validate
      when:
        - pxe_switch_ip | length < 1 or
          pxe_switch_snmp_community_string | length < 1 or
          node_name | length < 1

    - name: Valid pxe switch ip is given
      ansible.builtin.assert:
        that: pxe_switch_ip | ipv4
        success_msg: "{{ pxe_switch_ip_valid }}"
        fail_msg: "{{ pxe_switch_ip_invalid }}"

    - name: Set fact for switch ip
      ansible.builtin.set_fact:
        switch_ip_pxe: true
  when: not pxe_mapping_file
  tags: init
