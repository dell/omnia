# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Set update_repos and rhel_repo_alphabetical_folders to lowercase
  ansible.builtin.set_fact:
    update_repos: "{{ update_repos | lower }}"
    rhel_repo_alphabetical_folders: "{{ rhel_repo_alphabetical_folders | lower }}"

- name: Verify the value of update_repos
  ansible.builtin.assert:
    that:
      - update_repos == true or update_repos == false
    success_msg: "{{ update_repos_success_msg }}"
    fail_msg: "{{ update_repos_fail_msg }}"

- name: Verify the value of rhel_repo_alphabetical_folders
  ansible.builtin.assert:
    that:
      - rhel_repo_alphabetical_folders == true or rhel_repo_alphabetical_folders == false
    success_msg: "{{ rhel_repo_folders_success_msg }}"
    fail_msg: "{{ rhel_repo_folders_fail_msg }}"

- name: Initialize rhel_repo_path_status
  ansible.builtin.set_fact:
    rhel_repo_path_status: false

- name: Fetch redhat subscription status
  ansible.builtin.command: subscription-manager list
  changed_when: false
  register: rhsm_status
  when: control_plane_os_redhat in control_plane_os

- name: Set rhel_repo_path_status to true
  ansible.builtin.set_fact:
    rhel_repo_path_status: true
  when:
    - rhel_repo_local_path[0].repo | default("", true) | length > 1
    - rhel_repo_local_path[1].repo | default("", true) | length > 1
    - rhel_repo_local_path[2].repo | default("", true) | length > 1
    - rhel_repo_local_path[0].repo_url | default("", true) | length > 1
    - rhel_repo_local_path[1].repo_url | default("", true) | length > 1
    - rhel_repo_local_path[2].repo_url | default("", true) | length > 1
    - rhel_repo_local_path[0].repo_name | default("", true) | length > 1
    - rhel_repo_local_path[1].repo_name | default("", true) | length > 1
    - rhel_repo_local_path[2].repo_name | default("", true) | length > 1

- name: Validate rhel_repo_local_path
  when: rhel_repo_path_status
  block:
    - name: Validate rhel_repo_local_path
      ansible.builtin.assert:
        that: rhel_repo_local_path | length == 3
        success_msg: "{{ repo_path_count_success_msg }}"
        fail_msg: "{{ repo_path_count_fail_msg }}"

    - name: Validate repo, repo_url and repo_name is not empty
      ansible.builtin.assert:
        that:
          - item.repo | default("", true) | length > 1
          - item.repo == rhel_repo_search_key[0] or item.repo == rhel_repo_search_key[1] or item.repo == rhel_repo_search_key[2]
          - item.repo_url | default("", true) | length > 1
          - item.repo_name | default("", true) | length > 1
          - '".repo" in item.repo_url'
        success_msg: "{{ repo_path_success_msg }}"
        fail_msg: "{{ repo_path_fail_msg }}"
      with_items: "{{ rhel_repo_local_path }}"

    - name: Warning - redhat subscription not enabled
      ansible.builtin.pause:
        seconds: "{{ warning_wait_time_repo }}"
        prompt: "{{ rhel_subscription_warning_msg }}"
      when:
        - control_plane_os_redhat in control_plane_os
        - subscription_check_key not in rhsm_status.stdout

- name: Check subscription repos configured when control plane is RHEL
  when:
    - control_plane_os_redhat in control_plane_os
    - not rhel_repo_path_status
  block:
    - name: Subscription is not enabled
      ansible.builtin.fail:
        msg: "{{ rhel_subscription_fail_msg }}"
      when: subscription_check_key not in rhsm_status.stdout

    - name: Fetch redhat enabled repo list
      ansible.builtin.command: subscription-manager repos --list-enabled
      changed_when: false
      register: rhsm_repo_list

    - name: Check redhat enabled repos
      ansible.builtin.assert:
        that:
          - rhel_repo_search_key[0] | lower in rhsm_repo_list.stdout | lower
          - rhel_repo_search_key[1] | lower in rhsm_repo_list.stdout | lower
        success_msg: "{{ subscription_repo_success_msg }}"
        fail_msg: "{{ subscription_repo_fail_msg }}"

- name: Check control plane OS when provision_os is rhel
  ansible.builtin.fail:
    msg: "{{ compatibility_msg }}"
  when:
    - provision_os | lower == os_supported_rhel
    - control_plane_os_redhat not in control_plane_os
    - not rhel_repo_path_status
