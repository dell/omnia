#  Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.aa
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Install Kserve dependency certificate manager
  block:
    # Install cert-manager
    - name: Install Certificate manager
      ansible.builtin.command: kubectl apply -f "{{ manifest_local_path }}/cert_manager_manifest.yaml"
      register: cert_mgr_install_status
      changed_when: cert_mgr_install_status.changed
      failed_when: cert_mgr_install_status.rc != 0

    - name: Wait for Certificate manager to be available
      ansible.builtin.command: kubectl wait --for=condition=available --timeout=600s deployment/cert-manager-webhook -n cert-manager
      register: cert_mgr_available_status
      changed_when: cert_mgr_available_status.changed
      failed_when: cert_mgr_available_status.rc != 0

    # Wait for pods under cert-manager namespace to come up.
    - name: Check if namespace exists "{{ kserve_cert_manager_namespace }}"
      ansible.builtin.shell: >
        set -o pipefail && \
        kubectl get ns "{{ kserve_cert_manager_namespace }}" 2>&1 | wc -l
      register: cert_manager_namespace_count
      changed_when: false

    - name: Fail if namespace is not present "{{ kserve_cert_manager_namespace }}"
      ansible.builtin.assert:
        that:
          - cert_manager_namespace_count.stdout | int ==2
        fail_msg: "{{ fail_msg_cert_manager_ns }}"

    - name: Verify pods under namespace "{{ kserve_cert_manager_namespace }}"
      block:
        - name: Wait for cert-manager pods to be running in namespace "{{ kserve_cert_manager_namespace }}"
          ansible.builtin.shell: >
            set -o pipefail && \
            kubectl get pods -n '{{ kserve_cert_manager_namespace }}' 2>&1 | grep -v Running | wc -l
          register: cert_manager_command_output
          until: cert_manager_command_output.stdout | int < 2
          retries: "{{ max_attempts }}"
          delay: "{{ wait_time }}"
          changed_when: false
          failed_when: false

        - name: Add to non running namespace list
          ansible.builtin.set_fact.set_fact:
            non_running_pods_ns: "{{ non_running_pods_ns + [kserve_cert_manager_namespace] }}"
          when: cert_manager_command_output.stdout | int >= 2