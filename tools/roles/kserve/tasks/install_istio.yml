#  Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.aa
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Initialize an empty list for tracking non-running pods
  ansible.builtin.set_fact:
    non_running_pods_ns: []

- name: Install Kserve dependency istio
  block:
    # Install Istio
    - name: Download Istio tar file
      ansible.builtin.get_url:
        url: "{{ offline_tarball_path }}/istio.tar.gz"
        dest: "{{ istio_tar_file_location }}"
        mode: "{{ permission_644 }}"
      register: download_result
      ignore_errors: true

    - name: Verify download
      ansible.builtin.fail:
        msg: "{{ fail_msg_istio_tar }}"
      when: download_result.failed

    - name: Extract Istio tar file
      ansible.builtin.unarchive:
        copy: false
        src: "{{ istio_tar_file_location }}"
        dest: /tmp/
      register: istio_unarchive_status
      changed_when: istio_unarchive_status.changed

    - name: Install Istio using istioctl
      ansible.builtin.command: "/tmp/{{ istio_tar_file_name }}-{{ istio_version }}/bin/istioctl install --set profile=default -y"
      register: istio_install_status
      changed_when: istio_install_status.changed
      failed_when: istio_install_status.rc != 0

    # Wait for pods under istio namespace to come up.
    - name: Check if namespace exists "{{ kserve_istio_namespace }}"
      ansible.builtin.shell: >
        set -o pipefail && \
        kubectl get ns "{{ kserve_istio_namespace }}" 2>&1 | wc -l
      register: istio_namespace_count
      changed_when: false

    - name: Fail if namespace is not present "{{ kserve_istio_namespace }}"
      ansible.builtin.assert:
        that:
          - istio_namespace_count.stdout | int ==2
        fail_msg: "{{ fail_msg_istio_ns }}"

    - name: Verify pods under namespace "{{ kserve_istio_namespace }}"
      block:
        - name: Wait for istio pods to be running in namespace "{{ kserve_istio_namespace }}"
          ansible.builtin.shell: >
            set -o pipefail && \
            kubectl get pods -n '{{ kserve_istio_namespace }}' 2>&1 | grep -v Running | wc -l
          register: istio_command_output
          until: istio_command_output.stdout | int < 2
          retries: "{{ max_attempts }}"
          delay: "{{ wait_time }}"
          changed_when: false
          failed_when: false

        - name: Add to non running namespace list
          ansible.builtin.set_fact.set_fact:
            non_running_pods_ns: "{{ non_running_pods_ns + [kserve_istio_namespace] }}"
          when: istio_command_output.stdout | int >= 2

    # Clean up istio local tar file and extracted folder
    - name: Cleanup istio Extracted folder
      ansible.builtin.command: "rm -rf /tmp/{{ istio_tar_file_name }}-{{ istio_version }}"
      register: command_result
      changed_when: command_result.changed
      failed_when: false

    - name: Cleanup istio tar file
      ansible.builtin.command: "rm -rf {{ istio_tar_file_location }}"
      register: command_result
      changed_when: command_result.changed
      failed_when: false