# Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: Include local repo access variable file
  ansible.builtin.include_vars: "{{ local_repo_access_config_file }}"

- name: Include local_repo_config.yml vars
  ansible.builtin.include_vars: "{{ local_repo_config_file }}"

- name: Load software_config.json as software_config
  ansible.builtin.include_vars:
    file: "{{ software_config_file }}"
    name: software_config

- name: Set facts for cluster
  ansible.builtin.set_fact:
    cluster_os_type: "{{ software_config.cluster_os_type }}"
    cluster_os_version: "{{ software_config.cluster_os_version }}"
    repo_config: "{{ software_config.repo_config }}"

- name: Check if kubeflow entry is present in software_config.json
  ansible.builtin.set_fact:
    kubeflow_present: "{{ software_config['softwares'] | selectattr('name', 'equalto', 'kubeflow') | list | count > 0 }}"

- name: Kubeflow entry is not present in software_config.json
  ansible.builtin.fail:
    msg: "{{ kubeflow_software_failure_msg }}"
  when: not kubeflow_present

- name: Load kubeflow.json
  ansible.builtin.set_fact:
    kubeflow_json: "{{ lookup('file', kubeflow_json_file) | from_json }}"

- name: Configuration istio-int for rhel or rocky
  when: ansible_distribution != 'Ubuntu'
  block:
    - name: Create Istio modules directory
      ansible.builtin.file:
        path: "{{ istio_module_dir }}"
        state: directory
        mode: "{{ file_permission }}"

    - name: Create Istio modules conf file
      ansible.builtin.file:
        path: "{{ istio_module_file }}"
        state: touch
        mode: "{{ file_permission }}"

    - name: Create Istio modules file
      ansible.builtin.blockinfile:
        path: "{{ istio_module_file }}"
        block: |
          br_netfilter
          nf_nat
          xt_REDIRECT
          xt_owner
          iptable_nat
          iptable_mangle
          iptable_filter

    - name: Load kernel modules
      ansible.builtin.command: |
        modprobe -q {{ item }} || modprobe {{ item }}
      with_items:
        - br_netfilter
        - nf_nat
        - xt_REDIRECT
        - xt_owner
        - iptable_nat
        - iptable_mangle
        - iptable_filter
      changed_when: false
