#  Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Jupyterhub deployment
  block:
    - name: Verify Kubernetes is deployed on cluster
      ansible.builtin.command: kubectl get node
      register: k8s_return_code
      changed_when: false
      failed_when: false

    - name: Fail if Kubernetes is not deployed on node
      ansible.builtin.assert:
        that:
          - k8s_return_code.rc == 0
        fail_msg: "{{ k8s_not_deployed }}"

    - name: Verify nfs-client storage class is present
      ansible.builtin.command: kubectl get storageclass nfs-client
      register: nfs_client_return_code
      changed_when: false
      failed_when: false

    - name: Fail if nfs-client storage class is not present
      ansible.builtin.assert:
        that:
          - nfs_client_return_code.rc == 0
        fail_msg: "{{ nfs_storage_not_deployed }}"

    - name: Copy jupyterhub_config.yml file to node
      ansible.builtin.copy:
        src: "{{ role_path }}/../../jupyterhub_config.yml"
        dest: "{{ jupyterhub_config_file_path }}"
        owner: "{{ owner_value }}"
        group: "{{ group_value }}"
        mode: "{{ permission_644 }}"

    - name: Download jupyter helm chart
      ansible.builtin.get_url:
        url: "{{ offline_tarball_path }}/{{ jupyterhub_helm_chart }}"
        dest: "{{ jupyterhub_helm_chart_path }}"
        mode: "{{ permission_644 }}"
      register: download_result
      ignore_errors: true

    - name: Verify download
      ansible.builtin.fail:
        msg: "{{ fail_msg_jupyterhub_helm_chart_download }}"
      when: download_result.failed

    - name: JupyterHub deploy via helm command
      ansible.builtin.command: >
        helm upgrade --cleanup-on-fail \
        --install {{ jupyterhub_release }} {{ jupyterhub_helm_chart_path }} \
        --namespace {{ jupyterhub_namespace }} \
        --create-namespace \
        --values {{ jupyterhub_config_file_path }} \
        --timeout {{ timeout_period }}
      register: helm_command_status
      changed_when: helm_command_status.changed
      failed_when: helm_command_status.rc != 0