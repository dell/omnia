# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Set BMC details status
  ansible.builtin.set_fact:
    bmc_details_status: false

- name: Checking BMC network input
  ansible.builtin.set_fact:
    bmc_details_status: true
  when:
    - network_data.bmc_network.nic_name | default("", true) | length > 0
    - network_data.bmc_network.netmask_bits | default("", true) | length > 0
    - network_data.bmc_network.static_range | default("", true) | length > 0
    - network_data.bmc_network.dynamic_range | default("", true) | length > 0

- name: Set BMC network details
  when:
    - bmc_details_status
  block:
    - name: Set the BMC dynamic start and end range
      ansible.builtin.set_fact:
        bmc_dynamic_start_range: "{{ network_data.bmc_network.dynamic_range | split('-') | first }}"
        bmc_dynamic_end_range: "{{ network_data.bmc_network.dynamic_range | split('-') | last }}"

    - name: Set the BMC static start and end range
      ansible.builtin.set_fact:
        bmc_static_start_range: "{{ network_data.bmc_network.static_range | split('-') | first }}"
        bmc_static_end_range: "{{ network_data.bmc_network.static_range | split('-') | last }}"

    - name: Initialize variables
      ansible.builtin.set_fact:
        bmc_dynamic_status: true
        bmc_static_status: false
        bmc_discover_range_status: "{{ network_data.bmc_network.discover_ranges | default('', true) | length > 1 }}"

    - name: Update bmc_static_status when static range is provided
      ansible.builtin.set_fact:
        bmc_static_status: true
      when:
        - bmc_static_start_range | default("", true) | length > 1
        - bmc_static_end_range | default("", true) | length > 1

    - name: Check bmc network details
      block:
        - name: Execute Python script to validate network address
          ansible.builtin.command: "{{ python_version }} {{ network_address_script }} bmc_network"
          register: script_output
          changed_when: false
          environment:
            net_data: "{{ network_data | to_json }}"
      rescue:
        - name: Failed, Invalid bmc network details
          ansible.builtin.fail:
            msg: "{{ fail_msg_bmc_nic_details }}"

    - name: Validate BMC nic ip status
      ansible.builtin.assert:
        that:
          - script_output.stdout | length > 0
          - script_output.rc == 0
        fail_msg: "{{ fail_msg_bmc_nic_details }}"

    - name: Set bmc_ip
      ansible.builtin.set_fact:
        bmc_nic_ip: "{{ script_output.stdout }}"
        bmc_nic: "{{ network_data.bmc_network.nic_name }}"
      when:
        - script_output.rc == 0

    - name: Assign values to BMC nic
      ansible.builtin.set_fact:
        bmc_nic_subnet: "{{ (bmc_nic_ip + '/' + network_data.bmc_network.netmask_bits) | ansible.utils.ipaddr('network') }}"
        bmc_nic_netmask: "{{ (bmc_nic_ip + '/' + network_data.bmc_network.netmask_bits) | ansible.utils.ipaddr('netmask') }}"
