# Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Include network_spec.yml
  block:
    - name: Include network_spec file
      ansible.builtin.include_vars: "{{ network_spec }}"
      register: include_network_spec
      no_log: true
      tags: init
  rescue:
    - name: Failed to include network_spec.yml
      ansible.builtin.fail:
        msg: "{{ network_spec_syntax_fail_msg }} Error: {{ include_network_spec.message }}"

- name: Parse network_spec data
  ansible.builtin.set_fact:
    network_data: "{{ network_data | default({}) | combine({item.key: item.value}) }}"
  with_dict: "{{ Networks }}"

- name: Set pxe nic static start and end ranges
  ansible.builtin.set_fact:
    pxe_nic_start_range: "{{ network_data.admin_network.static_range | split('-') | first }}"
    pxe_nic_end_range: "{{ network_data.admin_network.static_range | split('-') | last }}"

- name: Set pxe nic dynamic start and end ranges
  ansible.builtin.set_fact:
    pxe_nic_dynamic_start_range: "{{ network_data.admin_network.dynamic_range | split('-') | first }}"
    pxe_nic_dynamic_end_range: "{{ network_data.admin_network.dynamic_range | split('-') | last }}"

- name: Set default admin uncorrelated ip
  ansible.builtin.set_fact:
    admin_uncorrelated_node_start_ip: "{{ pxe_nic_start_range }}"
  when: network_data.admin_network.admin_uncorrelated_node_start_ip | default("", true) | length == 0

- name: Set admin uncorrelated ip
  ansible.builtin.set_fact:
    admin_uncorrelated_node_start_ip: "{{ network_data.admin_network.admin_uncorrelated_node_start_ip }}"
  when: network_data.admin_network.admin_uncorrelated_node_start_ip | default("", true) | length > 0

- name: Check admin network details are valid
  block:
    - name: Execute Python script to validate network address
      ansible.builtin.command: "{{ python_version }} {{ network_address_script }} admin_network"
      register: script_output
      changed_when: false
      environment:
        net_data: "{{ network_data | to_json }}"
  rescue:
    - name: Failed, Invalid admin network details
      ansible.builtin.fail:
        msg: "{{ fail_msg_admin_nic_details }} {{ fail_msg_admin_nic_ip_details }}"

- name: Validate admin nic ip status
  ansible.builtin.assert:
    that:
      - script_output.stdout | length > 0
      - script_output.rc == 0
    fail_msg: "{{ fail_msg_admin_nic_details }} {{ fail_msg_admin_nic_ip_details }}"

- name: Set pxe_nic_ip
  ansible.builtin.set_fact:
    admin_nic_ip: "{{ script_output.stdout }}"
    admin_nic: "{{ network_data.admin_network.nic_name }}"

- name: Set default admin uncorrelated ip
  ansible.builtin.set_fact:
    admin_uncorrelated_node_start_ip: "{{ pxe_nic_start_range }}"
  when: network_data.admin_network.admin_uncorrelated_node_start_ip | default("", true) | length == 0

- name: Set admin uncorrelated ip
  ansible.builtin.set_fact:
    admin_uncorrelated_node_start_ip: "{{ network_data.admin_network.admin_uncorrelated_node_start_ip }}"
  when: network_data.admin_network.admin_uncorrelated_node_start_ip | default("", true) | length > 0

- name: Validate admin correlation
  ansible.builtin.assert:
    that:
      - network_data.admin_network.correlation_to_admin == true or
        network_data.admin_network.correlation_to_admin == false
    fail_msg: "{{ admin_correlation_fail_msg }}"
  when: network_data.admin_network.correlation_to_admin != None

- name: Set default correlation_to_admin status
  ansible.builtin.set_fact:
    correlation_status: false
  when: network_data.admin_network.correlation_to_admin == None

- name: Set correlation_to_admin status
  ansible.builtin.set_fact:
    correlation_status: "{{ network_data.admin_network.correlation_to_admin }}"
  when: network_data.admin_network.correlation_to_admin != None

- name: Assign values to pxe nic
  ansible.builtin.set_fact:
    pxe_nic: "{{ admin_nic }}"
    pxe_nic_ip: "{{ admin_nic_ip }}"
    pxe_nic_subnet: "{{ (admin_nic_ip + '/' + network_data.admin_network.netmask_bits) | ansible.utils.ipaddr('network') }}"
    pxe_nic_netmask: "{{ (admin_nic_ip + '/' + network_data.admin_network.netmask_bits) | ansible.utils.ipaddr('netmask') }}"

- name: Gather the MAC address of admin nic
  ansible.builtin.set_fact:
    pxe_mac_address: "{{ ansible_facts[pxe_nic]['macaddress'] | default(None) }}"
