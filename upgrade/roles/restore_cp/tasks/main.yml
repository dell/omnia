#  Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Validate venv
  ansible.builtin.include_tasks: validate_venv.yml

- name: Validate upgrade_config.yml
  ansible.builtin.include_tasks: validate_upgrade_config.yml

- name: Precheck for restore
  ansible.builtin.include_tasks: restore_precheck.yml

- name: Verify prerequistes for K8s
  ansible.builtin.include_tasks: prerequiste.yml

- name: Include telemetry config vars
  ansible.builtin.include_tasks: include_telemetry_config.yml

- name: Stop omnia_telemetry.service
  ansible.builtin.include_role:
    name: omnia_telemetry
    tasks_from: stop_omnia_telemetry.yml

- name: Cleanup existing K8S cluster
  ansible.builtin.include_tasks: cleanup_k8s.yml

- name: Restore nerdctl
  ansible.builtin.include_tasks: restore_nerdctl.yml

- name: Configure container runtime
  ansible.builtin.include_role:
    name: "{{ playbook_dir }}/../telemetry/roles/orchestrator" # noqa:role-name[path]
    tasks_from: container_runtime.yml

- name: Deploy K8s
  ansible.builtin.include_role:
    name: "{{ playbook_dir }}/../telemetry/roles/orchestrator" # noqa:role-name[path]
    tasks_from: deploy_k8s.yml
  vars:
    software_config_file: "{{ installed_omnia_path }}/input/software_config.json"

- name: Restore etcd
  ansible.builtin.include_tasks: etcd.yml
  when: check_etcd_backup.stat.exists

- name: Check for pods presence after restoring etcd
  ansible.builtin.include_tasks: pod_check.yml

- name: Restore timescaledb and idrac telemetry pods
  ansible.builtin.include_tasks: timescaledb.yml
  when: timescale_pod_status_flag or idrac_telemetry_pod_status_flag

- name: Restore and start omnia_telemetry.service
  ansible.builtin.include_role:
    name: omnia_telemetry
    tasks_from: replace_and_start.yml
    apply:
      vars:
        binary_files_path: "/opt/omnia/telemetry/dist/omnia_telemetry"

- name: Restore omnia service
  ansible.builtin.include_role:
    name: "{{ installed_omnia_path }}/discovery/roles/monitor_thread" # noqa: role-name[path]
    tasks_from: initiate_monitor_status.yml

- name: Restore omnia_inventory files
  ansible.builtin.copy:
    src: "{{ backup_location }}/omnia_inventory/"
    dest: "{{ omnia_inv_path }}"
    mode: "{{ file_permission }}"
  when: omnia_inv_stat.stat.exists
