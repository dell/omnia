# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Warning - BMC dynamic and discover ranges should not overlap.
  ansible.builtin.pause:
    seconds: "{{ warning_wait_time_bmc }}"
    prompt: "{{ bmc_ranges_overlap_msg }}"

- name: Validate input ranges for all ranges
  ansible.builtin.command: >-
    {{ python_version }} {{ validation_range_file }} {{ bmc_static_start_range }} {{ bmc_static_end_range }} {{ bmc_dynamic_start_range }} {{ bmc_dynamic_end_range }}
  register: range_validation_status
  changed_when: true

- name: Fail if ranges overlap
  ansible.builtin.fail:
    msg: "{{ bmc_static_ranges_fail_msg }}"
  when: '"True" in range_validation_status.stdout'

- name: Status of input ranges validation
  ansible.builtin.assert:
    that:
      - "'False' in range_validation_status.stdout"
    success_msg: "{{ bmc_static_ranges_success_msg }}"
  failed_when: false

- name: Fail if ranges are not in valid format
  ansible.builtin.fail:
    msg: "{{ bmc_static_range_mismatch_msg }}"
  when: range_mismatch_key in range_validation_status.stdout

- name: Set value if bmc discover range is empty
  ansible.builtin.set_fact:
    discover_ranges: 0.0.0.0
  when: not bmc_discover_range_status

- name: Set value if bmc discover range is empty
  ansible.builtin.set_fact:
    discover_ranges: "{{ network_data.bmc_network.discover_ranges }}"
  when: bmc_discover_range_status