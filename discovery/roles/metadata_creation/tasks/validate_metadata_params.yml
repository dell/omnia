# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Include metadata.yml file
  ansible.builtin.include_vars: "{{ meta_path }}"
  no_log: true

- name: Validate admin static and dynamic range
  ansible.builtin.assert:
    that:
      - (pxe_nic_start_range == md_admin_static_start_range)
      - (pxe_nic_end_range == md_admin_static_end_range)
      - (pxe_nic_dynamic_start_range == md_admin_dynamic_start_range)
      - (pxe_nic_dynamic_end_range == md_admin_dynamic_end_range)
    success_msg: "{{ ranges_success_msg }}"
    fail_msg: "{{ ranges_fail_msg }}"
  when:
    - md_admin_static_start_range is defined
    - md_admin_static_end_range is defined
    - md_admin_dynamic_start_range is defined
    - md_admin_dynamic_end_range is defined

- name: Validate pxe_nic_subnet
  ansible.builtin.assert:
    that:
      - pxe_nic_subnet == md_admin_nic_subnet
    success_msg: "{{ admin_nic_subnet_success_msg }}"
    fail_msg: "{{ admin_nic_subnet_fail_msg }}"
  when: md_admin_nic_subnet is defined

- name: Validate admin netmask_bits
  ansible.builtin.assert:
    that:
      - network_data.admin_network.netmask_bits | int == md_netmask_bits
    success_msg: "{{ netmask_bits_success_msg }}"
    fail_msg: "{{ netmask_bits_fail_msg }}"

- name: Validate BMC parameters
  when: bmc_details_status
  block:
    - name: Validate BMC static and dynamic range
      ansible.builtin.assert:
        that:
          - (bmc_static_start_range == md_bmc_static_start_range)
          - (bmc_static_end_range == md_bmc_static_end_range)
          - (bmc_dynamic_start_range == md_bmc_dynamic_start_range)
          - (bmc_dynamic_end_range == md_bmc_dynamic_end_range)
        success_msg: "{{ ranges_success_msg }}"
        fail_msg: "{{ ranges_fail_msg }}"
      when:
        - md_bmc_static_start_range is defined
        - md_bmc_static_end_range is defined
        - md_bmc_dynamic_start_range is defined
        - md_bmc_dynamic_end_range is defined

    - name: Validate bmc_nic_subnet
      ansible.builtin.assert:
        that:
          - bmc_nic_subnet == md_bmc_nic_subnet
        success_msg: "{{ md_bmc_nic_subnet_success_msg }}"
        fail_msg: "{{ md_bmc_nic_subnet_fail_msg }}"
      when:
        - md_bmc_nic_subnet is defined

    - name: Validate bmc netmask_bits
      ansible.builtin.assert:
        that:
          - network_data.bmc_network.netmask_bits | int == md_netmask_bits
        success_msg: "{{ netmask_bits_success_msg }}"
        fail_msg: "{{ netmask_bits_fail_msg }}"
      when:
        - md_netmask_bits is defined
