# Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Configure default postscripts
  ansible.builtin.command: chdef all postscripts="syslog,remoteshell,syncfiles"
  changed_when: true

- name: Configure ubuntu postscripts
  ansible.builtin.include_tasks: "{{ role_path }}/../{{ control_plane_os }}/tasks/configure_postscripts.yml"
  when: control_plane_os in control_plane_os_ubuntu

- name: Configure ntp postscripts
  ansible.builtin.include_tasks: configure_postscripts_ntp.yml

- name: Copy hostname script to postscripts
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
  with_items: "{{ hostname_postscripts_path }}"

- name: Configure postscripts to configure hostname
  ansible.builtin.command: chdef all -p postscripts=omnia_hostname
  changed_when: true

- name: Verify OFED repo created
  ansible.builtin.stat:
    path: "{{ mlnx_ofed_repo }}/{{ mlnx_ofed_path.split('/')[-1] }}"
  register: ofed_repo_stat
  when: ofed_config_status

- name: Configure postscripts for OFED
  ansible.builtin.command: chdef all -p postscripts=omnia_ofed
  changed_when: true
  when:
    - ofed_config_status
    - ofed_repo_stat.stat.exists

- name: Verify CUDA repo created
  ansible.builtin.stat:
    path: "{{ cuda_core_path }}"
  register: cuda_repo_stat
  when: cuda_config_status

- name: Configure postscripts for CUDA
  ansible.builtin.command: chdef all -p postscripts=omnia_cuda
  changed_when: true
  when:
    - cuda_config_status
    - cuda_repo_stat.stat.exists

- name: Configure ROCm postscripts for ubuntu
  when:
    - provision_os in provision_os_ubuntu
    - amdgpu_config_status
  block:
    - name: Configure postscripts for ROCm
      ansible.builtin.command: chdef all -p postbootscripts=omnia_rocm
      changed_when: true
      when:
        - provision_os_version == '22.04'
        - ubuntu_kernel_flavor | default("generic", true) == 'generic'

    - name: Configure postscripts for ROCm
      ansible.builtin.command: chdef all -p postscripts=omnia_rocm
      changed_when: true
      when:
        - provision_os_version == '22.04'
        - ubuntu_kernel_flavor | default("generic", true) == 'hwe'

    - name: Configure postscripts for ROCm
      ansible.builtin.command: chdef all -p postscripts=omnia_rocm
      changed_when: true
      when:
        - provision_os_version == '20.04'

- name: Configure ROCm postscripts for RHEL and Rocky
  when:
    - provision_os not in provision_os_ubuntu
    - amdgpu_config_status
  block:
    - name: Configure postscripts for ROCm
      ansible.builtin.command: chdef all -p postscripts=omnia_rocm
      changed_when: true

- name: Copy CPU GPU info script to postscripts
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
  with_items: "{{ cpu_gpu_info_postscripts_path }}"

- name: Configure postscripts to get cpu info
  ansible.builtin.command: chdef all -p postscripts=omnia_cpu_gpu_info
  changed_when: true

- name: Configure RoCE postscripts for ubuntu
  when:
    - roce_config_status
  block:
    - name: Configure postscripts for RoCE
      ansible.builtin.command: chdef all -p postbootscripts=omnia_roce
      changed_when: true
      when:
        - provision_os_version == '22.04'
        - ubuntu_kernel_flavor | default("generic", true) == 'generic'

    - name: Configure postscripts for RoCE
      ansible.builtin.command: chdef all -p postscripts=omnia_roce
      changed_when: true
      when:
        - provision_os_version == '22.04'
        - ubuntu_kernel_flavor | default("generic", true) == 'hwe'

    - name: Configure postscripts for RoCE
      ansible.builtin.command: chdef all -p postscripts=omnia_roce
      changed_when: true
      when:
        - provision_os_version == '20.04'

- name: Configure reboot scripts for ubuntu
  when:
    - provision_os in provision_os_ubuntu
    - provision_os_version == '22.04'
    - ubuntu_kernel_flavor | default("generic", true) == 'generic'
  block:
    - name: Copy reboot script to postscripts
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode }}"
      with_items: "{{ ubuntu_reboot_script_path }}"

    - name: Configure reboot postbootscript
      ansible.builtin.command: chdef all -p postbootscripts="omnia_reboot"
      changed_when: true
      when:
        - roce_config_status or amdgpu_config_status
