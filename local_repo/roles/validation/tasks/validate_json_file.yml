# Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---


- name: Read JSON file
  ansible.builtin.include_vars:
    file: "{{ json_file.path }}"
  register: json_data

- name: Extract filename without extension
  ansible.builtin.set_fact:
    file_basename: "{{ json_file.path | basename | splitext | first }}"

- name: Check if software name key exists
  ansible.builtin.assert:
    that:
      - file_basename in json_data.ansible_facts
    fail_msg: "{{ software_key_fail_msg }}"

- name: Initialize subgroup_names as an empty list
  ansible.builtin.set_fact:
    subgroup_names: []

- name: Extract subgroup with file basename
  ansible.builtin.set_fact:
    subgroup_names: "{{ software_config[file_basename] | map(attribute='name') | select('defined') | list }}"
  when: software_config[file_basename] is defined
  # noqa: var-naming[no-jinja]

- name: Append the basename with subgroup
  ansible.builtin.set_fact:
    subgroup_with_basename: "{{ subgroup_names | default([]) + [file_basename] }}"

- name: Validate subgroup JSON file
  ansible.builtin.include_tasks: validate_json_subgroup_file.yml
  loop: "{{ subgroup_with_basename }}"
  loop_control:
    loop_var: item
  vars:
    subgroup_basename: "{{ item }}"
