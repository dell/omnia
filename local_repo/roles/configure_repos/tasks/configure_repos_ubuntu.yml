# Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: Delete /etc/apt/custom_sources if it exists
  ansible.builtin.file:
    path: "{{ custom_repo_path }}"
    state: absent

- name: Create /etc/apt/custom_sources
  ansible.builtin.file:
    path: "{{ custom_repo_path }}"
    state: directory
    mode: "{{ dir_mode }}"

- name: Create /etc/apt/custom_sources/sources.list.d
  ansible.builtin.file:
    path: "{{ ubuntu_repo_dest }}"
    state: directory
    mode: "{{ dir_mode }}"

- name: Create /etc/apt/custom_sources/preference.d
  ansible.builtin.file:
    path: "{{ preference_path }}"
    state: directory
    mode: "{{ dir_mode }}"

- name: Create /etc/apt/custom_sources/trusted.gpg
  ansible.builtin.file:
    path: "{{ trusted_file_path }}"
    state: touch
    mode: "{{ file_mode }}"

# Configure Omnia Repos and User Repos
- name: Configure Omnia Repositories
  ansible.builtin.template:
    src: "{{ ubuntu_omnia_repo_src }}"
    dest: "{{ ubuntu_repo_dest }}/omnia_repo{{ item.0 + 1 }}.list"
    mode: "{{ file_mode }}"
  with_indexed_items: "{{ omnia_repo_url_ubuntu }}"
  when: item.1.url is defined and software_config_default not in item.1.url

- name: Download GPG keys for each omnia repository
  ansible.builtin.shell:
    cmd: " set -o pipefail | wget -qO - {{ item.1.gpgkey }} | sudo apt-key --keyring {{ trusted_file_path }} add -"
  with_indexed_items: "{{ omnia_repo_url_ubuntu }}"
  when: item.1.gpgkey is defined and item.1.gpgkey != '' and software_config_default not in item.1.url
  changed_when: false

- name: Download Public key for each omnia repository
  ansible.builtin.shell:
    cmd: " set -o pipefail | wget -qO - {{ item.1.publickey }} | sudo apt-key --keyring {{ trusted_file_path }} add -"  # noqa command-instead-of-module
  with_indexed_items: "{{ omnia_repo_url_ubuntu }}"
  when: item.1.publickey is defined and item.1.publickey != '' and software_config_default not in item.1.url
  changed_when: false

- name: Configure user Repositories
  ansible.builtin.template:
    src: "{{ ubuntu_user_repo_src }}"
    dest: "{{ ubuntu_repo_dest }}/a_user_repo{{ item.0 + 1 }}.list"
    mode: "{{ file_mode }}"
  with_indexed_items: "{{ user_repo_url }}"
  when: item.1.url is defined

- name: Download and add GPG keys for each user repository
  ansible.builtin.shell:
    cmd: " set -o pipefail | wget -qO - {{ item.1.gpgkey }} | sudo apt-key --keyring {{ trusted_file_path }} add -"
  with_indexed_items: "{{ user_repo_url }}"
  when: item.1.gpgkey is defined and item.1.gpgkey != ''
  changed_when: false

- name: Execute apt update on /etc/apt/custom_sources/sources.list.d
  block:
    - name: Create apt.conf file
      ansible.builtin.template:
        src: "{{ apt_conf_src }}"
        dest: "{{ apt_conf_dest }}"
        mode: "{{ file_mode }}"

    - name: Update packages for /etc/apt/custom_sources/sources.list.d
      ansible.builtin.command: apt update
      changed_when: false

  rescue:
    - name: Delete apt.conf file
      ansible.builtin.file:
        path: "{{ apt_conf_dest }}"
        state: absent

    - name: Update cache failure
      ansible.builtin.fail:
        msg: "{{ apt_update_failure_msg }}"

- name: Delete apt.conf file
  ansible.builtin.file:
    path: "{{ apt_conf_dest }}"
    state: absent

- name: Update package lists
  ansible.builtin.apt:
    update_cache: true

- name: When repo config is partial
  ansible.builtin.include_tasks: configure_repos_ubuntu_partial.yml
  when: repo_config == 'partial'
