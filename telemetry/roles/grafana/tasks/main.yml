# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Check if telemetry entry is present in software_config.json
  when: telemetry_entry_present
  block:
    - name: Initiate grafana installation if visualization_support is true
      when: visualization_support
      block:
        - name: Check if grafana is already up and running
          ansible.builtin.include_tasks: install_check.yml

        - name: Initiate installation of grafana
          when: install_grafana
          block:
            - name: Pre-requisites for grafana
              ansible.builtin.include_tasks: pre-requisites.yml

            - name: Create k8s secrets for grafana
              ansible.builtin.include_tasks: secrets.yml

            - name: Create persistent volume for grafana
              ansible.builtin.include_tasks: volume.yml

            - name: Create grafana pod
              ansible.builtin.include_tasks: deployment.yml

            - name: Add grafana-plugins for visualization
              ansible.builtin.include_tasks: plugins.yml

        - name: Check running pods to see if idrac visualizations need to be setup
          ansible.builtin.command: kubectl get pods -A
          changed_when: false
          register: kubectl_output

        - name: Get grafana service IP
          ansible.builtin.command: kubectl get svc "{{ grafana_k8s }}" -n "{{ grafana_namespace }}" -o=jsonpath='{.spec.clusterIP}'
          changed_when: false
          register: grafana_svc_ip

        - name: Get grafana service port
          ansible.builtin.command: kubectl get svc "{{ grafana_k8s }}" -n "{{ grafana_namespace }}" -o=jsonpath='{.spec.ports[0].port}'
          changed_when: false
          register: grafana_svc_port
