#  Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

min_retries: 3
max_retries: 10
min_delay: 10
wait_time: 30
retry_count: 3

ubuntu_os: "ubuntu"
# Container runtime configuration
runc_url: "{{ offline_tarball_path }}/runc.amd64.tar.gz"
runc_dest: "/usr/local/bin/runc"
runc_permission: "+x"

crictl_url: "{{ offline_tarball_path }}/cri-tools-v1.26.1.tar.gz"
crictl_archive_dest: /tmp/cri-tools-v1.26.1.tar.gz
crictl_dest: /usr/local/bin/
crictl_permission: "+x"
cri_socket: "unix:///var/run/containerd/containerd.sock"
permission_644: "0644"
kubespray_path: "/opt/omnia/kubespray"

# Usage: k8s_secrets.yml
namespace: telemetry-and-visualizations
secrets_name: credentials
mysqldb_secrets_name: mysqldb-credentials

# Usage: firewalld_config.yml
k8s_master_ports:
  - 6443/tcp
  - 2379-2380/tcp
  - 10250/tcp
  - 10251/tcp
  - 10252/tcp
  - 10255/tcp
  - 8472/udp
  - 5000/tcp
  - 3306/tcp
  - 30000-32767/tcp
calico_udp_ports:
  - 4789
calico_tcp_ports:
  - 5473
  - 179
loki_port: 3100

nerdctl_registry_restart_fail_msg: "nerdctl-registry service failed to restart"

# helm
helm_stable_repo_url: https://charts.helm.sh/stable
# dashboard
k8s_dashboard_yaml_url: https://raw.githubusercontent.com/kubernetes/dashboard/v2.2.0/aio/deploy/recommended.yaml
k8s_dashboard_admin_file_dest: /opt/omnia/k8s_dashboard_admin.yaml
k8s_dashboard_admin_file_mode: "0655"

fail_msg_kubespray_not_found: "Kubespray git tar file not found in local repo."
fail_msg_kubespray: "kubernetes installation on control plane failed."
# Containerd configuration required by K8s on Control plane installation with deploy_container_engine value as false
containerd_bin_dir: "/usr/bin"
bin_dir: "/usr/local/bin"
containerd_storage_dir: "/var/lib/containerd"
containerd_state_dir: "/run/containerd"
containerd_systemd_dir: "/etc/systemd/system/containerd.service.d"
containerd_cfg_dir: "/etc/containerd"
containerd_additional_runtimes: []
containerd_base_runtime_specs:
  cri-base.json: "{{ containerd_default_base_runtime_spec | combine(containerd_default_base_runtime_spec_patch, recursive=1) }}"
containerd_default_base_runtime_spec_patch:
  process:
    rlimits:
      - type: RLIMIT_NOFILE
        hard: "{{ containerd_base_runtime_spec_rlimit_nofile }}"
        soft: "{{ containerd_base_runtime_spec_rlimit_nofile }}"
containerd_base_runtime_spec_rlimit_nofile: 65535
containerd_grpc_max_recv_message_size: 16777216
containerd_grpc_max_send_message_size: 16777216
containerd_debug_level: "info"
containerd_metrics_address: ""
containerd_metrics_grpc_histogram: "false"
pod_infra_image_repo: "registry.k8s.io/pause"
pod_infra_image_tag: "3.9"
containerd_max_container_log_line_size: -1
containerd_enable_unprivileged_ports: "false"
containerd_enable_unprivileged_icmp: "false"
containerd_default_runtime: "runc"
containerd_snapshotter: "overlayfs"
containerd_use_systemd_cgroup: true
containerd_runc_runtime:
  name: runc
  type: "io.containerd.runc.v2"
  engine: ""
  root: ""
  base_runtime_spec: cri-base.json
  options:
    systemdCgroup: "{{ containerd_use_systemd_cgroup | ternary('true', 'false') }}"
    binaryName: "{{ bin_dir }}/runc"
