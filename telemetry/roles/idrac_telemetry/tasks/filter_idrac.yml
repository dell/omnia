# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: iDRAC count incrementer
  set_fact:
    idrac_awx_count: "{{ idrac_awx_count | int + 1 }}"
    datacenter_license: false
    firmware_version: false

- name: Set iDRAC IP list when awx_web_support is true
  set_fact:
      awx_idrac: "{{ awx_idrac + [ idrac_inventory_jsondata['results'][idrac_index].name ] }}"
  when: awx_web_support

- name: Set iDRAC IP list when awx_web_support is false
  set_fact:
      awx_idrac: "{{ awx_idrac + [ item ] }}"
  when: not awx_web_support

- name: Filter iDRAC
  block:
  - name: Get system inventory with awx_web_support set to true
    dellemc.openmanage.idrac_system_info:
      idrac_ip: "{{ idrac_inventory_jsondata['results'][idrac_index].name }}"
      idrac_user: "{{ idrac_username }}"
      idrac_password: "{{ idrac_password }}"
    register: idrac_system_info_awx
    when: awx_web_support

  - name: Get system inventory with awx_web_support set to false
    dellemc.openmanage.idrac_system_info:
      idrac_ip: "{{ item }}"
      idrac_user: "{{ idrac_username }}"
      idrac_password: "{{ idrac_password }}"
    register: idrac_system_info_cli
    when: not awx_web_support

  - name: Set fact for idrac_system_info
    set_fact:
      idrac_system_info: "{{ idrac_system_info_awx }}"
    when: awx_web_support

  - name: Set fact for idrac_system_info
    set_fact:
      idrac_system_info: "{{ idrac_system_info_cli }}"
    when: not awx_web_support

  - name: Check datacenter license status
    set_fact:
      datacenter_license: true
    with_items: "{{ idrac_system_info.system_info.License }}"
    loop_control:
      index_var: index
      label: "{{ idrac_system_info.system_info.License[index].LicenseDescription }}"
    when:
      - '"iDRAC9" in idrac_system_info.system_info.License[index].LicenseDescription'
      - '"Data" in idrac_system_info.system_info.License[index].LicenseDescription'
      - '"License" in idrac_system_info.system_info.License[index].LicenseDescription'
      - '"Healthy" in idrac_system_info.system_info.License[index].PrimaryStatus'

  - name: Filter iDRAC with supported firmware version 
    block:
    - name: Get firmware version with awx_web_support set to true
      dellemc.openmanage.idrac_firmware_info:
        idrac_ip:   "{{ idrac_inventory_jsondata['results'][idrac_index].name }}"
        idrac_user: "{{ idrac_username }}"
        idrac_password:  "{{ idrac_password }}"
      register: idrac_firmware_info_awx
      when: awx_web_support

    - name: Get firmware version with awx_web_support set to false
      dellemc.openmanage.idrac_firmware_info:
        idrac_ip:   "{{ item }}"
        idrac_user: "{{ idrac_username }}"
        idrac_password:  "{{ idrac_password }}"
      register: idrac_firmware_info_cli
      when: not awx_web_support

    - name: Set fact for idrac_system_info
      set_fact:
        idrac_firmware_info: "{{ idrac_firmware_info_awx }}"
      when: awx_web_support

    - name: Set fact for idrac_system_info
      set_fact:
        idrac_firmware_info: "{{ idrac_firmware_info_cli }}"
      when: not awx_web_support

    - name: Set firmware version status
      set_fact:
        firmware_version: true
      with_items: "{{ idrac_firmware_info.firmware_info.Firmware }}"
      loop_control:
        index_var: index
        label: "{{ idrac_firmware_info.firmware_info.Firmware[index].FQDD }}"
      when:
          - '"iDRAC" in idrac_firmware_info.firmware_info.Firmware[index].FQDD'
          - (idrac_firmware_info.firmware_info.Firmware[index].MajorVersion | int) > min_firmware_version_reqd
    when: datacenter_license is true

  rescue:
    - name: iDRAC check list when awx_web_support is set to true
      set_fact:
        failed_idrac: "{{ failed_idrac + [ idrac_inventory_jsondata['results'][idrac_index].name ] }}"
      when: awx_web_support

    - name: iDRAC check list when awx_web_support is set to false
      set_fact:
        failed_idrac: "{{ failed_idrac + [ item ] }}"
      when: not awx_web_support

- name: Set variables for filtered iDRACs
  block:
  - name: Set iDRAC list When awx_web_support is set to true
    set_fact:
      telemetry_idrac: "{{ telemetry_idrac + [ idrac_inventory_jsondata['results'][idrac_index].name ] }}"
    when: awx_web_support
  
  - name: Set iDRAC list when awx_web_support is set to false
    set_fact:
      telemetry_idrac: "{{ telemetry_idrac + [ item ] }}"
    when: not awx_web_support

  - name: Set counter value
    set_fact:
      filtered_idrac_count: "{{ filtered_idrac_count | int + 1 }}"
  when:
  - datacenter_license is true
  - firmware_version is true
