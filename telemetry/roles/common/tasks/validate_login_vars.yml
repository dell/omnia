# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Check login_vars.yml file is encrypted
  command: cat {{ login_vars_file }}
  changed_when: false
  register: config_content
  no_log: true

- name: Decrpyt login_vars.yml
  command: >-
    ansible-vault decrypt {{ login_vars_file }}
    --vault-password-file {{ vault_filename }}
  changed_when: false
  when: "'$ANSIBLE_VAULT;' in config_content.stdout"

- name: Include variable file login_vars.yml
  include_vars: "{{ login_vars_file }}"
  no_log: true

- name: Assert usernames and passwords in login_vars.yml
  block:
  - name: Assert timescaledb user name
    assert:
      that: timescaledb_user | length > 1
    no_log: true

  - name: Assert timescaledb user password
    assert:
      that: timescaledb_password | length > 1
    no_log: true

  - name: Assert mysqldb user name
    assert:
      that: mysqldb_user | length > 1
    no_log: true

  - name: Assert mysqldb user password
    assert:
      that: mysqldb_password | length > 1
    no_log: true

  - name: Assert mysqldb root user password
    assert:
      that: mysqldb_root_password | length > 1
    no_log: true

  rescue:
    - name: Validation issue in login/vars.yml
      fail:
        msg: "{{ login_vars_fail_msg }}"

- name: Create ansible vault key
  set_fact:
    vault_key: "{{ lookup('password', '/dev/null chars=ascii_letters') }}"
  when: "'$ANSIBLE_VAULT;' not in config_content.stdout"

- name: Save vault key
  copy:
    dest: "{{ vault_filename }}"
    content: |
      {{ vault_key }}
    owner: root
    force: yes
    mode: "{{ vault_file_perm }}"
  when: "'$ANSIBLE_VAULT;' not in config_content.stdout"

- name: Encrypt input config file
  command: >-
    ansible-vault encrypt {{ login_vars_file }}
    --vault-password-file {{ vault_filename }}
  changed_when: false
