# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

# Mandatory
# This variable is used to depict the network type for the omnia cluster
# Lom is supported by discovery_mechanism: mapping, bmc and switch_based
# Dedicated is supported by discovery_mechanism: mapping and snmpwalk
# Accepted values: lom, dedicated
# Default value: lom
network_interface_type: "lom"

# Mandatory
# If lom, discovery_mechanism can be switch_based or mapping or bmc
# If dedicated, discovery_mechanism can be mapping or snmpwalk.
# This will specify the mechanism through which Omnia will discover nodes for provisioning.
# mapping indicates that the user has provided a valid mapping file path with details regarding MAC ID of the NIC, IP address and hostname.
# bmc indicates the servers in the cluster will be discovered by Omnia using BMC.
# bmc requirement is user should enable IPMI over LAN in iDRAC settings if the iDRACs are in static mode.
# snmpwalk indicates Omnia will discover the nodes based on the switch IP (to which the cluster servers are connected) provided. SNMP should be enabled on the switch.
# switch_based uses snmp v3 to find and provision servers connected on particular ports of a switch.SNMPv3 should be enabled on switches.
# Accepted values: mapping, bmc, snmpwalk, switch_based
# Default: switch_based
discovery_mechanism: "switch_based"

#### Mandatory, discovery_mechanism: mapping or switch_based or bmc or snmpwalk
# This is the operating system image that will be used for provisioning compute nodes in the cluster.
# Accepted values: rocky, rhel
# Default value: "rhel"
provision_os: "rhel"

#### Mandatory, discovery_mechanism: mapping or switch_based or bmc or snmpwalk
# OS version of provision_os to be installed
# Supported values for rhel/rocky: 8.0, 8.1, 8.2, 8.3, 8.4, 8.5, 8.6, 8.7
provision_os_version: 8.6

#### Mandatory, discovery_mechanism: mapping or switch_based or bmc or snmpwalk
# Path where user has placed the iso image that needs to be provisioned on target nodes.
# The iso file should be Rocky8-DVD or RHEL-8.x-DVD (full OS).
# iso_file_path should contain provision_os and provision_os_version values in filename
iso_file_path: "/home/RHEL-8.6.0-20220420.3-x86_64-dvd1.iso"

#### Mandatory, discovery_mechanism: mapping or switch_based or bmc or snmpwalk
# Timezone that needs to be set during OS provisioning.
# Available timezones are provided in provision/roles/provision_validation/files/timezone.txt
# Default: "GMT"
# Few accepted values: EST,CET,MST,CST6CDT,PST8PDT
timezone: "GMT"

#### Mandatory, discovery_mechanism: mapping or switch_based or bmc or snmpwalk
# Language that needs to be set during OS provisioning.
# Default language supported is "en-US"
language: "en-US"

#### Mandatory, discovery_mechanism: mapping or switch_based or bmc or snmpwalk
# Default lease time needs to be used by DHCP
# Unit: seconds
# Min: 21600
# Default: 86400
# Max: 31536000
default_lease_time: "86400"

#### Mandatory, discovery_mechanism: mapping or switch_based or bmc or snmpwalk
# Password that needs to be set during OS provisioning for root users.
# Length >= 8 characters
# Password must not contain -,\, ',"
provision_password: ""

#### Mandatory, discovery_mechanism: mapping or switch_based or bmc or snmpwalk
# Password that needs to be set for postgres database.
# Length >= 8 characters
# Password should contain only alphanumeric characters
postgresdb_password: ""

#### Mandatory, discovery_mechanism: switch_based or bmc or snmpwalk
# If, discovery_mechanism: mapping , the hostname is part of mapping file (pxe_mapping_file_path).
# Prefix for the node names, if needed to be dynamically allocated.
# Hostname = node_name + '0000x' + domain_name
# Hostname <= 65 characters.
# Example: servernode00001.Omnia.test , where node_name=servernode, domain_name=Omnia.test , 00001 used by Omnia
node_name: "node"

#### Mandatory, discovery_mechanism: mapping or switch_based or bmc or snmpwalk
# Domain name the user intends to configure on the cluster.
# Please provide a valid domain name according to the domain name standards.
# Hostname = node_name + '0000x' + domain_name
# Hostname <= 65 characters.
# Example: servernode00001.Omnia.test ,where node_name=servernode ,domain_name=Omnia.test ,00001 used by Omnia
# Examples: abcd.test, ipa.test
domain_name: ""

#### Mandatory, discovery_mechanism: mapping or switch_based or bmc or snmpwalk
### Public NIC of Control Plane
# The nic/ethernet card that is connected to the public internet.
public_nic: "eno2"

#### Mandatory, discovery_mechanism: mapping or switch_based or bmc or snmpwalk
### Admin NIC of Control Plane
# This is the shared LOM nic.
# Default value: "eno1"
admin_nic: "eno1"

#### Mandatory, discovery_mechanism: mapping or switch_based or bmc or snmpwalk
# Only last 16 bits/2 octets of IPv4 are dynamic
# Default value: "10.5.0.0"
admin_nic_subnet: "10.5.0.0"

#### Mandatory, discovery_mechanism: mapping
## PXE mapping file path details
# The mapping file consists of the MAC address and its respective IP address and Hostname.
# Only last 16 bits/2 octets of IPv4 can be dynamic
# Ensure that IPs given in mapping file are within the pxe_subnet provided above
# A templates for mapping file exists in Omnia/examples and is named as pxe_mapping_file.csv
# This depicts the path where user has kept the mapping file for DHCP configurations.
# Format of csv: MAC,Hostname,IP
# Example: xx:yy:zz:aa:bb:cc,server,172.17.0.5
pxe_mapping_file_path: ""

#### Mandatory, discovery_mechanism: switch_based
# Ports indicates where port no. where the servers are connected.
# If split port is needed, use colon (:) as shown in example below.
# Example1:
#   - { ip: 172.96.28.12, ports: '1-48,49:3,50' }
# Example2 with 2 switches:
#   - { ip: 172.96.28.12, ports: '1-48,49:3,50' }
#   - { ip: 172.96.28.14, ports: '1,2,3,5' }
switch_based_details:
  - { ip: , ports: '' }

#### Mandatory, discovery_mechanism: switch_based
# If multiple switches are provided, these credentials should be same across all the switches.
# The username and password must not contain -,\, ',"
switch_snmp3_username: ""
switch_snmp3_password: ""

#### Mandatory, discovery_mechanism: switch_based
# This indicated the IP ranges for all the NICs (Admin, BMC, IB).
# Example:
# If ip_start_range: "x.y.0.1" and ip_end_range: "x.y.0.255" and admin_nic_subnet: "10.5.0.0",
# admin_nic_start_range: "10.5.0.1" and admin_nic_end_range: "10.5.0.255"
ip_start_range: "x.y.0.1"
ip_end_range: "x.y.0.255"

#### Optional, discovery_mechanism: mapping or snmpwalk or bmc
## IB NIC Details
# If provided, Omnia will handle and assign static IPs to compute node's IB network.
# Only last 16 bits/2 octets of IPv4 are dynamic
# If provided the db entry will be in parallel with the pxe_subnet.
# Example: If admin_ip: 10.5.0.50 and ib_nic_subnet: 10.10.0.0, then ib_ip: 10.10.0.50
# Make sure ib nics having ib as prefix
# Example: 10.10.0.0
ib_nic_subnet: ""

#### Optional, discovery_mechanism: mapping or switch_based or snmpwalk
#### Mandatory, discovery_mechanism: bmc
## BMC NIC of Control Plane
# If provided, Omnia will handle and assign IPs to the iDRACs.
# Only last 16 bits/2 octets of IPv4 are dynamic
# If provided the db entry will be in parallel with either the pxe_subnet or whatever is provided in mapping file.
# Example: If admin_ip: 10.5.0.101 and bmc_nic_subnet: 10.3.0.0, then bmc_ip: 10.3.0.101
# Example: 10.3.0.0
bmc_nic_subnet: ""

#### Mandatory, discovery_mechanism: bmc, switch_based
# The username for idrac
# The username must not contain -,\, ',"
bmc_username: ""

#### Mandatory, discovery_mechanism: bmc, switch_based
# Password used for idrac
# The password must not contain -,\, ',"
bmc_password: ""

#### Mandatory, discovery_mechanism: bmc
# The dhcp range for discovering the static IP assigned iDRACs within the given range.
# For the range 10.3.0.50 to 10.3.4.100 then, bmc_static_start_range: 10.3.0.50, bmc_static_end_range: 10.3.4.100
# To create a meaningful range of discovery, ensure that the last two octets of ``bmc_static_end_range`` are equal to or greater than the last two octets of the ``bmc_static_start_range``. That is, for the range a.b.c.d - a.b.e.f, e and f should be greater than or equal to c and d.
# Ex: 172.20.0.50 - 172.20.1.101 is a valid range however, 172.20.0.101 - 172.20.1.50 is not.
bmc_static_start_range: ""
bmc_static_end_range: ""

#### Mandatory, discovery_mechanism: snmpwalk
# PXE switch that will be connected to all iDRACs for provisioning
# Ensure that SNMP is enabled on the mentioned switch.
pxe_switch_ip: ""
pxe_switch_snmp_community_string: "public"

#### Optional, discovery_mechanism:mapping or switch_based or bmc or snmpwalk
# The DNS servers IP addresses for internet access on compute nodes(through DHCP routing)
# If empty, a separate public internet nic should be present in compute nodes for internet access.
primary_dns: ""
secondary_dns: ""

#### Optional, discovery_mechanism: mapping or switch_based or bmc or snmpwalk
# User defined disk partition applied to remote servers
# Unit: MB
# Accepted mount_point: /home, /var, /tmp, /usr, swap
# Default partition size provided for /boot: 1024MB, /boot/efi: 256MB and remaining space to / partition.
# Example for disk_partition:
# disk_partition:
#   - { mount_point: "/home", desired_capacity: "102400" }
disk_partition:
  - { mount_point: "", desired_capacity: "" }

#### Optional, discovery_mechanism: mapping or switch_based or bmc or snmpwalk
# Absolute path to local copy of .iso file containing Mellanox OFED packages.
# The iso can be downloaded from https://network.nvidia.com/products/infiniband-drivers/linux/mlnx_ofed/
# OFED will be installed post provisioning without any user intervention requirement
# Example:
# mlnx_ofed_path: /root/MLNX_OFED_LINUX-5.8-1.1.2.1-rhel8.6-x86_64.iso
mlnx_ofed_path:

#### Optional, discovery_mechanism: mapping or switch_based or bmc or snmpwalk
# Absolute path to local copy of .rpm file containing CUDA packages.
# The cuda rpm can be downloaded from https://developer.nvidia.com/cuda-downloads
# CUDA will be installed post provisioning without any user intervention requirement
# Example:
# cuda_toolkit_path: /root/cuda-repo-rhel8-12-0-local-12.0.0_525.60.13-1.x86_64.rpm
cuda_toolkit_path: