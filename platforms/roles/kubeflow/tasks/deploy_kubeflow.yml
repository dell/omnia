#  Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Download kfctl release from the Kubeflow releases page
  unarchive:
    src: "{{ kfctl_download_url }}"
    dest: "{{ kfctl_download_dest_path }}"
    mode: "{{ kfctl_download_file_mode }}"
    remote_src: yes

- name: Delete omnia kubeflow directory if exists
  file:
    path: "{{ omnia_kubeflow_dir_path }}"
    state: absent

- name: Create omnia kubeflow directory
  file:
    path: "{{ omnia_kubeflow_dir_path }}"
    state: directory
    mode: "{{ omnia_kubeflow_dir_mode }}"
    recurse: yes

- name: Build kubeflow configuration
  command:
    cmd: /usr/bin/kfctl build -V -f "{{ kubeflow_config_yaml_url }}"
    chdir: "{{ omnia_kubeflow_dir_path }}"
  changed_when: true

- name: Add service account API
  lineinfile:
    path: /etc/kubernetes/manifests/kube-apiserver.yaml
    insertafter: "    - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key"
    line: "    - --service-account-issuer=kubernetes.default.svc"
    firstmatch: yes
    state: present

- name: Add sa key
  lineinfile:
    path: /etc/kubernetes/manifests/kube-apiserver.yaml
    insertafter: "    - --service-account-issuer=kubernetes.default.svc"
    line: "    - --service-account-signing-key-file=/etc/kubernetes/pki/sa.key"
    firstmatch: yes
    state: present

- name: Add Token Request
  lineinfile:
    path: /etc/kubernetes/manifests/kube-apiserver.yaml
    insertafter: "    - --service-account-signing-key-file=/etc/kubernetes/pki/sa.key"
    line: "    - --feature-gates=TokenRequest=true"
    firstmatch: yes
    state: present

- name: Add Token Request Projection
  lineinfile:
    path: /etc/kubernetes/manifests/kube-apiserver.yaml
    insertafter: "    - --feature-gates=TokenRequest=true"
    line: "    - --feature-gates=TokenRequestProjection=true"
    firstmatch: yes
    state: present

- name: Un-enject istio from activator & autoscaler deployment
  replace:
    path: "{{ knative_deployment_yaml_file_path }}"
    regexp: 'sidecar.istio.io/inject: "true"'
    replace: 'sidecar.istio.io/inject: "false"'

- name: Change istio-install base istio-noauth service from NodePort to LoadBalancer
  replace:
    path: "{{ istio_ingress_yaml_file_path }}"
    after: 'name: istio-ingressgateway'
    before: 'selector:'
    regexp: 'NodePort'
    replace: 'LoadBalancer'

- name: Modify CPU limits for seldon-controller-manager
  replace:
    path: "{{ seldon_controller_manager_file_path }}"
    after: 'name: manager'
    before: '---'
    regexp: 'cpu: 100m'
    replace: 'cpu: 500m'

- name: Modify Memory limits for seldon-controller-manager
  replace:
    path: "{{ seldon_controller_manager_file_path }}"
    after: 'name: manager'
    before: 'requests:'
    regexp: 'memory: 30Mi'
    replace: 'memory: 300Mi'

- name: Modify Memory request for seldon-controller-manager
  replace:
    path: "{{ seldon_controller_manager_file_path }}"
    after: 'requests:'
    before: '---'
    regexp: 'memory: 20Mi'
    replace: 'memory: 200Mi'

- name: Change argo base service from NodePort to LoadBalancer
  replace:
    path: "{{ argo_yaml_file_path }}"
    regexp: 'NodePort'
    replace: 'LoadBalancer'

- name: Apply kubeflow configuration
  command:
    cmd: "/usr/bin/kfctl apply -V -f '{{ kubeflow_config_file }}'"
    chdir: "{{ omnia_kubeflow_dir_path }}"
  changed_when: true
  register: apply_kubeflow_config
  until: apply_kubeflow_config is not failed
  retries: 20
  delay: 10
