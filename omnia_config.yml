# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

# Password used for Slurm database.
# The Length of the password should be at least 8.
# The password must not contain -,\, ',"
mariadb_password: "password"

# Kubernetes version.
# Supported Versions: "1.16.7" or "1.19.3".
# Default k8s version is "1.19.3".
k8s_version: "1.19.3"

# Kubernetes SDN network.
# It can either be "calico" or "flannel".
# Default value assigned is "calico".
k8s_cni: "calico"

# Kubernetes pod network CIDR.
# Default value is "10.244.0.0/16"
# Make sure this value does not overlap with any of the host networks.
k8s_pod_network_cidr: "10.244.0.0/16"

# Username for Dockerhub account
# This will be used for Docker login and a kubernetes secret will be created and patched to service account in default namespace.
# This kubernetes secret can be used to pull images from private repositories
# This value is optional but suggested avoiding docker pull limit issues
docker_username: ""

# Password for Dockerhub account
# This will be used for Docker login
# This value is mandatory if docker username is provided
docker_password: ""

# Path to directory hosting ansible config file (ansible.cfg file)
# Default value is "/etc/ansible"
# This directory is on the host running ansible, if ansible is installed using dnf
# If ansible is installed using pip, this path should be set
ansible_config_file_path: /etc/ansible

# Boolean indicating whether login node is required or not
# It can be set to true or false
# By default it is set to true indicating login node will be configured
login_node_required: true

# This variable is used to accept the domain name the user intends to configure
# Eg: ipa.test
domain_name: "omnia.test"

# A Kerberos realm is the domain over which a Kerberos authentication server has the authority to authenticate a user, host or service. 
# A realm name is often, but not always the upper case version of the name of the DNS domain over which it presides
realm_name: "OMNIA.TEST"

# The directory server operations require an administrative user. 
# This user is referred to as the Directory Manager and has full access to the Directory for system management tasks 
# and will be added to the instance of directory server created for IPA. 
# The password must be at least 8 characters long
# The password must not contain -,\, ',"
directory_manager_password: ""

# kerberos_admin_password used by IPA admin user in Rocky OS and used by 389-ds for kerberos admin password in leap OS
# The IPA server requires an administrative user, named 'admin'.
# This user is a regular system account used for IPA server administration
kerberos_admin_password: ""

# Boolean indicating whether login node is requires security features or not
# It can be set to true or false
# By default it is set to false indicating security features will not be configured
enable_secure_login_node: false

# Mandatory field when nfs_node group is defined with an IP and omnia is required to configure nfs server.
# IP of Powervault connected to NFS Server should be provided.
# In a single run of omnia, only one NFS Server is configured.
# To configure multiple NFS Servers, add one IP in nfs_node group in a single run of omnia.yml and 
# give variable values accordingly. To configure another nfs node, update variables and run nfs_sas.yml
powervault_ip:

# This variable is used to install beegfs-client on compute and manager nodes
# Accepted values: true or false
# Default value: false
# To install BeeGFS client, set this value to true
beegfs_support: false

# This variable is used if user has RDMA-capable network hardware (e.g., InfiniBand)
# Accepted values: true or false
# Default value: false
# To enable support for remote direct memory access (RDMA), set this value to true
beegfs_rdma_support: false

# This variable if there are separate OFED kernel modules installed
# Add path for kernel module
# Default value is ""
beegfs_ofed_kernel_modules_path: ""

# This variable is used for taking BeeGFS management server IP
# Provide IP of beegfs management server
# Required field
beegfs_mgmt_server: ""

# Beegfs-client file system mount location
# Default value is "/mnt/beegfs"
# Make sure beegfs_unmount_client value is true, for changing BeeGFS mounts location
beegfs_mounts: "/mnt/beegfs"

# The value of beegfs_unmount_client should be true, if there is a change in beegfs_mounts value or beegfs_client_version
# Accepted values: true or false
# Default value: false
# changing this value to true will unmount running instance of BeeGFS client
beegfs_unmount_client: false

# Beegfs client version needs to be installed on compute and manager nodes
# Default value is 7.2.6
# Make sure beegfs_unmount_client value is true, for changing version in the next run
# Supported versions are greater than 7.2
beegfs_client_version: "7.2.6"

# For installing different version of BeeGFS client than the version which is already running on the BeeGFS cluster
# Accepted values: true or false
# Default value: false
# If there is a need for installing different version of BeeGFS client then make this variable to true
beegfs_version_change: false

# NFS bolt-on support, USER have to mount EXTERNAL NFS server, omnia will mount NFS client
# This variable is used for supporting NFS bolt-on on login_node, compute, and manager nodes
# Values should be entered in JSON format only.
# If mount_option values are empty, NFS client will be mounted with these values "nosuid,rw,sync,hard,intr"
# For enabling NFS bolt-on support, at least one list of valid values should be provided.
# Example for single mount file system:
# nfs_client_params: 
# - { server_ip: 198.168.0.1, server_share_path: "/mnt/share", client_share_path: "/mnt/mount", client_mount_options: "nosuid,rw,sync,hard" }
# Example for supporting multiple mount points:
# nfs_client_params: 
#    - { server_ip: 198.168.0.1, server_share_path: "/mnt/share1", client_share_path: "/mnt/mount1", client_mount_options: "nosuid,rw,sync,hard" } 
#    - { server_ip: 198.168.0.1, server_share_path: "/mnt/share2", client_share_path: "/mnt/mount2", client_mount_options: "nosuid,rw,sync,hard" } 
# Example for multiple mount file system:
# nfs_client_params: 
# - { server_ip: 198.168.0.1, server_share_path: "/mnt/share1", client_share_path: "/mnt/mount1", client_mount_options: "nosuid,rw,sync,hard" } 
# - { server_ip: 198.168.0.2, server_share_path: "/mnt/share2", client_share_path: "/mnt/mount2", client_mount_options: "nosuid,rw,sync,hard" } 
nfs_client_params:
   - { server_ip: , server_share_path: , client_share_path: , client_mount_options: }