#  Copyright 2020 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

---
- name: Wait for CoreDNS to become ready
  shell: kubectl rollout status deployment/coredns -n kube-system
  tags: init

#- name: Create MetalLB Namespace
#  shell: kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/namespace.yaml
#  tags: init

- name: Deploy MetalLB Manifest
  #shell: kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/metallb.yaml
  shell: kubectl apply -f https://raw.githubusercontent.com/google/metallb/v0.8.1/manifests/metallb.yaml
  tags: init

#- name: Create MetalLB Secret
#  shell: "kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey=\"$(openssl rand -base64 128)\""
#  tags: init

- name: Copy default setup for MetalLB to manager
  copy:
    src: metal-config.yaml
    dest: /root/k8s/
  tags: init

- name: Create default setup for MetalLB
  shell: kubectl apply -f /root/k8s/metal-config.yaml
  tags: init

- name: Start K8S Dashboard
  shell: kubectl create -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml
  tags: init

- name: Helm - Add Stable Repo
  community.kubernetes.helm_repository:
    name: stable
    repo_url: "https://charts.helm.sh/stable"
  tags: init

- name: Start NFS Client Provisioner
  shell: helm install stable/nfs-client-provisioner --set nfs.server={{ nfs_server}} --set nfs.path={{ nfs_path }} --generate-name
  tags: init

- name: Set NFS-Client Provisioner as DEFAULT StorageClass
  shell: "kubectl patch storageclasses.storage.k8s.io nfs-client -p '{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"true\"}}}'"
  tags: init

- name: Prometheus deployment
  shell: helm install stable/prometheus --set alertmanager.persistentVolume.storageClass=nfs-client,server.persistentVolume.storageClass=nfs-client,server.service.type=LoadBalancer --generate-name
  tags: init

- name: Install MPI Operator
  shell: kubectl create -f https://raw.githubusercontent.com/kubeflow/mpi-operator/master/deploy/v1alpha2/mpi-operator.yaml
  tags: init
