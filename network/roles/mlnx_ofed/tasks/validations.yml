# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Include input params for mlnx_ofed
  ansible.builtin.include_vars: "{{ role_path }}/../../../input/network_config.yml"

- name: Check if redhat node is present
  ansible.builtin.set_fact:
    redhat_node_ip: "{{ redhat_node_ip | default([]) + [ item ] }}"
  with_items: "{{ groups['all'] }}"
  when: "'redhat' in hostvars[item].ansible_distribution | lower"

- name: Perform validations when compute nodes have redhat os installed
  block:
    - name: Set Redhat distro 
      ansible.builtin.set_fact:
        mlnx_ofed_distro: "{{ 'rhel' + hostvars[redhat_node_ip[0]].ansible_distribution_version }}"

    - name: Initialize mlnx_ofed file location
      ansible.builtin.set_fact:
        offline_path: false

    - name: Check if mlnx offline path is available
      ansible.builtin.set_fact:
        offline_path: true
      when: mlnx_ofed_offline_path | default("", true) | length > 0

    - name: Check if correct mlnx_ofed file exists
      block:
        - name: Check if file is .tar file
          ansible.builtin.assert:
            that: "'.tgz' in mlnx_ofed_offline_path"
            fail_msg: "{{ fail_mlnx_file_type }}"

        - name: Check that mlnx_ofed tar file exists at mentioned path
          ansible.builtin.stat:
            path: "{{ mlnx_ofed_offline_path }}"
          register: stat_result

        - name: Fail if config file doesn't exist
          ansible.builtin.fail:
            msg: "{{ fail_mlnx_file + mlnx_ofed_offline_path }}"
          when: not stat_result.stat.exists

      when: offline_path

    - name: Check if mlnx_ofed version and distro details are given correctly
      block:
        - name: Check status of mlnx_ofed repo url
          ansible.builtin.uri:
            url: "{{ ofed_repository }}"
            method: HEAD
            return_content: true
            status_code: "{{ uri_status_code }}"
          register: mlnx_repo_status

      rescue:
        - name: Message to user
          ansible.builtin.fail:
            msg: "{{ fail_mlnx_url }}"

      when: not offline_path

    - name: Validate mlnx_ofed_add_kernel_support variable
      ansible.builtin.assert:
        that: mlnx_ofed_add_kernel_support == true or mlnx_ofed_add_kernel_support == false
        fail_msg: "{{ mlnx_ofed_add_kernel_support_fail_msg }}"

    - name: Set mlnx_ofed arguments
      ansible.builtin.set_fact:
        mlnx_ofed_args: "{{ '--add-kernel-support' if mlnx_ofed_add_kernel_support else '' }}"

    - name: Validate rhsm status if RedHat OS on control_plane
      block:
        - name: Validate redhat subscription status
          ansible.builtin.include_tasks: validate_rhsm.yml
      rescue:
        - name: Control plane doesn't have proper redhat subscription
          ansible.builtin.fail:
            msg:
              - "Execution failed because of one of the following reasons:"
              - "{{ inactive_msg1 }}"
              - "{{ inactive_msg2 }}"
      when: ansible_facts['distribution'] | lower == os_supported_rhel

  when: redhat_node_ip | default([]) | length > 0
