---
- name: Install Controller Packages
  ansible.builtin.debug:
    msg: "Welcome to Controller {{ansible_hostname}} {{ slurm_controller_packages[ansible_os_family] }}"

- name: Install controller packages
  ansible.builtin.package:
    name: "{{ slurm_controller_packages[ansible_os_family] }}"
    state: present 

- name: Slurm dict ops
  ansible.builtin.set_fact:
    slurm_conf_dict: "{{ __slurm_default_config | ansible.builtin.combine(slurm_config | default({})) }}"
    cgroup_conf_dict: "{{ __cgroup_default_config | ansible.builtin.combine(cgroup_config | default({}) ) }}"

- name: Debug
  ansible.builtin.debug:
    var: slurm_conf_dict

- name: Append share path if NFS
  ansible.builtin.set_fact:
    slurm_share_prefix: "{{ share_path }}/{{ slurm_dir_name }}"
  #when: NFS share

# file and directory permissions
- name: Ensure directories - {{ item }}
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ slurm_user }}"
    group: "{{ slurm_user_group }}"
    mode: "0755"
  loop:
    - "{{ slurm_share_prefix }}{{ slurm_config_dir }}"
    - "{{ slurm_conf_dict['StateSaveLocation'] }}"
    # - "{{ slurm_conf_dict['SlurmctldLogFile'] | ansible.builtin.dirname }}"
    # - "{{ slurm_conf_dict['SlurmctldPidFile'] | ansible.builtin.dirname}}"

- name: Create files - {{ item }} # TODO: file required?
  ansible.builtin.file:
    path: "{{ item }}"
    state: touch
    owner: "{{ slurm_user }}"
    group: "{{ slurm_user_group }}"
    mode: 644
  loop:
    - "{{ slurm_conf_dict['SlurmctldLogFile'] }}"
    - "{{ slurm_conf_dict['SlurmctldPidFile'] }}"

# TODO: common logic for conf
- name: Create slurm.conf
  ansible.builtin.template: # Create dest directory before 
    src: "slurm.conf.j2"
    dest: "{{ item }}"
    owner: root
    group: root
    mode: 644
  loop:
    - "{{ slurm_share_prefix }}{{ slurm_config_dir }}/slurm.conf"
    - "{{ slurm_config_dir }}/slurm.conf"
  notify:
    - Restart slurmctld

- name: Create cgroup.conf
  ansible.builtin.template: # Create dest directory before 
    src: "cgroup.conf.j2"
    dest: "{{ item }}"
    owner: root
    group: root
    mode: 644
  loop:
    - "{{ slurm_share_prefix }}{{ slurm_config_dir }}/cgroup.conf"
    - "{{ slurm_config_dir }}/cgroup.conf"
  notify:
    - Restart slurmctld

# Port Config
- name: Enable SlurmctldPort
  ansible.posix.firewalld:
    port: "{{ slurm_conf_dict['SlurmctldPort'] }}/tcp"
    permanent: true
    state: enabled
    immediate: true

# Edit service
- name: Enable the service
  ansible.builtin.service:
    name: slurmctld
    enabled: true
  register: ctld_service

- name: Edit the service
  community.general.ini_file:
    path: "{{ ctld_service['status']['FragmentPath'] | default('/usr/lib/systemd/system/slurmctld.service') }}"
    section: Unit
    option: ConditionPathExists
    value: "{{ slurm_share_prefix }}{{ slurm_config_dir }}/slurm.conf"
    no_extra_spaces: true
  notify:
    - Reload slurmctld
    - Restart slurmctld

# Environment Var SLURM_CONF
- name: Set env variable
  community.general.ini_file:
    path: "/etc/environment"
    option: SLURM_CONF
    value: "{{ slurm_share_prefix }}{{ slurm_config_dir }}/slurm.conf"
    no_extra_spaces: true
