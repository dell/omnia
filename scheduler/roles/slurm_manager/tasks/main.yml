#  Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Initialize slurmctld service status
  ansible.builtin.set_fact:
    slurmctld_status: false

- name: Tasks for slurm_manager role
  when: hostvars['127.0.0.1']['slurm_support']
  block:
    - name: Check the status of slurmctld
      ansible.builtin.set_fact:
        slurmctld_status: true
      when:
        - "'slurmctld.service' in ansible_facts.services"
        - "ansible_facts.services['slurmctld.service'].state == 'running'"

    - name: Set the control node IP
      ansible.builtin.set_fact:
        control_node: "{{ hostvars[inventory_hostname]['ansible_facts']['hostname'] }}.{{ hostvars[inventory_hostname]['ansible_facts']['domain'] }}"

- name: Tasks for slurm_manager role
  when:
    - hostvars['127.0.0.1']['slurm_support']
    - not slurmctld_status
  block:
    - name: Configure slurm users and log paths
      ansible.builtin.include_tasks: configure_slurm.yml

    - name: Install common packages
      ansible.builtin.include_tasks: create_nfs_services_files.yml
      when: slurm_installation_type == nfs_share_slurm

    - name: Install common packages for nfs
      ansible.builtin.include_tasks: install_packages_nfs.yml
      when: slurm_installation_type == nfs_share_slurm

    - name: Install common packages
      ansible.builtin.include_tasks: install_packages.yml
      when: slurm_installation_type == configless_slurm

    - name: Install Development tools
      ansible.builtin.include_tasks: install_dev_packages.yml

    - name: Update slurm conf file
      ansible.builtin.include_tasks: update_slurm_conf.yml

    - name: Update slurm conf file
      ansible.builtin.include_tasks: update_slurm_conf_for_nfs.yml
      when: slurm_installation_type == nfs_share_slurm

    - name: Update firewall with ports
      ansible.builtin.include_tasks: update_ports_firewall.yml

    - name: Update slurmdbd conf file
      ansible.builtin.include_tasks: update_slurmdbd_conf.yml
      when: slurm_installation_type == configless_slurm

    - name: Update slurmdbd conf file
      ansible.builtin.include_tasks: update_slurmdbd_conf_nfs.yml
      when: slurm_installation_type == nfs_share_slurm

- name: Stop slurmctld on control node
  ansible.builtin.systemd:
    name: slurmctld.service
    state: stopped
  when:
    - slurmctld_status is true
    - hostvars['127.0.0.1']['restart_slurm_services']

- name: Slurm Node Updates to conf file
  ansible.builtin.include_tasks: update_node_info.yml
  when:
    - hostvars['127.0.0.1']['slurm_support']
  with_items: "{{ groups['slurm_node'] }}"
  loop_control:
    loop_var: item

- name: Add login node core & socket info in slurm config file
  ansible.builtin.lineinfile:
    dest: "{{ slurm_confpth }}"
    line: "NodeName={{ hostvars[item].node_fqdn }} Sockets={{ hostvars[item].sockets }} CoresPerSocket={{ hostvars[item].cores }}"
    state: present
    create: true
    mode: "{{ slurm_mode }}"
  with_items:
    - "{{ groups['login'] }}"
  when:
    - groups['login'] is defined
    - hostvars['127.0.0.1']['slurm_support']
    - hostvars["127.0.0.1"]["login_node_required"]
    - hostvars[item].node_fqdn != "None"
  loop_control:
    loop_var: item
