#  Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Install firewalld
  ansible.builtin.package:
    name: firewalld
    state: present
  tags: firewalld

- name: Start and enable firewalld
  ansible.builtin.service:
    name: firewalld
    state: started
    enabled: true
  tags: firewalld

- name: Firewall rule for slurm - tcp/udp ports
  ansible.builtin.command: "firewall-cmd --zone=public --permanent --add-port={{ item }}"
  with_items:
    - "{{ tcp_port1 }}"
    - "{{ tcp_port2 }}"
    - "{{ tcp_port3 }}"
    - "{{ tcp_port4 }}"
    - "{{ tcp_port5 }}"
    - "{{ udp_port3 }}"
    - "{{ udp_port1 }}"
    - "{{ udp_port2 }}"
    - "{{ udp_port4 }}"
  when: "'slurm_control_node' in group_names"
  changed_when: true
  tags: firewalld

- name: Get network address/subnet mask
  ansible.builtin.set_fact:
    network_address: "{{ (ansible_default_ipv4.network + '/' + ansible_default_ipv4.netmask) | ansible.utils.ipaddr('network/prefix') }}"
  when: not hostvars['127.0.0.1']['ansible_collection_used']

- name: Get network address/subnet mask
  ansible.builtin.set_fact:
    network_address: "{{ (ansible_default_ipv4.network + '/' + ansible_default_ipv4.netmask) | ansible.utils.ipaddr('network/prefix') }}"
  when: hostvars['127.0.0.1']['ansible_collection_used']

- name: Firewall rule slurm - allow all incoming traffic on internal network
  ansible.builtin.command: |
        firewall-cmd --add-rich-rule='rule family={{ family }} source address={{ network_address }} accept'
  changed_when: true
  tags: firewalld

- name: Reload firewalld
  ansible.builtin.command: firewall-cmd --reload
  changed_when: true
  tags: firewalld
