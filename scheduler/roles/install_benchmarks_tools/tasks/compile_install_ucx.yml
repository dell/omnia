#  Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Check ucx directory on the nfs share exist
  ansible.builtin.stat:
    path: "{{ omnia_share_path }}/{{ benchmarks_dir_ucx }}/{{ bin_folder }}"
  register: ucx_dir_data

- name: Verify ucx installation
  ansible.builtin.command: "{{ omnia_share_path }}/{{ benchmarks_dir_ucx }}/{{ bin_folder }}/{{ ucx_info_cmd }} -v"
  when: ucx_dir_data.stat.exists
  register: ucx_info
  changed_when: false

- name: Set fact if ucx installation is successful
  ansible.builtin.set_fact:
    ucx_installed: true
  when:
    - ucx_dir_data.stat.exists
    - ucx_info.rc == 0

- name: Execute UCX installation tasks if share path exists
  when: ucx_installed is not defined or not ucx_installed
  block:
    - name: Creates /mnt/share/compile/ucx directory
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "{{ dir_mode }}"
      with_items:
        - "{{ omnia_share_path }}/{{ compiler_dir_ucx }}"
        - "{{ omnia_share_path }}/{{ benchmarks_dir_ucx }}"
      run_once: true

    - name: Copy the ucx.tar.gz file into nfs share
      ansible.builtin.get_url:
        url: "{{ offline_tarball_path }}/{{ ucx_dir }}.tar.gz"
        dest: "{{ omnia_share_path }}/{{ compiler_dir_ucx }}/"
        mode: "{{ copy_mode }}"
      run_once: true

    - name: Extract ucx.tar.gz into nfs_share/ucx/ucx-1.15.0
      ansible.builtin.unarchive:
        src: "{{ omnia_share_path }}/{{ compiler_dir_ucx }}/{{ ucx_dir }}.tar.gz"
        dest: "{{ omnia_share_path }}/{{ compiler_dir_ucx }}/"
        remote_src: true
      run_once: true

    - name: Construct the command to compile the ucx
      ansible.builtin.set_fact:
        ucx_compile_cmd: "../contrib/configure-release --prefix={{ omnia_share_path }}/{{ benchmarks_dir_ucx }}"

    - name: Create a build directory inside ucx folder
      ansible.builtin.command:
        cmd: "mkdir -p {{ omnia_share_path }}/{{ compiler_dir_ucx }}/{{ ucx_dir }}-{{ ucx_software_version }}/build"
      args:
        creates: "{{ omnia_share_path }}/{{ compiler_dir_ucx }}/{{ ucx_dir }}-{{ ucx_software_version }}/build"
      changed_when: false
      run_once: true

    - name: Compile and install the ucx
      ansible.builtin.command:
        "{{ ucx_compile_cmd }}"
      args:
        chdir: "{{ omnia_share_path }}/{{ compiler_dir_ucx }}/{{ ucx_dir }}-{{ ucx_software_version }}/build"
      changed_when: false
      run_once: true
      failed_when: false

    - name: Compile with command "run 'make -j 8' and make install"
      ansible.builtin.shell: |
        make -j 8
        make install
      args:
        chdir: "{{ omnia_share_path }}/{{ compiler_dir_ucx }}/{{ ucx_dir }}-{{ ucx_software_version }}/build"
      changed_when: false
      run_once: true
      failed_when: false

    - name: Display the ucx_info command
      ansible.builtin.command:
        "{{ omnia_share_path }}/{{ benchmarks_dir_ucx }}/{{ bin_folder }}/{{ ucx_info_cmd }} -v"
      register: ucx_info
      changed_when: false
      failed_when: false

    - name: Display failure message when ucx install fails
      ansible.builtin.fail:
        msg: "{{ ucx_info_error }}"
      when: ucx_info.rc != 0
