#  Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Initiate Kubernetes installation
  when:
    - hostvars['127.0.0.1']['k8s_support']
    - not hostvars[groups['kube_control_plane'][0]]['k8s_installation_status']
  ansible.builtin.import_playbook: kubernetes_sigs.kubespray.cluster
  vars:
    kube_version: "v{{ hostvars['localhost']['k8s_version'] }}"
    container_manager: "containerd"
    dashboard_enabled: true
    helm_enabled: true
    kube_network_plugin: "{{ hostvars['localhost']['k8s_cni'] }}"
    kube_service_addresses: "{{ hostvars['localhost']['k8s_service_addresses'] }}"
    kube_pods_subnet: "{{ hostvars['localhost']['k8s_pod_network_cidr'] }}"
    metallb_enabled: true
    metallb_speaker_enabled: true
    kube_proxy_strict_arp: true
    kube_proxy_mode: 'iptables'
    metallb_config:
      address_pools:
        primary:
          ip_range:
            - "{{ hostvars['localhost']['pod_external_ip_range'] }}"
          auto_assign: true
      layer2:
        - primary
    override_system_hostname: false
    populate_inventory_to_hosts_file: false
    enable_nodelocaldns: false
    upstream_dns_servers:
      - "{{ hostvars['localhost']['admin_nic_ip'] }}"
    unsafe_show_logs: true
    kube_image_repo: "registry.k8s.io"
    docker_image_repo: "docker.io"
    quay_image_repo: "quay.io"
    containerd_registries_mirrors:
      - prefix: xyz.io
        mirrors:
          - host: https://mirror.gcr.io
            capabilities: ["pull", "resolve"]
            skip_verify: false
    kubeadm_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/kubeadm.tar.gz"
    kubectl_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/kubectl.tar.gz"
    kubelet_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/kubelet.tar.gz"
    crictl_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/cri-tools-v1.26.1.tar.gz"
    calicoctl_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/calicoctl-v3.25.2.tar.gz"
    calico_crds_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/calicocrds-v3.25.2.tar.gz"
    cni_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/cni-plugins-v1.3.0.tar.gz"
    nerdctl_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/nerdctl-v1.5.0.tar.gz"
    runc_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/runc.amd64.tar.gz"
    docker_rh_repo_base_url: ""
    docker_rh_repo_gpgkey: ""
    etcd_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/etcd-v3.5.10.tar.gz"
    containerd_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/containerd-1.7.5.tar.gz"
    helm_download_url: "{{ hostvars['localhost']['offline_tarball_path'] }}/helm-v3.12.3.tar.gz"
    http_proxy: "{{ hostvars['localhost']['http_proxy'] }}"
    https_proxy: "{{ hostvars['localhost']['https_proxy'] }}"
