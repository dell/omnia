#  Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Reset kubeadm
  ansible.builtin.command: kubeadm reset --cri-socket={{ crio_socket }} -f
  changed_when: false
  failed_when: false

- name: Stop kubelet service
  ansible.builtin.service:
    name: kubelet
    state: stopped
  failed_when: false

- name: Remove kubelet service
  ansible.builtin.file:
    path: "/etc/systemd/system/kubelet.service"
    state: absent
  failed_when: false

- name: Check if crictl is present
  ansible.builtin.stat:
    path: "{{ bin_dir }}/crictl"
    get_attributes: false
    get_checksum: false
    get_mime: false
  register: crictl

- name: Stop all cri containers
  ansible.builtin.shell: "set -o pipefail && {{ bin_dir }}/crictl ps -q | xargs -r {{ bin_dir }}/crictl -t 60s stop -t {{ grace_period }}"
  args:
    executable: /bin/bash
  register: remove_all_cri_containers
  retries: 5
  until: remove_all_cri_containers.rc == 0
  delay: 5
  when:
    - crictl.stat.exists
  failed_when: false
  changed_when: true

- name: Force remove all cri containers
  ansible.builtin.command: "{{ bin_dir }}/crictl rm -a -f"
  register: remove_all_cri_containers
  retries: 5
  until: remove_all_cri_containers.rc == 0
  delay: 5
  when:
    - crictl.stat.exists
  failed_when: false
  changed_when: true

- name: Stop all cri pods
  ansible.builtin.shell: "set -o pipefail && {{ bin_dir }}/crictl pods -q | xargs -r {{ bin_dir }}/crictl -t 60s stop"
  args:
    executable: /bin/bash
  register: remove_all_cri_containers
  retries: 5
  until: remove_all_cri_containers.rc == 0
  delay: 5
  when:
    - crictl.stat.exists
  failed_when: false
  changed_when: true

- name: Remove all cri pods
  block:
    - name: Force remove all cri pods
      ansible.builtin.command: "{{ bin_dir }}/crictl rmp -a -f"
      register: remove_all_cri_containers
      retries: 5
      until: remove_all_cri_containers.rc == 0
      delay: 5
      when:
        - crictl.stat.exists
      failed_when: false
      changed_when: true

  rescue:
    - name: Force remove all cri pods (rescue)
      ansible.builtin.shell: "set -o pipefail && ip netns list | cut -d' ' -f 1 | xargs -n1 ip netns delete && {{ bin_dir }}/crictl rmp -a -f"
      failed_when: false
      changed_when: true

- name: Get container ID for buildkitd
  ansible.builtin.shell: >
    set -o pipefail
    && nerdctl ps -q -a -f name=buildkitd | head -n 1
  register: buildkit_container_id
  changed_when: false
  failed_when: false

- name: Stop buildkitd container
  ansible.builtin.command: nerdctl stop {{ buildkit_container_id.stdout }}
  when: buildkit_container_id.stdout is defined and buildkit_container_id.stdout != ''
  changed_when: false
  failed_when: false

- name: Remove buildkitd container
  ansible.builtin.command: nerdctl rm {{ buildkit_container_id.stdout }}
  when: buildkit_container_id.stdout is defined and buildkit_container_id.stdout != ''
  changed_when: false
  failed_when: false

- name: Remove runc package
  ansible.builtin.package:
    name: runc
    state: absent
  failed_when: false

- name: Remove /etc/exports entries
  ansible.builtin.lineinfile:
    path: "{{ exports_path }}"
    regexp: "{{ item }}"
    state: absent
  with_items: "{{ exports_regexp }}"

- name: Exporting the shared directories
  ansible.builtin.command: /usr/sbin/exportfs -r
  changed_when: true
  failed_when: false

- name: Include telemetry_config file
  ansible.builtin.include_tasks: include_telemetry_config.yml

- name: Remove grafana persistent data
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ grafana_folders }}"

- name: Remove telemetry github data
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ telemetry_folders }}"

- name: Remove telemetry database persistent data
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ database_folders }}"
  tags: database

- name: Remove metallb data
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ metallb_files }}"
