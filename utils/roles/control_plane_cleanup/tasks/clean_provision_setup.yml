#  Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Uninstall xCAT
  block:
    - name: Validate xcat service
      ansible.builtin.command: systemctl status xcatd
      register: xcat_status
      no_log: true
      failed_when: false
      changed_when: false

    - name: Cleanup node info from dhcp
      ansible.builtin.command: makedhcp -d -a
      when: ("running" in xcat_status.stdout)
      failed_when: false
      changed_when: false

    - name: List all the os image files
      ansible.builtin.command: lsdef -t osimage
      register: os_image_list
      failed_when: false
      changed_when: false

    - name: Remove the OS images
      ansible.builtin.command: rmdef -t osimage {{ item.split('(').0 }}
      with_items:
        - "{{ os_image_list.stdout_lines }}"
      when: ("osimage" in os_image_list.stdout_lines)
      failed_when: false
      changed_when: false

    - name: Cleanup node info from tftpboot
      ansible.builtin.command: rmdef all
      when: ("running" in xcat_status.stdout)
      failed_when: false
      changed_when: false

    - name: Clean host entries in /etc/hosts
      ansible.builtin.command: makehosts -d all
      when: ("running" in xcat_status.stdout)
      failed_when: false
      changed_when: false

    - name: Cleanup node info from DNS
      ansible.builtin.command: makedns -n
      when: ("running" in xcat_status.stdout)
      failed_when: false
      changed_when: false

    - name: Stop xcat service
      ansible.builtin.systemd:
        name: xcatd
        state: stopped
      when: ("running" in xcat_status.stdout)
      failed_when: false
      no_log: true

    - name: Remove xcat files
      ansible.builtin.command: "{{ xcat_packages_path }} -y uninstall"
      no_log: true
      failed_when: false
      changed_when: false

    - name: Remove xCAT certificate
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ xcat_cert_path }}"

    - name: Remove xCAT data files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ xcat_data_files_path }}"

    - name: Remove other xCAT files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ xcat_del_files }}"

    - name: Remove xCAT
      ansible.builtin.package:
        name: xCAT
        state: absent
      failed_when: false
      no_log: true
  tags: xcat

- name: Uninstall postgres
  block:
    - name: Remove postgres
      ansible.builtin.package:
        name: postgresql
        state: absent
      failed_when: false
      no_log: true

    - name: Remove postgres directory
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ pg_dir_path }}"
  tags: postgres

- name: Create omnia folder in opt folder
  ansible.builtin.file:
    path: "{{ omnia_dir }}"
    state: directory
    mode: 0755
