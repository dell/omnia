# Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Initialise facts for cluster
  ansible.builtin.set_fact:
    beegfs_version: "{{ software_version_default }}"
    amdgpu_version: "{{ software_version_default }}"
    rocm_version: "{{ software_version_default }}"

- name: Set facts for cluster
  ansible.builtin.set_fact:
    cluster_os_type: "{{ software_config.cluster_os_type }}"
    cluster_os_version: "{{ software_config.cluster_os_version }}"
    omnia_repo_path: "{{ repo_store_path }}"

- name: Set variable 'os_release' to 'jammy' if OS is Ubuntu and version is 22.04
  ansible.builtin.set_fact:
    os_release: "jammy"
  when: cluster_os_type == 'ubuntu' and cluster_os_version == '22.04'

- name: Set variable 'os_release' to 'focal' if OS is Ubuntu and version is 20.04
  ansible.builtin.set_fact:
    os_release: "focal"
  when: cluster_os_type == 'ubuntu' and cluster_os_version == '20.04'

- name: Set Openldap release version for Ubuntu 22.04
  ansible.builtin.set_fact:
    openldap_release: "jammy"
  when: os_release == 'jammy'

- name: Set Openldap release version for Ubuntu 20.04
  ansible.builtin.set_fact:
    openldap_release: "bullseye"
  when: os_release == 'focal'

- name: Initialise new_repos fact
  ansible.builtin.set_fact:
    new_repos: []

- name: Remove directory if already exists- {{ tmp_update_repo_file_path }}
  ansible.builtin.file:
    path: "{{ tmp_update_repo_file_path }}"
    state: absent
  delegate_to: localhost
  connection: local
  run_once: true

- name: Create directory {{ tmp_update_repo_file_path }}
  ansible.builtin.file:
    path: "{{ tmp_update_repo_file_path }}"
    state: directory
    mode: "{{ file_permission }}"
  become: true
  delegate_to: localhost
  connection: local
  run_once: true

- name: Block to execute when usr repos are configured
  when:
    - "user_repo_url is defined"
    - "user_repo_url | type_debug == 'list'"
    - "user_repo_url | length > 0"
    - (software_config['repo_config'] == "partial") or (software_config['repo_config'] == "never")
  block:
    - name: Find newly added usr repos
      ansible.builtin.include_tasks: find_new_repo.yml
      loop: "{{ user_repo_url | default([], true) }}"

- name: Block to execute when new usr repos are added
  when:
    - "new_repos is defined"
    - "new_repos | type_debug == 'list'"
    - "new_repos | length > 0"
  block:
    - name: Print the user repo urls for which repo files will be created
      ansible.builtin.debug:
        var: new_repos

    - name: Create directory {{ update_keyring_file_path }}
      ansible.builtin.file:
        path: "{{ update_keyring_file_path }}"
        state: directory
        mode: "{{ file_permission }}"
      become: true
      delegate_to: localhost
      connection: local
      run_once: true

    - name: Create directory {{ tmp_user_repo_path }}
      ansible.builtin.file:
        path: "{{ tmp_user_repo_path }}"
        state: directory
        mode: "{{ file_permission }}"
      become: true
      delegate_to: localhost
      connection: local
      run_once: true

    - name: Download GPG key for each user repository
      ansible.builtin.shell: # noqa: command-instead-of-module
        cmd: "wget -q {{ item.1.gpgkey }} -O - | gpg --dearmor | sudo tee {{update_keyring_file_path}}/a_user_repo{{ item.0 + 1 }}{{ansible_date_time.iso8601_basic}}.gpg" # noqa: yaml[line-length] risky-shell-pipe
      with_indexed_items: "{{ user_repo_url | default([]) }}"
      when:
        - item.1.gpgkey is defined and item.1.gpgkey != ''
        - item.1.url in new_repos and software_version_default not in item.1.url
      changed_when: false
      delegate_to: localhost
      connection: local
      run_once: true

    - name: Configure user repositories
      ansible.builtin.template:
        src: '"{{ usr_repo_config_template_src }}"'
        dest: "{{ tmp_user_repo_path }}/a_user_repo{{ item.0 + 1 }}{{ansible_date_time.iso8601_basic}}.list"
        mode: "{{ file_permission }}"
      with_indexed_items: "{{ user_repo_url | default([]) }}"
      when: item.1.url in new_repos and software_version_default not in item.1.url
      delegate_to: localhost
      connection: local
      run_once: true

    - name: Copy gpgkey  to compute
      ansible.builtin.copy:
        src: "{{ update_keyring_file_path }}/"
        dest: "{{ repo_path }}/../keyrings/"
        mode: "{{ file_permission }}"

    - name: Copy user repo files to compute
      ansible.builtin.copy:
        src: "{{ tmp_user_repo_path }}/"
        dest: "{{ repo_path }}/"
        mode: "{{ file_permission }}"
