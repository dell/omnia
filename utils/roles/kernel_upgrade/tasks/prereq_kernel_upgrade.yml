# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Initializing variables
  ansible.builtin.set_fact:
    upgrade_supported: false

- name: Check whether subscription is enabled or not
  ansible.builtin.command: subscription-manager list
  changed_when: false
  register: rhsm_status

- name: Show status message
  ansible.builtin.debug:
    msg: "Subscription successful"
  when: "'Subscribed' in rhsm_status.stdout"

- name: Show status message
  ansible.builtin.fail:
    msg: "Subscription failed can't proceed"
  when: "'Subscribed' not in rhsm_status.stdout"

- name: Fetching whether kernel upgrade is supported or not
  ansible.builtin.yum:
    list: kernel
  register: available_pkgs
  changed_when: false

- name: Validating rhsm_kernel_version
  ansible.builtin.fail:
    msg: "{{ kernel_version_fail_msg }}"
  when: rhsm_kernel_version | length < 1

- name: Validate input variable with available list of kernels
  ansible.builtin.fail:
    msg: "{{ kernel_version_availability }}"
  when: rhsm_kernel_version not in available_pkgs.stdout

- name: Updating upgrade_supported
  ansible.builtin.set_fact:
    upgrade_supported: true
  when: rhsm_kernel_version in available_pkgs.stdout
