# Copyright 2024 Intel Corporation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Setting python version used for the test runs
  ansible.builtin.set_fact:
    pver: "{{ '.'.join(ansible_python_version.split('.')[0:2]) }}"

- name: Recursively change ownership of habana_logs directory
  ansible.builtin.file:
    path: "{{ verify_intel_gaudi_habana_tests['habana_logs'] }}"
    state: directory
    recurse: true
    mode: "{{ verify_intel_gaudi_habana_tests['habana_logs_permission'] }}"

- name: Run hl_qual hardware sanity check test
  environment:
    __python_cmd: "python{{ pver }}"
    LOG_LEVEL_ALL: "{{ verify_intel_gaudi_habana_tests['log_level_all'] }}"
    ENABLE_CONSOLE: "{{ verify_intel_gaudi_habana_tests['enable_console'] }}"
    HABANA_LOGS: "{{ verify_intel_gaudi_habana_tests['habana_logs'] }}"
    GC_KERNEL_PATH: "{{ verify_intel_gaudi_habana_tests['gc_kernel_path'] }}"
    HABANA_SCAL_BIN_PATH: "{{ verify_intel_gaudi_habana_tests['habana_scal_bin_path'] }}"
    HABANA_PLUGINS_LIB_PATH: "{{ verify_intel_gaudi_habana_tests['habana_plugins_lib_path'] }}"
    DATA_LOADER_AEON_LIB_PATH: "{{ verify_intel_gaudi_habana_tests['data_loader_aeon_lib_path'] }}"
    HABANALABS_HLTHUNK_TESTS_BIN_PATH: "{{ verify_intel_gaudi_habana_tests['habanalabs_hlthunk_tests_bin_path'] }}"
  ansible.builtin.shell: |
    set -o pipefail
    ./hl_qual -gaudi3 -c all -rmod parallel -t 60 -f2 -l extreme -serdes int -dis_mon
  args:
    executable: /bin/bash
    chdir: /opt/habanalabs/qual/gaudi3/bin
  register: sanity_test_result
  failed_when: "'FAILED' in sanity_test_result.stdout"
  changed_when: true

- name: Run hl_qual memory bandwidth test
  environment:
    __python_cmd: "python{{ pver }}"
    LOG_LEVEL_ALL: "{{ verify_intel_gaudi_habana_tests['log_level_all'] }}"
    ENABLE_CONSOLE: "{{ verify_intel_gaudi_habana_tests['enable_console'] }}"
    HABANA_LOGS: "{{ verify_intel_gaudi_habana_tests['habana_logs'] }}"
    HABANALABS_HLTHUNK_TESTS_BIN_PATH: "{{ verify_intel_gaudi_habana_tests['habanalabs_hlthunk_tests_bin_path'] }}"
  ansible.builtin.shell: |
    set -o pipefail
    ./hl_qual -gaudi3 -c all -rmod parallel -mb -memOnly -dis_mon
  args:
    executable: /bin/bash
    chdir: /opt/habanalabs/qual/gaudi3/bin
  register: memory_bandwidth_test_result
  failed_when: "'FAILED' in memory_bandwidth_test_result.stdout"
  changed_when: true

- name: Run hl_qual pci bandwidth test
  environment:
    __python_cmd: "python{{ pver }}"
    LOG_LEVEL_ALL: "{{ verify_intel_gaudi_habana_tests['log_level_all'] }}"
    ENABLE_CONSOLE: "{{ verify_intel_gaudi_habana_tests['enable_console'] }}"
    HABANA_LOGS: "{{ verify_intel_gaudi_habana_tests['habana_logs'] }}"
    HABANALABS_HLTHUNK_TESTS_BIN_PATH: "{{ verify_intel_gaudi_habana_tests['habanalabs_hlthunk_tests_bin_path'] }}"
  ansible.builtin.shell: |
    set -o pipefail
    ./hl_qual -gaudi3  -c all -rmod serial -t 20 -p -b -dis_mon
  args:
    executable: /bin/bash
    chdir: /opt/habanalabs/qual/gaudi3/bin
  register: pci_bandwidth_test_result
  failed_when: "'FAILED' in pci_bandwidth_test_result.stdout"
  changed_when: true

- name: Run hl_qual serdes base test
  environment:
    __python_cmd: "python{{ pver }}"
    LOG_LEVEL_ALL: "{{ verify_intel_gaudi_habana_tests['log_level_all'] }}"
    ENABLE_CONSOLE: "{{ verify_intel_gaudi_habana_tests['enable_console'] }}"
    HABANA_LOGS: "{{ verify_intel_gaudi_habana_tests['habana_logs'] }}"
    HABANALABS_HLTHUNK_TESTS_BIN_PATH: "{{ verify_intel_gaudi_habana_tests['habanalabs_hlthunk_tests_bin_path'] }}"
  ansible.builtin.shell: |
    set -o pipefail
    ./hl_qual -gaudi3 -c all -rmod parallel -i 50 -nic_base -test_type pairs -dis_mon
  args:
    executable: /bin/bash
    chdir: /opt/habanalabs/qual/gaudi3/bin
  register: serdes_base_test_result
  failed_when: "'FAILED' in serdes_base_test_result.stdout"
  changed_when: true

- name: Run hl_qual serdes base allreduce test
  environment:
    __python_cmd: "python{{ pver }}"
    LOG_LEVEL_ALL: "{{ verify_intel_gaudi_habana_tests['log_level_all'] }}"
    ENABLE_CONSOLE: "{{ verify_intel_gaudi_habana_tests['enable_console'] }}"
    HABANA_LOGS: "{{ verify_intel_gaudi_habana_tests['habana_logs'] }}"
    HABANALABS_HLTHUNK_TESTS_BIN_PATH: "{{ verify_intel_gaudi_habana_tests['habanalabs_hlthunk_tests_bin_path'] }}"
  ansible.builtin.shell: |
    set -o pipefail
    ./hl_qual -gaudi3 -c all -rmod parallel -i 40 -ep 40 -nic_base -test_type allreduce -dis_mon
  args:
    executable: /bin/bash
    chdir: /opt/habanalabs/qual/gaudi3/bin
  register: serdes_base_allreduce_test_result
  failed_when: "'FAILED' in serdes_base_allreduce_test_result.stdout"
  changed_when: true

- name: Run hl_qual serdes base allgather test
  environment:
    __python_cmd: "python{{ pver }}"
    LOG_LEVEL_ALL: "{{ verify_intel_gaudi_habana_tests['log_level_all'] }}"
    ENABLE_CONSOLE: "{{ verify_intel_gaudi_habana_tests['enable_console'] }}"
    HABANA_LOGS: "{{ verify_intel_gaudi_habana_tests['habana_logs'] }}"
    HABANALABS_HLTHUNK_TESTS_BIN_PATH: "{{ verify_intel_gaudi_habana_tests['habanalabs_hlthunk_tests_bin_path'] }}"
  ansible.builtin.shell: |
    set -o pipefail
    ./hl_qual -gaudi3 -c all -rmod parallel -i 40 -ep 40 -nic_base -test_type allgather -dis_mon
  args:
    executable: /bin/bash
    chdir: /opt/habanalabs/qual/gaudi3/bin
  register: serdes_base_allgather_test_result
  failed_when: "'FAILED' in serdes_base_allgather_test_result.stdout"
  changed_when: true

- name: Run hl_qual serdes base direct bandwidth test
  environment:
    __python_cmd: "python{{ pver }}"
    LOG_LEVEL_ALL: "{{ verify_intel_gaudi_habana_tests['log_level_all'] }}"
    ENABLE_CONSOLE: "{{ verify_intel_gaudi_habana_tests['enable_console'] }}"
    HABANA_LOGS: "{{ verify_intel_gaudi_habana_tests['habana_logs'] }}"
    HABANALABS_HLTHUNK_TESTS_BIN_PATH: "{{ verify_intel_gaudi_habana_tests['habanalabs_hlthunk_tests_bin_path'] }}"
  ansible.builtin.shell: |
    set -o pipefail
    ./hl_qual -gaudi3 -c all -rmod parallel -i 40 -ep 40 -nic_base -test_type dir_bw -dis_mon
  args:
    executable: /bin/bash
    chdir: /opt/habanalabs/qual/gaudi3/bin
  register: serdes_base_dirbw_test_result
  failed_when: "'FAILED' in serdes_base_dirbw_test_result.stdout"
  changed_when: true

- name: Unload habanalabs kernel module
  community.general.modprobe:
    name: habanalabs
    state: absent

- name: Load habanalabs kernel module with timeout_locked param
  community.general.modprobe:
    name: habanalabs
    state: present
    params: 'timeout_locked=0'

- name: Bring DOWN all Gaudi3 NICs
  ansible.builtin.shell: |
    set -o pipefail
    ./manage_network_ifs.sh --down
  args:
    executable: /bin/bash
    chdir: /opt/habanalabs/qual/gaudi3/bin
  changed_when: true

- name: Bring UP all Gaudi3 NICs
  ansible.builtin.shell: |
    set -o pipefail
    ./manage_network_ifs.sh --up
  args:
    executable: /bin/bash
    chdir: /opt/habanalabs/qual/gaudi3/bin
  changed_when: true

- name: Retry until HPUs NICs are ready
  ansible.builtin.shell: |
    set -o pipefail
    ./manage_network_ifs.sh --status | grep down | wc -l
  args:
    executable: /bin/bash
    chdir: /opt/habanalabs/qual/gaudi3/bin
  register: result
  until: (result.stdout == "0")
  retries: 5
  delay: 5
  changed_when: false
  failed_when: false

- name: Run hl_qual HBM DMA stress test
  environment:
    __python_cmd: "python{{ pver }}"
    LOG_LEVEL_ALL: "{{ verify_intel_gaudi_habana_tests['log_level_all'] }}"
    ENABLE_CONSOLE: "{{ verify_intel_gaudi_habana_tests['enable_console'] }}"
    HABANA_LOGS: "{{ verify_intel_gaudi_habana_tests['habana_logs'] }}"
    GC_KERNEL_PATH: "{{ verify_intel_gaudi_habana_tests['gc_kernel_path'] }}"
    HABANA_SCAL_BIN_PATH: "{{ verify_intel_gaudi_habana_tests['habana_scal_bin_path'] }}"
    HABANA_PLUGINS_LIB_PATH: "{{ verify_intel_gaudi_habana_tests['habana_plugins_lib_path'] }}"
    DATA_LOADER_AEON_LIB_PATH: "{{ verify_intel_gaudi_habana_tests['data_loader_aeon_lib_path'] }}"
    HABANALABS_HLTHUNK_TESTS_BIN_PATH: "{{ verify_intel_gaudi_habana_tests['habanalabs_hlthunk_tests_bin_path'] }}"
  ansible.builtin.shell: |
    set -o pipefail
    ./hl_qual -gaudi3 -c all -rmod parallel -i 1 -hbm_dma_stress -dis_mon
  args:
    executable: /bin/bash
    chdir: /opt/habanalabs/qual/gaudi3/bin
  register: hbm_dma_stress_test_result
  failed_when: "'FAILED' in hbm_dma_stress_test_result.stdout"
  changed_when: true

- name: Run hl_qual HBM TPC stress test
  environment:
    __python_cmd: "python{{ pver }}"
    LOG_LEVEL_ALL: "{{ verify_intel_gaudi_habana_tests['log_level_all'] }}"
    ENABLE_CONSOLE: "{{ verify_intel_gaudi_habana_tests['enable_console'] }}"
    HABANA_LOGS: "{{ verify_intel_gaudi_habana_tests['habana_logs'] }}"
    GC_KERNEL_PATH: "{{ verify_intel_gaudi_habana_tests['gc_kernel_path'] }}"
    HABANA_SCAL_BIN_PATH: "{{ verify_intel_gaudi_habana_tests['habana_scal_bin_path'] }}"
    HABANA_PLUGINS_LIB_PATH: "{{ verify_intel_gaudi_habana_tests['habana_plugins_lib_path'] }}"
    DATA_LOADER_AEON_LIB_PATH: "{{ verify_intel_gaudi_habana_tests['data_loader_aeon_lib_path'] }}"
    HABANALABS_HLTHUNK_TESTS_BIN_PATH: "{{ verify_intel_gaudi_habana_tests['habanalabs_hlthunk_tests_bin_path'] }}"
  ansible.builtin.shell: |
    set -o pipefail
    ./hl_qual -gaudi3 -c all -rmod parallel -i 1 -hbm_tpc_stress -dis_mon
  args:
    executable: /bin/bash
    chdir: /opt/habanalabs/qual/gaudi3/bin
  register: hbm_tpc_stress_test_result
  failed_when: "'FAILED' in hbm_tpc_stress_test_result.stdout"
  changed_when: true

- name: Run hl_qual power stress test
  environment:
    __python_cmd: "python{{ pver }}"
    LOG_LEVEL_ALL: "{{ verify_intel_gaudi_habana_tests['log_level_all'] }}"
    ENABLE_CONSOLE: "{{ verify_intel_gaudi_habana_tests['enable_console'] }}"
    HABANA_LOGS: "{{ verify_intel_gaudi_habana_tests['habana_logs'] }}"
    GC_KERNEL_PATH: "{{ verify_intel_gaudi_habana_tests['gc_kernel_path'] }}"
    HABANA_SCAL_BIN_PATH: "{{ verify_intel_gaudi_habana_tests['habana_scal_bin_path'] }}"
    HABANA_PLUGINS_LIB_PATH: "{{ verify_intel_gaudi_habana_tests['habana_plugins_lib_path'] }}"
    DATA_LOADER_AEON_LIB_PATH: "{{ verify_intel_gaudi_habana_tests['data_loader_aeon_lib_path'] }}"
    HABANALABS_HLTHUNK_TESTS_BIN_PATH: "{{ verify_intel_gaudi_habana_tests['habanalabs_hlthunk_tests_bin_path'] }}"
  ansible.builtin.shell: |
    set -o pipefail
    ./hl_qual -gaudi3 -c all -rmod parallel -s -t 120 -dis_mon
  args:
    executable: /bin/bash
    chdir: /opt/habanalabs/qual/gaudi3/bin
  register: power_stress_test_result
  failed_when: "'FAILED' in power_stress_test_result.stdout"
  changed_when: true

- name: Run hl_qual EDP stress test
  environment:
    __python_cmd: "python{{ pver }}"
    LOG_LEVEL_ALL: "{{ verify_intel_gaudi_habana_tests['log_level_all'] }}"
    ENABLE_CONSOLE: "{{ verify_intel_gaudi_habana_tests['enable_console'] }}"
    HABANA_LOGS: "{{ verify_intel_gaudi_habana_tests['habana_logs'] }}"
    GC_KERNEL_PATH: "{{ verify_intel_gaudi_habana_tests['gc_kernel_path'] }}"
    HABANA_SCAL_BIN_PATH: "{{ verify_intel_gaudi_habana_tests['habana_scal_bin_path'] }}"
    HABANA_PLUGINS_LIB_PATH: "{{ verify_intel_gaudi_habana_tests['habana_plugins_lib_path'] }}"
    DATA_LOADER_AEON_LIB_PATH: "{{ verify_intel_gaudi_habana_tests['data_loader_aeon_lib_path'] }}"
    HABANALABS_HLTHUNK_TESTS_BIN_PATH: "{{ verify_intel_gaudi_habana_tests['habanalabs_hlthunk_tests_bin_path'] }}"
  ansible.builtin.shell: |
    set -o pipefail
    ./hl_qual -gaudi3 -c all -rmod parallel -e -sync -t 120 -Tw 2 -Ts 3 -dis_mon
  args:
    executable: /bin/bash
    chdir: /opt/habanalabs/qual/gaudi3/bin
  register: edp_stress_test_result
  failed_when: "'FAILED' in edp_stress_test_result.stdout"
  changed_when: true

- name: Run hl_qual e2e concurrency test
  environment:
    __python_cmd: "python{{ pver }}"
    LOG_LEVEL_ALL: "{{ verify_intel_gaudi_habana_tests['log_level_all'] }}"
    ENABLE_CONSOLE: "{{ verify_intel_gaudi_habana_tests['enable_console'] }}"
    HABANA_LOGS: "{{ verify_intel_gaudi_habana_tests['habana_logs'] }}"
    GC_KERNEL_PATH: "{{ verify_intel_gaudi_habana_tests['gc_kernel_path'] }}"
    HABANA_SCAL_BIN_PATH: "{{ verify_intel_gaudi_habana_tests['habana_scal_bin_path'] }}"
    HABANA_PLUGINS_LIB_PATH: "{{ verify_intel_gaudi_habana_tests['habana_plugins_lib_path'] }}"
    DATA_LOADER_AEON_LIB_PATH: "{{ verify_intel_gaudi_habana_tests['data_loader_aeon_lib_path'] }}"
    RDMA_CORE_ROOT: "{{ verify_intel_gaudi_habana_tests['rdma_core_root'] }}"
    RDMA_CORE_LIB: "{{ verify_intel_gaudi_habana_tests['rdma_core_lib'] }}"
    HABANALABS_HLTHUNK_TESTS_BIN_PATH: "{{ verify_intel_gaudi_habana_tests['habanalabs_hlthunk_tests_bin_path'] }}"
  ansible.builtin.shell: |
    set -o pipefail
    ./hl_qual -gaudi3 -c all -rmod parallel -t 30 -dis_mon -e2e_concurrency
  args:
    executable: /bin/bash
    chdir: /opt/habanalabs/qual/gaudi3/bin
  register: e2e_concurrency_test_result
  failed_when: "'FAILED' in e2e_concurrency_test_result.stdout"
  changed_when: true

- name: Run hl_qual SER test
  environment:
    __python_cmd: "python{{ pver }}"
    LOG_LEVEL_ALL: "{{ verify_intel_gaudi_habana_tests['log_level_all'] }}"
    ENABLE_CONSOLE: "{{ verify_intel_gaudi_habana_tests['enable_console'] }}"
    HABANA_LOGS: "{{ verify_intel_gaudi_habana_tests['habana_logs'] }}"
    GC_KERNEL_PATH: "{{ verify_intel_gaudi_habana_tests['gc_kernel_path'] }}"
    HABANA_SCAL_BIN_PATH: "{{ verify_intel_gaudi_habana_tests['habana_scal_bin_path'] }}"
    HABANA_PLUGINS_LIB_PATH: "{{ verify_intel_gaudi_habana_tests['habana_plugins_lib_path'] }}"
    DATA_LOADER_AEON_LIB_PATH: "{{ verify_intel_gaudi_habana_tests['data_loader_aeon_lib_path'] }}"
    RDMA_CORE_ROOT: "{{ verify_intel_gaudi_habana_tests['rdma_core_root'] }}"
    RDMA_CORE_LIB: "{{ verify_intel_gaudi_habana_tests['rdma_core_lib'] }}"
    HABANALABS_HLTHUNK_TESTS_BIN_PATH: "{{ verify_intel_gaudi_habana_tests['habanalabs_hlthunk_tests_bin_path'] }}"
  ansible.builtin.shell: |
    set -o pipefail
    ./hl_qual -gaudi3 -c all -rmod parallel -dis_mon -ser
  args:
    executable: /bin/bash
    chdir: /opt/habanalabs/qual/gaudi3/bin
  register: ser_test_result
  failed_when: "'result: FAILED' in ser_test_result.stdout"
  changed_when: true
