# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Delete ports for switch_based
  hosts: localhost
  connection: local
  vars:
   switch_ports_undefined: "Failed.Please provide switch_ports for the switch_ip in the switch inventory"
   switch_ports_empty: "Failed. Please provide switch_ports details to be deleted in switch inventory"
   fail_switch_inventory: "Failed. Please provide proper switch details in switch_based_deletion_config.yml"
   delete_ports: delete_ports.py
   python_version: "python3.8"
   ping_file_path: "{{ playbook_dir }}/../../provision/roles/provision_validation/files/switch_v3_ping.py"
  tasks:
    - name: Include vars
      ansible.builtin.include_vars: switch_based_deletion_config.yml

    - name: Print the switch_port
      ansible.builtin.debug:
        msg: "{{ playbook_dir }}"
      with_items: "{{ switch_based_details }}"

    - name: Validate switch based deletion parameters
      block:
        - name: Check if switch ip present
          ansible.builtin.fail:
            msg: "{{ fail_switch_inventory }}"
          when: item.ip == ""
          with_items: "{{ switch_based_details }}"

        - name: Ping the switch ip
          ansible.builtin.command: |
            {{ python_version }} {{ ping_file_path }} {{ item.ip }}
          with_items: "{{ switch_based_details }}"

        - name: Fail if switch_port not defined
          ansible.builtin.fail:
            msg:  "{{ switch_ports_undefined }}"
          when: item.delete_ports is not defined
          with_items: "{{ switch_based_details }}"

        - name: Fail if switch_port is not provided
          ansible.builtin.fail:
            msg: "{{ switch_ports_empty }}"
          when: item.delete_ports == ''
          with_items: "{{ switch_based_details }}"

      rescue:
        - name: Fail if switch_ports is not proper
          ansible.builtin.fail:
            msg: "{{ fail_switch_inventory }}"

    - name: Delete the ports
      ansible.builtin.command: |
        {{ python_version }} {{ delete_ports }} {{ item.ip }} {{ item.delete_ports }}
      with_items: "{{ switch_based_details }}"