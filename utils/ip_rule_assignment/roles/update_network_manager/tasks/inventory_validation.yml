# Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Execute dnf makecache on /etc/cluster.repos.d
  block:
    - name: Validate inventory format
      ansible.builtin.assert:
        that:
          - current_host is defined
          - hostvars[current_host].nic_info is defined
          - hostvars[current_host].nic_info | default([]) | length > 0
          - hostvars[current_host].nic_info | selectattr('nic_name', 'defined') | list | length > 0
          - hostvars[current_host].nic_info | selectattr('gateway', 'defined') | list | length > 0
          - hostvars[current_host].nic_info | selectattr('metric', 'defined') | list | length > 0
          - hostvars[current_host].nic_info | map(attribute='nic_name') | list | unique | length == hostvars[current_host].nic_info | list | length
          - hostvars[current_host].nic_info | map(attribute='gateway') | list | unique | length == hostvars[current_host].nic_info | list | length
          - hostvars[current_host].nic_info | map(attribute='metric') | list | unique | length == hostvars[current_host].nic_info | list | length
        msg: "{{ inventory_fail_msg }}"
      vars:
        current_host: "{{ item.key }}"
      with_dict: "{{ hostvars }}"
      when: hostvars[current_host].nic_info is defined
  rescue:
    - name: Invalid inventory format
      ansible.builtin.fail:
        msg: "{{ inventory_fail_msg }}"

- name: Validate gateway IP address in inventory file
  ansible.builtin.assert:
    that:
      - item.value.split('.') | map('int') | list | length == 4
      - item.value | ansible.utils.ipaddr
    fail_msg: "{{ gateway_ip_fail_msg }} {{ item.value }}"
  when: item.key == 'gateway'
  with_dict: "{{ hostvars[inventory_hostname].nic_info }}"
