# Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Load software_config.json as software_config
  block:
    - name: Load software_config.json as software_config
      ansible.builtin.include_vars:
        file: "{{ software_config_file }}"
        name: software_config
      register: include_software_config
      no_log: true
  rescue:
    - name: Failed to load software_config.json as software_config
      ansible.builtin.fail:
        msg: "{{ software_config_syntax_fail_msg }} Error: {{ include_software_config.message }}"

- name: Fail if software_config variables not present
  ansible.builtin.fail:
    msg: "{{ invalid_software_config_fail_msg }}"
  when:
    - software_config.cluster_os_type is not defined or
      software_config.cluster_os_version is not defined or
      software_config.repo_config is not defined or
      software_config.cluster_os_type | length < 1 or
      software_config.cluster_os_version | length < 1 or
      software_config.repo_config | length < 1 or
      software_config.softwares is not defined

- name: Set facts for cluster
  ansible.builtin.set_fact:
    repo_config: "{{ software_config.repo_config }}"
    cluster_os_type: "{{ software_config.cluster_os_type }}"
    cluster_os_version: "{{ software_config.cluster_os_version }}"
    softwares: "{{ software_config.softwares }}"

- name: Check softwares_list mentioned in software_config.json
  ansible.builtin.fail:
    msg: "{{ invalid_software_fail_msg }}"
  when: not (software_config.softwares | selectattr('name', 'equalto', item) | list | length > 0)
  with_items: "{{ softwares_list }}"

- name: Validate json file
  block:
    - name: Valid json path present
      ansible.builtin.stat:
        path: "{{ json_folder }}/{{ item }}.json"
      register: json_check
      with_items: "{{ softwares_list }}"
      failed_when: not json_check.stat.exists
  rescue:
    - name: Failed to validate json file
      ansible.builtin.fail:
        msg: "{{ invalid_json_fail_msg }}"
