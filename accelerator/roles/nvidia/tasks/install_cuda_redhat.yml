# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Subscribe for code ready builder repo in RHEL
  ansible.builtin.command: subscription-manager repos --enable=codeready-builder-for-rhel-8-x86_64-rpms
  when:
    - os_supported_rhel in ansible_facts['distribution'] | lower
    - not hostvars['127.0.0.1']['xcat_installation_status']
  changed_when: false

- name: Download development packages
  ansible.builtin.package:
    name: "@Development tools"
    state: present

- name: Download development packages and kernel devel packages
  ansible.builtin.shell: dnf install kernel-devel-$(uname -r) kernel-headers-$(uname -r) -y
  changed_when: true

- name: Enable EPEL Repo
  ansible.builtin.yum: # noqa fqcn[action-core]
    name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
    state: present
    disable_gpg_check: true

- name: Install cuda toolkit using offline path
  when: hostvars['localhost']['local_installer']
  block:
    - name: Install packages from cuda rpm file
      ansible.builtin.yum: # noqa fqcn[action-core]
        name: "{{ cuda_filepath }}"
        state: present
        disable_gpg_check: true

- name: Install latest cuda toolkit using network way
  when: not hostvars['localhost']['local_installer']
  block:
    - name: Set Redhat distro
      ansible.builtin.set_fact:
        distro: "{{ 'rhel' + ansible_distribution_major_version }}"

    - name: Add cuda repository
      ansible.builtin.command: dnf config-manager --add-repo "{{ cuda_repo_url }}"
      changed_when: false

- name: Delete xorg.conf file if present
  ansible.builtin.file:
    path: "/etc/X11/xorg.conf"
    state: absent

- name: Clean cache
  ansible.builtin.command: yum clean all
  changed_when: false

- name: Install CUDA SDK
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
    - "@nvidia-driver:{{ cuda_stream }}"
    - cuda
  notify:
    - Reboot node

- name: Flush handler to reboot the node
  ansible.builtin.meta: flush_handlers

- name: Check if environment variables are set
  ansible.builtin.command: echo $PATH
  changed_when: false
  failed_when: false
  register: path_output

- name: Perform Post Installation steps
  when: "'cuda' not in path_output.stdout"
  block:
    - name: Check current environment variables
      ansible.builtin.shell: echo $PATH
      changed_when: false
      register: environment_output

    - name: Replace PATH variable
      ansible.builtin.lineinfile:
        path: /etc/bashrc
        regexp: '^PATH=*'
        insertafter: EOF
        line: 'PATH={{ environment_output.stdout }}:/usr/local/cuda/bin'

- name: Enable nvidia-persistenced systemd service
  ansible.builtin.service:
    name: nvidia-persistenced
    enabled: true

- name: Start nvidia-persistenced service, if not started
  ansible.builtin.service:
    name: nvidia-persistenced
    state: started
