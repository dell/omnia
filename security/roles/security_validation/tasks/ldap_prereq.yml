# Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Get OpenLDAP local git repo status
  ansible.builtin.uri:
    url: "{{ offline_git_path }}/{{ ltb_git_repo_path }}.tar.gz"
    return_content: false
  register: ldap_repo_status

- name: Validate OpenLDAP local git repo
  ansible.builtin.assert:
    that: ldap_repo_status.status == 200
    fail_msg: "{{ ldap_repo_failure_msg }}"

- name: Remove LDAP directory if exists
  ansible.builtin.command: rm -rf "{{ ldap_dir }}"
  changed_when: false

- name: Create LDAP directory
  ansible.builtin.command: mkdir -p "{{ ldap_dir }}"
  changed_when: false

- name: Get LDAP git repo tarball
  ansible.builtin.get_url:
    url: "{{ offline_git_path }}/{{ ltb_git_repo_path }}.tar.gz"
    dest: "{{ ldap_dir }}"
    mode: "{{ file_permission }}"

- name: Setup LTB repo to control plane
  ansible.builtin.unarchive:
    src: "{{ ldap_dir }}/{{ ltb_git_repo_path }}.tar.gz"
    dest: "{{ ldap_dir }}"

- name: Remove public access tasks
  ansible.builtin.replace:
    dest: "{{ ldap_dir }}/{{ ltb_git_repo_path }}/tasks/main.yml"
    regexp: '^(.*repository)'
    replace: '#\1'
