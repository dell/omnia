# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Validate login node parameters when login_node_reqd is set to true
  ansible.builtin.fail:
    msg: "{{ input_config_failure_msg }} for freeipa or login_node"
  when:
    - ( domain_name | length < 1 or
      realm_name | length < 1 or
      directory_manager_password | length < 1 or
      kerberos_admin_password | length < 1 )

- name: Validate the domain name
  ansible.builtin.assert:
    that:
      - domain_name is regex("^(?!-)[A-Za-z0-9-]+([\\-\\.]{1}[a-z0-9]+)*\\.[A-Za-z]{2,}$")
    success_msg: "{{ domain_name_success_msg }}"
    fail_msg: "{{ domain_name_fail_msg }}"

- name: Validate the realm name
  ansible.builtin.assert:
    that:
      - realm_name is regex("^(?!-)[A-Z0-9-]+([\\-\\.]{1}[a-z0-9]+)*\\.[A-Z]{2,}$")
      - '"." in realm_name'
    success_msg: "{{ realm_name_success_msg }}"
    fail_msg: "{{ realm_name_fail_msg }}"

- name: Assert directory_manager_password
  ansible.builtin.assert:
    that:
      - directory_manager_password | length > min_length | int - 1
      - directory_manager_password | length < max_length | int + 1
      - '"-" not in directory_manager_password '
      - '"\\" not in directory_manager_password '
      - '"\"" not in directory_manager_password '
      - " \"'\" not in directory_manager_password "
    success_msg: "{{ success_msg_directory_manager_password }}"
    fail_msg: "{{ fail_msg_directory_manager_password }}"

- name: Assert kerberos_admin_password
  ansible.builtin.assert:
    that:
      - kerberos_admin_password | length > min_length | int - 1
      - kerberos_admin_password | length < max_length | int + 1
      - '"-" not in kerberos_admin_password '
      - '"\\" not in kerberos_admin_password '
      - '"\"" not in kerberos_admin_password '
      - " \"'\" not in kerberos_admin_password "
    success_msg: "{{ success_msg_kerberos_admin_password }}"
    fail_msg: "{{ fail_msg_kerberos_admin_password }}"
