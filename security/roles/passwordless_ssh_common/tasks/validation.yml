#  Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Initialize username
  ansible.builtin.set_fact:
    user: "{{ item }}"

- name: Vailidate ldap home directory
  delegate_to: "{{ groups['auth_server'][0] }}"
  run_once: true
  when: hostvars['127.0.0.1']['authentication_type'] == "ldap"
  block:
    - name: Check ldap home directory exists - {{ user }}
      ansible.builtin.stat:
        path: "{{ user_home_dir }}/{{ user }}"
      register: ldap_directory

    - name: Fail if ldap home directory not exists - {{ user }}
      ansible.builtin.fail:
        msg: "{{ ldap_home_dir_fail_msg }}"
      when: not ldap_directory.stat.exists

    - name: Set ldap user_home_directory - {{ user }}
      ansible.builtin.set_fact:
        user_home_directory: "{{ user_home_dir }}"

- name: Vailidate freeIPA home directory
  delegate_to: "{{ groups['auth_server'][0] }}"
  run_once: true
  when: hostvars['127.0.0.1']['authentication_type'] == "freeipa"
  block:
    - name: Check ipa home directory exists - {{ user }}
      ansible.builtin.stat:
        path: "{{ user_home_dir }}/{{ user }}"
      register: ipa_directory

    - name: Fail if ipa home directory not exists - {{ user }}
      ansible.builtin.fail:
        msg: "{{ ipa_home_dir_fail_msg }}"
      when: not ipa_directory.stat.exists

    - name: Set ipa user_home_directory - {{ user }}
      ansible.builtin.set_fact:
        user_home_directory: "{{ user_home_dir }}"
