#  Copyright 2021 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Uninstall ipa server if already installed
  ansible.builtin.command: ipa-server-install --uninstall -U
  changed_when: false
  failed_when: false

- name: Install ipa server
  block:
    - name: Install ipa server in CentOS 7.9(It may take 5-10 mins)
      ansible.builtin.command: >-
        ipa-server-install -n '{{ hostvars['127.0.0.1']['domain_name'] }}' --hostname='{{ server_hostname }}'
        -a '{{ hostvars['127.0.0.1']['kerberos_admin_password'] }}' -p '{{ hostvars['127.0.0.1']['directory_manager_password'] }}'
        -r '{{ hostvars['127.0.0.1']['realm_name'] }}' -U
      changed_when: true
      no_log: true
      register: install_ipa_server
      when:
        - ( ansible_distribution | lower == os_centos )
        - ( ansible_distribution_version < os_version )

    - name: Install ipa server in RHEL 8 or Rocky 8(It may take 5-10 mins)
      ansible.builtin.command: >-
        ipa-server-install -n '{{ hostvars['127.0.0.1']['domain_name'] }}' --hostname='{{ server_hostname }}'
        -a '{{ hostvars['127.0.0.1']['kerberos_admin_password'] }}' -p '{{ hostvars['127.0.0.1']['directory_manager_password'] }}'
        -r '{{ hostvars['127.0.0.1']['realm_name'] }}' --no-ntp -U
      changed_when: true
      no_log: true
      register: install_ipa_server
      when:
        - ( ansible_distribution | lower == os_centos ) or
          ( ansible_distribution | lower == os_rocky ) or
          ( ansible_distribution | lower == os_redhat )
        - ( ansible_distribution_version >= os_version )
  rescue:
    - name: Install ipa server failed
      ansible.builtin.fail:
        msg: "Error: {{ install_ipa_server.stderr_lines }}"

- name: Authenticate as admin
  block:
    - name: Authenticate as admin
      ansible.builtin.shell: set -o pipefail && echo $'{{ hostvars['127.0.0.1']['kerberos_admin_password'] }}' | kinit {{ ipa_admin_username }}
      no_log: true
      changed_when: false
      register: authenticate_admin
  rescue:
    - name: Retry authenticate as admin
      block:
        - name: Start sssd-kcm and sssd services
          ansible.builtin.systemd:
            name: "{{ item }}"
            state: started
          with_items:
            - sssd-kcm.socket
            - sssd.service

        - name: Authenticate as admin
          ansible.builtin.shell: set -o pipefail && echo $'{{ hostvars['127.0.0.1']['kerberos_admin_password'] }}' | kinit {{ ipa_admin_username }}
          no_log: true
          changed_when: false
          register: authenticate_admin
      rescue:
        - name: Authenticate as admin failed
          ansible.builtin.fail:
            msg: "Error: {{ authenticate_admin.stderr }}"

- name: Replace the /etc/resolv.conf file
  ansible.builtin.copy:
    src: "{{ temp_resolv_conf_path }}"
    dest: "{{ resolv_conf_path }}"
    mode: "{{ file_mode }}"
    remote_src: true

- name: Install mkhomedir to enable home directory creation for users
  ansible.builtin.command: authselect enable-feature with-mkhomedir
  changed_when: false
  failed_when: false

- name: Enable oddjob service
  ansible.builtin.systemd:
    name: oddjobd
    state: started
    enabled: true
  failed_when: false
