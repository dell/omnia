# Copyright 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Check selinux status
  when:
    - control_plane_os in control_plane_os_redhat or
      control_plane_os in control_plane_os_rocky
  block:
    - name: Fetch selinux mode
      ansible.builtin.command: sestatus
      register: sestatus_current
      changed_when: false

    - name: Disable selinux
      ansible.builtin.replace:
        path: /etc/sysconfig/selinux
        regexp: 'SELINUX=[a-z]+'
        replace: 'SELINUX=disabled'
      when: '"SELinux status:                 enabled" in sestatus_current.stdout_lines'

    - name: Status of selinux
      ansible.builtin.fail:
        msg: "{{ selinux_status_fail_msg }}"
      when: '"SELinux status:                 enabled" in sestatus_current.stdout_lines'

- name: Initialize variables
  ansible.builtin.set_fact:
    xcat_installation_status: false
    validation_status: true

- name: Check output of network table
  ansible.builtin.command: lsdef -t network
  changed_when: false
  failed_when: false
  register: network_table_check

- name: Restart postgresql and xcat services if xcat already installed
  ansible.builtin.service:
    name: "{{ item }}"
    state: restarted
    enabled: true
  failed_when: false
  with_items:
    - postgresql
    - xcatd
  when:
    - network_table_check.stderr is defined
    - xcat_connection_search_key in network_table_check.stderr | lower

- name: Gathering service facts
  ansible.builtin.service_facts:

- name: Check output of site table
  ansible.builtin.command: tabdump site
  changed_when: false
  failed_when: false
  register: site_table_check

- name: Set xcat_installation_status to true
  ansible.builtin.set_fact:
    xcat_installation_status: true
  when:
    - xcatd_service in ansible_facts.services
    - postgresql_service in ansible_facts.services
    - "'running' in ansible_facts.services[xcatd_service].state"
    - "'running' in ansible_facts.services[postgresql_service].state"
    - "'#key,value' in site_table_check.stdout"
