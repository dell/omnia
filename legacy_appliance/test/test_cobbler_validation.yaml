#  Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---
- name: Start_test_Omnia_1.2.1_cobbler_with_default_params
  hosts: localhost
  connection: local
  vars_files:
   - /test_vars/test_cobbler_vars.yml

# Test Cobbler with default params TC01
  tasks:

    - name: Get cobbler pod status
      command: kubectl get pods -n cobbler
      register: cobbler_pod_info
      changed_when: false
      tags: cob_tc_001

    - name: Check if cobbler pod is running
      assert:
        that:
          - '"Running" in cobbler_pod_info.stdout'
        success_msg: "{{ cobbler_pod_success_status }}"
        fail_msg: "{{ cobbler_pod_fail_status }}"
        tags: cob_tc_001

    - name: Get cobbler pod name
      command: kubectl get pods -n cobbler -o name
      register: cobbler_pod_name
      changed_when: false
      tags: cob_tc_001

    - name: Check the cobbler container os version
      command: kubectl exec -it "{{ cobbler_pod_name.stdout }}" -n cobbler -- cat /etc/os-release
      register: cobbler_os_version
      changed_when: false
      tags: cob_tc_001

    - name: Check if cobbler os is Rocky
      assert:
        that:
          - '"Rocky Linux" in cobbler_os_version.stdout'
        success_msg: "{{ cobbler_os_success_status }}"
        fail_msg: "{{ cobbler_os_fail_status }}"
        tags: cob_tc_001

    - name: Check the cobbler version
      command: kubectl exec -it "{{ cobbler_pod_name.stdout }}" -n cobbler -- cobbler version
      register: cobbler_version
      changed_when: false
      tags: cob_tc_001

    - name: Check if cobbler version is v3.2.2
      assert:
        that:
          - '"Cobbler 3.2.2" in cobbler_version.stdout'
        success_msg: "{{ cobbler_version_success_msg }}"
        fail_msg: "{{ cobbler_version_fail_msg }}"
        tags: cob_tc_001

    - name: Check  cobbler services
      command: 'kubectl exec -it "{{ cobbler_pod_name.stdout }}" -n cobbler -- systemctl is-active {{ item }}'
      register: cobbler_service
      changed_when: false
      with_items:
        - 'dhcpd'
        - 'xinetd'
        - 'tftp'
        - 'cobblerd'
      tags: cob_tc_001

    - name: Verify tftp,dhcpd,xinetd,cobblerd service is running
      assert:
        that:
          - "'active' in cobbler_service.results[{{  item  }}].stdout"
          - "'inactive' not in cobbler_service.results[{{  item  }}].stdout"
          - "'unknown' not in cobbler_service.results[{{  item  }}].stdout"
        success_msg: "{{ pod_service_check_success_msg }}"  
        fail_msg: "{{ pod_service_check_fail_msg }}"
        
      with_sequence: start=0 end=3
      tags: cob_tc_001

    - name: Check cobbler profile list
      command: 'kubectl exec -it "{{ cobbler_pod_name.stdout }}" -n cobbler -- cobbler profile list'
      register: cobbler_profile_list
      changed_when: false
      tags: cob_tc_001

    - name: Verify if the profile is in proper order
      assert:
        that: 
         - ("rocky" in cobbler_profile_list.stdout) or ("leap" in cobbler_profile_list.stdout) or ("rhel" in cobbler_profile_list.stdout)
        success_msg: "{{ verify_profile_list_success_msg }}" 
        fail_msg: "{{ verify_Profile_list_fail_msg }}"
        tags: cob_tc_001

# Bring down cobbler pod, and bring it up again TC02
# Cobbler pod should already be running
    
    - name: Delete the cobbler pod
      command: kubectl delete "{{ cobbler_pod_name.stdout }}" -n cobbler 
      register: cobbler_pod_delete
      changed_when: true
      tags: cob_tc_002

    - name: check if the pod is deleted or not
      assert:
        that: '"deleted" in cobbler_pod_delete.stdout'
        success_msg: "{{ check_pod_delted_success_msg }}"
        fail_msg: "{{ check_pod_deleted_fail_msg }}"
        tags: cob_tc_002

    - name: Replace input vars
      lineinfile:
        path: "/root/omnia/control_plane/input_params/base_vars.yml"
        regexp: '^provision_os:'
        line: "provision_os: 'rocky' "
        tags: cob_tc_002

    - name: Replace provision_iso path
      lineinfile:
        path: "/root/omnia/control_plane/input_params/base_vars.yml"
        regexp: '^iso_file_path:'
        line: "iso_file_path: 'Rocky-8.5-x86_64-dvd1'"
        tags: cob_tc_002

    - block:
        - name: Execute control_plane
          command: ansible-playbook control_plane.yml
          register: control_plane_info
          changed_when: true
          tags: cob_tc_002

    - name: Assert failure
      assert:
        that:
          - '"error" in control_plane_info.stderr'
        success_msg: "{{ control_plan_success_msg }}"
        fail_msg: "{{ control_plane_fail_msg }}"  
      tags: cob_tc_002

    - name: Get cobbler pod status
      command: kubectl get pods -n cobbler
      register: cobbler_pod_info
      changed_when: false
      tags: cob_tc_002

    - name: Check if cobbler pod is running
      assert:
        that:
          - '"Running" in cobbler_pod_info.stdout'
        success_msg: "{{ cobbler_pod_success_status }}"
        fail_msg: "{{ cobbler_pod_fail_status }}"
      tags: cob_tc_002

    - name: Get cobbler pod name
      command: kuebctl get pods -n cobbler -o name
      register: cobbler_pod_name
      changed_when: false
      tags: cob_tc_002

    - name: Check the cobbler container os version
      command: kubectl exec -it "{{ cobbler_pod_name.stdout }}" -n cobbler -- cat /etc/os-release
      register: cobbler_os_version
      changed_when: false
      tags: cob_tc_002

    - name: Check if cobbler os is Rocky
      assert:
        that:
          - '"Rocky Linux" in cobbler_os_version.stdout'
        success_msg: "{{ cobbler_os_success_status }}"
        fail_msg: "{{ cobbler_os_fail_status }}"
      tags: cob_tc_002
      
    - name: Check the cobbler version
      command: kubectl exec -it "{{ cobbler_pod_name.stdout }}" -n cobbler -- cobbler version
      register: cobbler_version
      changed_when: false
      tags: cob_tc_002

    - name: Check if cobbler version is v3.2.2
      assert:
        that:
          - '"Cobbler 3.2.2" in cobbler_version.stdout'
        success_msg: "{{ cobbler_version_success_msg }}"
        fail_msg: "{{ cobbler_version_fail_msg }}"
      tags: cob_tc_002

    - name: Check  cobbler services
      command: 'kubectl exec -it "{{ cobbler_pod_name.stdout }}" -n cobbler -- systemctl is-active {{ item }}'
      register: cobbler_service
      changed_when: false
      with_items:
        - 'dhcpd'
        - 'xinetd'
        - 'tftp'
        - 'cobblerd'
      tags: cob_tc_002

    - name: Verify tftp,dhcpd,xinetd,cobblerd service is running
      assert:
        that:
          - "'active' in cobbler_service.results[{{  item  }}].stdout"
          - "'inactive' not in cobbler_service.results[{{  item  }}].stdout"
          - "'unknown' not in cobbler_service.results[{{  item  }}].stdout"
        success_msg: "{{ pod_service_check_success_msg }}"  
        fail_msg: "{{ pod_service_check_fail_msg }}"
        
      with_sequence: start=0 end=3
      tags: cob_tc_002

    - name: Check cobbler profile list
      command: 'kubectl exec -it "{{ cobbler_pod_name.stdout }}" -n cobbler -- cobbler profile list'
      register: cobbler_profile_list
      changed_when: false
      tags: cob_tc_002

    - name: Verify if the profile is in proper order
      assert:
        that:
          - " 'rocky' in cobbler_profile_list.stdout"
          - " 'leap' not in cobbler_profile_list.stdout"
          - " 'rhel' not in cobbler_profile_list.stdout"
        success_msg: "{{ verify_profile_list_success_msg }}" 
        fail_msg: "{{ verify_Profile_list_fail_msg }}"
      tags: cob_tc_002
    
