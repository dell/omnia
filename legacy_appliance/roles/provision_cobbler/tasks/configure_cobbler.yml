# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Deploy cobbler pod
  command: "kubectl apply -f {{ role_path }}/files/k8s_cobbler.yml"
  changed_when: true
  when:
    - cobbler_container_status
    - not cobbler_config_status
    - not provision_os_change

- name: Wait for cobbler pod to come to ready state
  command: kubectl wait --for=condition=ready --timeout={{ pod_timeout }} -n {{ cobbler_namespace }} pod -l app=cobbler
  changed_when: false

- name: Get cobbler pod name
  command: 'kubectl get pod -n {{ cobbler_namespace }} -l app=cobbler -o jsonpath="{.items[0].metadata.name}"'
  changed_when: false
  register: cobbler_pod_name

- name: Wait for 30 seconds to get cobbler pod ready
  wait_for:
    timeout: 30

- name: Configuring cobbler inside container (It may take 5-10 mins) when mgmt container or lom is needed
  command: 'kubectl exec --stdin --tty -n {{ cobbler_namespace }} {{ cobbler_pod_name.stdout }} \
  -- ansible-playbook /root/cobbler_configurations_rocky.yml -e provision_os="{{ provision_os }}" -e file_perm="{{ file_perm }}" \ -e network_interface_type="{{ network_interface_type }}" -e mgmt_network_subnet="{{ mgmt_network_subnet }}" \
    -e mgmt_network_netmask="{{ mgmt_network_netmask }}" \ -e subnet="{{ subnet }}" -e  netmask="{{ netmask }}" -e device_support_status="{{ device_support_status }}" -e roce_enabled="{{ roce_enabled }}"'
  changed_when: true
  when:
    - not cobbler_config_status
    - mgmt_os == os_supported_rocky or mgmt_os == os_supported_rhel
    - not provision_os_change
    - (device_support_status) or cobbler_lom

- name: Configuring cobbler inside container (It may take 5-10 mins) when roce and lom is needed
  command: 'kubectl exec --stdin --tty -n {{ cobbler_namespace }} {{ cobbler_pod_name.stdout }} \
   -- ansible-playbook /root/cobbler_configurations_rocky.yml -e provision_os="{{ provision_os }}" -e file_perm="{{ file_perm }}" \ -e network_interface_type="{{ network_interface_type }}" -e mgmt_network_subnet="{{ mgmt_network_subnet }}" \
     -e mgmt_network_netmask="{{ mgmt_network_netmask }}" \ -e subnet="{{ roce_subnet }}" -e netmask="{{ roce_netmask }}" -e device_support_status="{{ device_support_status }}" -e roce_enabled="{{ roce_enabled }}"'
  changed_when: true
  when:
    - not cobbler_config_status
    - mgmt_os == os_supported_rocky or mgmt_os == os_supported_rhel
    - not provision_os_change
    - not device_support_status
    - mgmt_lom

- name: Configuring cobbler inside container (It may take 5-10 mins) when no  mgmt container present or lom is not chosen
  command: 'kubectl exec --stdin --tty -n {{ cobbler_namespace }} {{ cobbler_pod_name.stdout }} \
-- ansible-playbook /root/cobbler_configurations_rocky.yml -e provision_os="{{ provision_os }}" -e file_perm="{{ file_perm }}" \ -e network_interface_type="{{ network_interface_type }}" -e device_support_status="{{ device_support_status }}" -e roce_enabled="{{ roce_enabled }}"'
  changed_when: true
  when:
    - not cobbler_config_status
    - mgmt_os == os_supported_rocky or mgmt_os == os_supported_rhel
    - not provision_os_change
    - not device_support_status
    - network_interface_type == "dedicated"

- name: Configuring cobbler inside container (It may take 5-10 mins)
  command: 'kubectl exec --stdin --tty -n {{ cobbler_namespace }} {{ cobbler_pod_name.stdout }} \
  -- ansible-playbook /root/cobbler_configurations_leap.yml -e provision_os="{{ provision_os }}" -e file_perm="{{ file_perm }}" \
  -e device_support_status="{{ device_support_status }}" -e network_interface_type ="{{ network_interface_type }}" -e mgmt_network_subnet="{{ mgmt_network_subnet }}" \  -e subnet="{{ subnet }}" -e  netmask="{{ netmask }}"'
  changed_when: true
  when:
    - not cobbler_config_status
    - os_supported_leap in mgmt_os
    - not provision_os_change
    - (device_support_status) or cobbler_lom

- name: Configuring cobbler for multiple profile support
  command: "kubectl exec --stdin --tty -n {{ cobbler_namespace }} {{ cobbler_pod_name.stdout }} -- ansible-playbook /root/multi_cluster_provisioning.yml -e provision_os={{ provision_os }} -e provision_os_change={{ provision_os_change }} -e file_perm={{ file_perm }}"
  changed_when: true
  when: provision_os_change

- name: Execute cobbler sync in cobbler container
  command: 'kubectl exec --stdin --tty -n {{ cobbler_namespace }} {{ cobbler_pod_name.stdout }} -- cobbler sync'
  changed_when: true
  when: cobbler_config_status

- name: Store the provisioned os in .provisioned_os.txt file
  shell: echo "{{ provision_os }}">> {{ role_path }}/files/.provisioned_os
  changed_when: false

- name: Remove the files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ role_path }}/files/.users.digest"
    - "{{ role_path }}/files/dhcp.template"
    - "{{ role_path }}/files/settings"
    - "{{ role_path }}/files/temp_host_mapping_file.csv.bak"
    - "/mnt/tmp"