#  Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

# Usage: validate_k8s_params.yml
os_supported_rhel: "redhat"
os_supported_rocky: "rocky"
k8s_pkgs:
  - yum-plugin-versionlock
  - python3-netaddr
success_msg_k8s_pod_network_cidr: "Appliance k8s pod network cidr validated"
fail_msg_k8s_pod_network_cidr: "Failed. Incorrect appliance k8s pod network cidr provided in monitor_config.yml"
utils_collection: ansible.utils:2.5.2
pip_version: pip3.8

# Usage: k8s_installation_leap.yml
k8s_repo_leap: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
rpm_pkg_leap: https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
yum_key_leap: https://packages.cloud.google.com/yum/doc/yum-key.gpg
gpg_pubkey_leap: "rpm -q gpg-pubkey --qf '%{name}-%{version}-%{release} --> %{summary}'"
docker_repo_url_leap: https://download.docker.com/linux/sles/docker-ce.repo
docker_repo_dest_leap: /etc/YaST2/docker-ce.repo
kubeadm_version: kubeadm-1.21.0-0.x86_64
kubelet_version: kubelet-1.21.0-0.x86_64
kubectl_version: kubectl-1.21.0-0.x86_64
os_supported_leap: "leap"
os_supported_leap_version: "15.3"
min_retries: 3
max_retries: 10
min_delay: 10
wait_time: 30
crio_repo_leap: "https://download.opensuse.org/repositories/devel:kubic/15.3/devel:kubic.repo"
k8s_package_names:
  - kubeadm
  - kubelet
  - kubectl
version_kubectl: "v1.21.0"

# Usage: k8s_installation.yml
k8s_common_packages_rocky:
  - openssl
  - bash-completion
  - cri-o
  - buildah
k8s_common_packages_rhel:
  - openssl
  - bash-completion
  - buildah
k8s_packages:
  - kubelet-1.21.0
  - kubeadm-1.21.0
  - kubectl-1.21.0
k8s_conf_dest: /etc/modules-load.d/
crio_conf_dest: /etc/modules-load.d/
k8s_crio_conf_dest: /etc/sysctl.d/
conf_file_mode: 0644
crio_repo1_url: https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/CentOS_8/devel:kubic:libcontainers:stable.repo
crio_repo1_dest: /etc/yum.repos.d/devel:kubic:libcontainers:stable.repo
crio_repo2_url: https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.21:/1.21.7/CentOS_8/
crio_repo2_dest: /etc/yum.repos.d/devel:kubic:libcontainers:stable:cri-o:1.21.repo
crio_repo2_gpg: https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.21:/1.21.7/CentOS_8/repodata/repomd.xml.key
docker_repo_url: https://download.docker.com/linux/centos/docker-ce.repo
docker_repo_dest: /etc/yum.repos.d/docker-ce.repo
crio_repo: "devel:kubic:libcontainers:stable:cri-o:1.21,rhel-8-for-x86_64-appstream-rpms,rhel-8-for-x86_64-baseos-rpms"
file_mode: 0700

# Usage: k8s_firewalld.yml
k8s_master_ports:
  - 6443/tcp
  - 2379-2380/tcp
  - 10250/tcp
  - 10251/tcp
  - 10252/tcp
  - 10255/tcp
  - 8472/udp
  - 30000-32767/tcp
calico_udp_ports:
  - 4789
calico_tcp_ports:
  - 5473
  - 179

# Usage: k8s_helm.yml
helm_installer_file_directory: /root/bin
helm_installer_file_directory_mode: 0755
helm_installer_url: https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
helm_installer_file_dest: /root/bin/get_helm.sh
helm_installer_file_mode: 0700
helm_stable_repo_url: https://charts.helm.sh/stable

# Usage: k8s_init.yml
docker_login_fail_msg: "Docker login failed! Please check the credentials and re-execute playbook."
k8s_root_directory: /root/.kube
k8s_root_directory_mode: 0755
k8s_config_src: /etc/kubernetes/admin.conf
k8s_config_dest: /root/.kube/config
k8s_config_file_mode: 0644
k8s_cert_path: /etc/kubernetes/pki/ca.crt
yaml_repo_dir_path: /root/k8s
yaml_repo_dir_mode: 0755
tigera_operator_url: https://docs.projectcalico.org/manifests/tigera-operator.yaml
calico_yml_url: https://docs.projectcalico.org/manifests/custom-resources.yaml

# Usage: k8s_services.yml
metallb_config_file_dest: /root/k8s/metal-config.yaml
metallb_config_updated_file_dest: /root/k8s/metal-config-updated.yaml
metallb_config_file_mode: 0655
metallb_deployment_file_dest: /root/k8s/metallb.yaml
metallb_deployment_file_mode: 0655
metallb_yaml_url: https://raw.githubusercontent.com/google/metallb/v0.8.1/manifests/metallb.yaml
metallb_addresses: |
  addresses:
        - 192.168.2.150/32
        - 192.168.2.151/32
        - 192.168.2.151/32
        - 192.168.2.152/32
        - 192.168.2.153/32
        - 192.168.2.154/32
        - 192.168.2.155/32
        - 192.168.2.156/32
        - 192.168.2.157/32
        - 192.168.2.158/32
        - 192.168.2.159/32
metallb_container_port: "7472"
metallb_run_as_user_port: "65534"
k8s_dashboard_yaml_url: https://raw.githubusercontent.com/kubernetes/dashboard/v2.2.0/aio/deploy/recommended.yaml
k8s_dashboard_admin_file_dest: /root/k8s/k8s_dashboard_admin.yaml
k8s_dashboard_admin_file_mode: 0655
nfs_path: /var/nfs_repo
startup_omnia_log_path: /var/log/omnia/startup_omnia
vault_file_perm: '0644'
startup_omnia_log: "{{ startup_omnia_log_path }}/startup_omnia_`/usr/bin/date +\\%F-\\%H\\%M\\%S`.log"

# Usage: nfs_server_setup.yml
nfs_share_offline_repo: /var/nfs_repo
nfs_share_dir_mode: 0777
exports_file_path: /etc/exports
nfs_services:
  - mountd
  - rpc-bind
  - nfs
