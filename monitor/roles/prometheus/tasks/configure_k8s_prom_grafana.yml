#  Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Get kube-prometheus svc IP
  ansible.builtin.command: kubectl get svc -n {{ monitoring_namespace }} -l app=kube-prometheus-stack-prometheus -o=jsonpath='{.items[0].spec.clusterIP}'
  changed_when: false
  register: kube_prom_svc_ip

- name: Get kube-prometheus svc port
  ansible.builtin.command: kubectl get svc -n {{ monitoring_namespace }} -l app=kube-prometheus-stack-prometheus -o=jsonpath='{.items[0].spec.ports[0].port}'
  changed_when: false
  register: kube_prom_svc_port

- name: Create prometheus datasource
  block:
    - name: Create prometheus datasource in grafana
      community.grafana.grafana_datasource:
        name: control-plane-prometheus
        grafana_url: "http://{{ grafana_svc_ip.stdout }}:{{ grafana_svc_port.stdout }}"
        grafana_user: "{{ grafana_username }}"
        grafana_password: "{{ grafana_password }}"
        ds_type: prometheus
        ds_url: "http://{{ kube_prom_svc_ip.stdout }}:{{ kube_prom_svc_port.stdout }}"
        access: proxy
      no_log: true
      register: create_prom_datasource
  rescue:
    - name: Create prometheus datasource in grafana failed
      ansible.builtin.fail:
        msg: "Error: {{ create_prom_datasource.msg }}"

- name: Import K8s grafana dashboards
  block:
    - name: Import K8s grafana dashboards
      community.grafana.grafana_dashboard:
        grafana_url: "http://{{ grafana_svc_ip.stdout }}:{{ grafana_svc_port.stdout }}"
        grafana_user: "{{ grafana_username }}"
        grafana_password: "{{ grafana_password }}"
        state: present
        commit_message: Updated by ansible
        overwrite: true
        path: "{{ role_path }}/files/{{ item }}"
      with_items: "{{ grafana_dashboard_json_files }}"
      no_log: true
      register: import_prom_dashboards
  rescue:
    - name: Import K8s grafana dashboards failed
      ansible.builtin.fail:
        msg: "Error: {{ import_prom_dashboards.msg }}"

- name: Save grafana svc ip
  ansible.builtin.replace:
    path: "{{ grafana_conf_path }}"
    regexp: "ip=.*"
    replace: "ip={{ grafana_svc_ip.stdout }}"

- name: Save grafana port
  ansible.builtin.replace:
    path: "{{ grafana_conf_path }}"
    regexp: "port=.*"
    replace: "port={{ grafana_svc_port.stdout }}"