#  Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Verify the public key file existence
  stat:
    path: "{{ rsa_id_file }}"
  register: verify_rsa_id_file

- name: Create rsa_id file if it doesn't exist
  ansible.builtin.file:
    path: "{{ rsa_id_file }}"
    state: touch
    mode: "{{ ssh_file_mode }}"
  when: not verify_rsa_id_file.stat.exists

- name: Check ssh_key_status
  command: cat {{ rsa_id_file }}
  changed_when: false
  no_log: true
  register: check_ssh_key_status

- name: Update private key status
  set_fact:
    ssh_key_status: true
  when: key_pair_search_key in check_ssh_key_status.stdout

- name: Generate ssh key pair
  shell: ssh-keygen -t rsa -b 4096 -f "{{ rsa_id_file }}" -q -N "{{ passphrase }}" <<<y >/dev/null 2>&1
  changed_when: false
  when: not ssh_key_status

- name: Creating ssh config file with IdentifyFile value
  copy:
    dest: "{{ config_file }}"
    content: |
      Host *
          IdentityFile "{{ rsa_id_file }}"
    mode: "{{ ssh_file_mode }}"

- name: Add the key identity
  shell: |
    eval `ssh-agent -s`
    ssh-add "{{ rsa_id_file }}"
  changed_when: false

- name: Post public key
  block:
    - name: Create .ssh directory
      command: >-
        sshpass -p "{{ hostvars['127.0.0.1']['provision_password'] }}"
        ssh root@"{{ current_host }}" mkdir -p /root/.ssh
      no_log: True
      register: register_error
      changed_when: false

    - name: Copy the public key to remote host
      shell: >-
        set -o pipefail && cat "{{ rsa_id_file }}".pub
        | sshpass -p "{{ hostvars['127.0.0.1']['provision_password'] }}"
        ssh root@"{{ current_host }}" 'cat >> "{{ auth_key_path }}"'
      no_log: True
      register: register_error
      changed_when: false

    - name: Change permissions on the remote host
      shell: sshpass -p "{{ hostvars['127.0.0.1']['provision_password'] }}" ssh root@"{{ current_host }}" 'chmod 700 .ssh; chmod 640 "{{ auth_key_path }}"'
      no_log: True
      register: register_error
      changed_when: false

  rescue:
    - name: Passwordless ssh failed
      debug:
        msg: "{{ passwordless_ssh_error_msg }} {{ register_error.stderr | regex_replace(hostvars['127.0.0.1']['provision_password']) | regex_replace(auth_key_path) }}"