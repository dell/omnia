# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---

- name: Get auth string
  shell: echo -n {{ powervault_username }}_{{ powervault_password }} | sha256sum
  register: val_auth_string
  changed_when: false
  no_log: true
  ignore_errors: yes

- name: Get session key
  uri:
    url: https://{{ inventory_hostname }}/api/login/{{ val_auth_string.stdout | replace(" -", "") }}
    method: GET
    headers:
      {'datatype': 'json'}
    validate_certs: no
  register: val_session_key

- name: Validate the value of powervault_protocol
  assert:
    that:
      - powervault_protocol | length > 1
      - powervault_protocol | lower == "sas" or powervault_protocol | lower == "iscsi" or powervault_protocol | lower == "fc"
    fail_msg: "{{ protocol_wrong_value }}"
    success_msg: "{{ protocol_success }}"

- name: Validate the value of powervault_protocol is not fc
  fail:
    msg: "{{ protocol_supported }}"
  when: powervault_protocol | lower == "fc"

- name: Validate the value of powervault controller mode
  assert:
    that:
      - powervault_controller_mode | length > 1
      - powervault_controller_mode | lower == "single" or powervault_controller_mode | lower == "multi"
    fail_msg: "{{ controller_wrong_value }}"
    success_msg: "{{ controller_success }}"

- name: Check if system name has space
  shell: echo {{ powervault_system_name }} | grep '\s' -c
  register: space_count
  changed_when: false
  ignore_errors: true

- name: Fail if system name has space
  assert:
    that:
      - space_count.stdout | int == 0
      - powervault_system_name | length < 30
    msg: "{{ system_name_wrong }}"

- name: Assert minimum 1 volume present
  assert:
    that:
      - powervault_volumes != None
      - powervault_volumes | length >= 1
    msg: "{{ volume_wrong_value }}"
  register: min_vol_check

- name: Check if volume name has space
  shell: echo {{ item.name }} | grep '\s' -c
  register: vol_count1
  ignore_errors: true
  with_items: "{{ powervault_volumes }}"
  when: powervault_volumes | length >= 1

- name: Set fact for volume names
  set_fact:
    vol_space_count: "{{ vol_space_count | default ([]) + [{ 'name': item.item.name , 'space': item.stdout }] }}"
  loop: "{{ vol_count1.results }}"
  loop_control:
    label: "{{ item.stdout_lines }}"

- name: Fail if volume name has space
  assert:
    that:
      - item.space == "0"
      - item.name | length < 30
      - item.name | unique | count != vol_space_count | length
    msg: "{{ system_name_wrong }}"
  with_items: "{{ vol_space_count }}"

- name: Check if server path is not empty
  assert:
    that:
      - item.server_share_path != None
      - '"/" in item.server_share_path'
    fail_msg: "{{ server_path_empty }}"
  with_items: "{{ powervault_volumes }}"

- block:
  - name: Verify server_export_options variable declaration
    assert:
      that:
        - item.server_export_options is defined
      success_msg: "{{ server_export_options_success_msg }}"
    with_items: "{{ powervault_volumes }}"

  - name: Verify client_share_path variable declaration
    assert:
      that:
        - item.client_share_path is defined
      success_msg: "{{ client_share_path_success_msg }}"
    with_items: "{{ powervault_volumes }}"

  - name: Verify client_mount_options variable declaration
    assert:
      that:
        - item.client_mount_options is defined
      success_msg: "{{ client_mount_options_success_msg }}"
    with_items: "{{ powervault_volumes }}"  
  rescue:
  - name: Show message
    fail:
      msg: "{{ powervault_volumes_options_fail_msg }}"

- name: Assert disk group name given if pool type is linear
  assert:
    that:
      - powervault_disk_group_name| length > 1
    msg: "{{ system_name_wrong }}"
  when:  powervault_pool_type | lower == "linear"

- name: Check if disk group name has space
  shell: echo {{ powervault_disk_group_name }} | grep '\s' -c
  register: disk_count
  when: powervault_disk_group_name | length > 1
  ignore_errors: true

- name: Assert if disk group name has space
  assert:
    that:
      - disk_count.stdout == "0"
      - powervault_disk_group_name | length < 30
    msg: "{{ system_name_wrong }}"
  when: powervault_disk_group_name | length > 1

- name: Assert snmp notification level
  assert:
    that:
      - powervault_snmp_notify_level | length >1
      - powervault_snmp_notify_level == "crit" or powervault_snmp_notify_level == "error" or powervault_snmp_notify_level == "warn" or powervault_snmp_notify_level == "resolved" or powervault_snmp_notify_level == "info" or powervault_snmp_notify_level == "none"
    fail_msg: "{{ snmp_wrong_value }}"
    success_msg: "{{ snmp_success }}"

- name: Assert RAID value
  assert:
    that: >
      powervault_raid_levels | lower == "r1" or powervault_raid_levels | lower == "raid1" or
      powervault_raid_levels | lower == "r5" or powervault_raid_levels | lower == "raid5" or
      powervault_raid_levels | lower == "r6" or powervault_raid_levels | lower == "raid6" or
      powervault_raid_levels | lower == "r10" or powervault_raid_levels | lower == "raid10" or
      powervault_raid_levels | lower == "adapt"
    msg: "{{ raid_level_wrong }}"

- name: Assert disk range
  assert:
    that:
      - powervault_disk_range | length >1
    fail_msg: "{{ wrong_disk_range }}"
    success_msg: "{{ correct_disk_range }}"

- name: Check pool value
  assert:
    that:
      - powervault_pool == "a" or powervault_pool == "A" or powervault_pool == "b" or powervault_pool == "B"
    msg: "{{ wrong_pool }}"
  when: powervault_pool_type | lower == "virtual"

- name: Check pool type
  assert:
    that:
      - powervault_pool_type | length > 1
      - powervault_pool_type | lower == "virtual" or powervault_pool_type | lower == "linear"
    msg: "{{ wrong_pool_type }}"

- name: Check parition percentage
  assert:
    that:
      - powervault_disk_partition_size| length > 0
      - powervault_disk_partition_size|int
      - powervault_disk_partition_size|int < 90
      - powervault_disk_partition_size|int > 5
    msg: "{{ wrong_partition }}"
  when: powervault_protocol == "iscsi"

- name: Check the volume size
  assert:
    that: >
      'GB' in powervault_volume_size or
      'TB' in powervault_volume_size or
      'MB' in powervault_volume_size or
      'B' in powervault_volume_size
    msg: "{{ wrong_vol_size }}"

- name: Assert the nic provided
  assert:
    that:
      - powervault_server_nic | length > 2
  when: powervault_protocol == "iscsi"
