# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Create log folder for jobs
  file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ vault_file_perm }}"
  loop: "{{ job_log_path }}"
  when: item.flag

- block:
    - name: Fetch ansible-playbook path
      command: whereis ansible-playbook
      changed_when: false
      register: ansible_playbook_path

    - name: Create cron job for node inventory
      cron:
        name: node inventory job runs every 1 hour
        special_time: hourly
        job: "{{ ansible_playbook_path.stdout.split(' ')[1] }} {{ playbook_dir }}/collect_node_info.yml  >> {{ collect_node_info_log }}"
    
    - name: Configure devices
      block:
        - name: Create cron job for device inventory
          cron:
            name: device inventory job runs every day
            special_time: daily
            job: "{{ ansible_playbook_path.stdout.split(' ')[1] }} {{ playbook_dir }}/collect_device_info.yml  >> {{ collect_device_info_log }}"

        - name: Execute device inventory job
          block:
            - name: Execute collect_device_info.yml
              shell: ansible-playbook {{ playbook_dir }}/collect_device_info.yml >> {{ collect_device_info_log }} | echo "Executed collect_device_info.yml"
              changed_when: true
              register: collect_device_info_job
          rescue:
            - name: Warning message for device inventory job
              debug:
                msg: "{{ device_inventory_job_warn_msg }}. Error: {{ collect_device_info_job.stderr }}"

        - name: Execute node inventory job
          block:
            - name: Execute collect_node_info.yml
              shell: ansible-playbook {{ playbook_dir }}/collect_node_info.yml >> {{ collect_node_info_log }} | echo "Executed collect_node_info.yml"
              changed_when: true
              register: collect_node_info_job
          rescue:
            - name: Warning message for node inventory job
              debug:
                msg: "{{ node_inventory_job_warn_msg }}. Error: {{ collect_node_info_job.stderr }}"
          when: network_interface_type == 'lom'

        - name: Execute ethernet job to configure TOR swithes
          block:
            - name: Execute ethernet.yml to configure TOR swithes
              shell: ansible-playbook {{ playbook_dir }}/ethernet.yml -i {{ ethernet_inventory_path }} >> {{ ethernet_job_log }} | echo "Executed ethernet.yml"
              changed_when: true
              register: ethernet_tor_job
          rescue:
            - name: Warning message for ethernet job to configure TOR swithes
              debug:
                msg: "{{ ethernet_job_warn_msg }}. Error: {{ ethernet_tor_job.stderr }}"
          when: ethernet_switch_support

        - name: Wait for 15 mins for DHCP to assign IP to devices
          wait_for:
            timeout: "{{ dhcp_wait_time }}"
          when: ethernet_switch_support

        - name: Execute device inventory job
          block:
            - name: Execute collect_device_info.yml
              shell: ansible-playbook {{ playbook_dir }}/collect_device_info.yml >> {{ collect_device_info_log }} | echo "Executed collect_device_info.yml"
              changed_when: true
              register: collect_device_info_job
          rescue:
            - name: Warning message for device inventory job
              debug:
                msg: "{{ device_inventory_job_warn_msg }}. Error: {{ collect_device_info_job.stderr }}"
          when: ethernet_switch_support

        - name: Execute ethernet job
          block:
            - name: Execute ethernet.yml
              shell: ansible-playbook {{ playbook_dir }}/ethernet.yml -i {{ ethernet_inventory_path }} >> {{ ethernet_job_log }} | echo "Executed ethernet.yml"
              changed_when: true
              register: ethernet_job
          rescue:
            - name: Warning message for ethernet job
              debug:
                msg: "{{ ethernet_job_warn_msg }}. Error: {{ ethernet_job.stderr }}"
          when: ethernet_switch_support
        
        - name: Execute infiniband job
          block:
            - name: Execute infiniband.yml
              shell: ansible-playbook {{ playbook_dir }}/infiniband.yml -i {{ infiniband_inventory_path }} >> {{ infiniband_job_log }} | echo "Executed infiniband.yml"
              changed_when: true
              register: infiniband_job
          rescue:
            - name: Warning message for infiniband job
              debug:
                msg: "{{ infiniband_job_warn_msg }}. Error: {{ infiniband_job.stderr }}"
          when: ib_switch_support

        - name: Execute powervault job
          block:
            - name: Execute powervault.yml
              shell: ansible-playbook {{ playbook_dir }}/powervault.yml -i {{ powervault_inventory_path }} >> {{ powervault_job_log }} | echo "Executed powervault.yml"
              changed_when: true
              register: powervault_job
          rescue:
            - name: Warning message for powervault job
              debug:
                msg: "{{ powervault_job_warn_msg }}. Error: {{ powervault_job.stderr }}"
          when: powervault_support

        - name: Execute idrac job
          block:
            - name: Execute idrac.yml
              shell: ansible-playbook {{ playbook_dir }}/idrac.yml -i {{ idrac_inventory_path }} >> {{ idrac_job_log }} | echo "Executed idrac.yml"
              changed_when: true
              register: idrac_job
          rescue:
            - name: Warning message for idrac job
              debug:
                msg: "{{ idrac_job_warn_msg }}. Error: {{ idrac_job.stderr }}"
      when: device_support_status or network_interface_type == 'lom'
  when: not awx_web_support
