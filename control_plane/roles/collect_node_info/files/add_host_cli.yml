# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Check IP already present in node_inventory
  command: grep "{{ inventory_hostname }}" "{{ hostvars['localhost']['node_inventory_path'] }}"
  delegate_to: localhost
  register: check_node_inventory
  failed_when: false
  changed_when: false

- name: Add the host to node_inventory if not present
  lineinfile:
    path: "{{ hostvars['localhost']['node_inventory_path'] }}"
    line: "{{ item }} service_tag={{ service_tag }} operating_system={{ ansible_distribution }}"
    state: present
    create: yes
    mode: "{{ hostvars['localhost']['file_perm'] }}"
  delegate_to: localhost
  with_items: "{{ inventory_hostname }}"
  throttle: 1
  when:
    - hostname_check.stdout is defined
    - service_tag_details.stdout is defined
    - check_node_inventory.stdout is defined
    - item not in check_node_inventory.stdout

- name: Check node_inventory is present
  stat:
    path: "{{ hostvars['localhost']['node_inventory_path'] }}"
  register: node_inventory_check

- block:
    - name: Create a list of provisioned hosts
      command: awk -F' ' '{ print $1 }' "{{ hostvars['localhost']['node_inventory_path'] }}"
      changed_when: false
      delegate_to: localhost
      register: prov_temp

    - name: Add the host to provisioned inventory
      lineinfile:
        path: "{{ hostvars['localhost']['provisioned_hosts'] }}"
        line: "{{ item }}"
        state: present
        create: yes
        mode: "{{ hostvars['localhost']['file_perm'] }}"
      delegate_to: localhost
      with_items: "{{ prov_temp.stdout_lines }}"

    - name: Check the provisioned_hosts output
      command: cat "{{ hostvars['localhost']['provisioned_hosts'] }}"
      changed_when: false
      delegate_to: localhost
      register: prov_hosts

    - name: Create provisioned_hosts
      add_host:
        name: "{{ item }}"
        groups: "provisioned_hosts"
      with_items: "{{ prov_hosts.stdout_lines }}"
      when: item | trim | length > 1
      delegate_to: localhost

    - name: Set prov_hosts_list in CLI
      set_fact:
        prov_hosts_list: "{{ prov_hosts.stdout }}"

    - name: Delete provisioned_hosts file
      file:
        path: "{{ hostvars['localhost']['provisioned_hosts'] }}"
        state: absent
      delegate_to: localhost
  when: node_inventory_check.stat.exists