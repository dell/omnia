# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- block:
    - name: Configure boot order for PXE booting
      dellemc.openmanage.idrac_bios:
        idrac_ip: "{{ inventory_hostname }}"
        idrac_user: "{{ idrac_username }}"
        idrac_password: "{{ idrac_password }}"
        attributes:
          SetBootOrderEn: NIC.PxeDevice.1-1,NIC.PxeDevice.2-1,NIC.PxeDevice.3-1,NIC.PxeDevice.4-1
          UefiBootSeq: NIC.PxeDevice.1-1,NIC.PxeDevice.2-1,NIC.PxeDevice.3-1,NIC.PxeDevice.4-1
      register: deploy_os_pxe
  rescue:
    - name: OS provisioning failed using PXE
      fail:
        msg: "{{ pxe_provisioning_fail_msg }}"
  always:
    - name: Set deploy_os_status when provision_method == PXE
      set_fact:
        deploy_os_status: "{{ not deploy_os_pxe.failed }}"
  when: provision_method == provision_method_pxe

- block:
    - name: Set unattended_iso_filename - centos
      set_fact:
        unattended_iso_filename: "{{ centos_iso_filename }}"
      when: provision_os == os_supported_centos

    - name: Set unattended_iso_filename - rocky
      set_fact:
        unattended_iso_filename: "{{ rocky_iso_filename }}"
      when: provision_os == os_supported_rocky

    - name: Set unattended_iso_filename - leap
      set_fact:
        unattended_iso_filename: "{{ leap_iso_filename }}"
      when: provision_os == os_supported_leap

    - name: Install OS using iDRAC
      dellemc.openmanage.idrac_os_deployment:
        idrac_ip: "{{ inventory_hostname }}"
        idrac_user: "{{ idrac_username }}"
        idrac_password: "{{ idrac_password }}"
        share_name: "{{ management_station_ip }}:{{ nfs_share_offline_repo }}"
        iso_image: "{{ unattended_iso_filename }}"
        expose_duration: "{{ expose_duration }}"
      register: deploy_os_idrac
  rescue:
    - name: OS provisioning failed using iDRAC
      fail:
        msg: "{{ idrac_provisioning_fail_msg }}"
  always:
    - name: Set deploy_os_status when provision_method == idrac
      set_fact:
        deploy_os_status: "{{ not deploy_os_idrac.failed }}"
  when: provision_method == provision_method_idrac

- block:
    - name: Add to provisioned_hosts to inventory
      command: >-
        awx --conf.host {{ awx_host }} --conf.username {{ awx_username }} --conf.password {{ awx_password }}
        hosts create --name {{ inventory_hostname }} --inventory "{{ provisioned_idrac_inventory_name }}"
      register: update_inventory
      changed_when: true
      no_log: true
      when:
        - awx_search_key in hostname.stdout
        - inventory_hostname not in fetch_inventory.stdout
        - deploy_os_status
  rescue:
    - name: Unable to add host to provisioned_idrac_inventory
      fail:
        msg: "{{ add_inventory_fail_msg }}"

- name: Provision OS status
  debug:
    msg: "{{ provision_os_msg }}"
  when: deploy_os_status
