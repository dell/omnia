# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Initialize active_nic
  set_fact:
    active_nic: []

- name: Set infiniband NIC as active_nic when roce_enabled
  set_fact:
    active_nic: "{{ active_nic + [ idrac_info.system_info.PCIDevice[my_idx8].FQDD ] }}"
  with_items: "{{ idrac_info.system_info.PCIDevice }}"
  when:
    - idrac_info.system_info.PCIDevice[my_idx8].DeviceDescription is defined
    - '"infiniband" in idrac_info.system_info.PCIDevice[my_idx8].DeviceDescription | lower'
  loop_control:
    index_var: my_idx8

- name: Set active_nic from NIC details
  set_fact:
    active_nic: "{{ active_nic + [ idrac_info.system_info.NIC[my_idx9].FQDD ] }}"
  with_items: "{{ idrac_info.system_info.NIC }}"
  when:
    - idrac_info.system_info.NIC[my_idx9].LinkStatus is defined
    - '"up" in idrac_info.system_info.NIC[my_idx9].LinkStatus | lower'
  loop_control:
    index_var: my_idx9

- name: Set unique active_nic and active_nic_count
  set_fact:
    active_nic: "{{ active_nic | unique }}"
    active_nic_count: "{{ active_nic | unique | length }}"

- name: No active_nic present for the server
  fail:
    msg: "{{ active_nic_fail_msg }}"
  when: active_nic_count == "0"

- block:
    - name: Configure boot order for PXE booting of 1 active_nic
      dellemc.openmanage.idrac_bios:
        idrac_ip: "{{ inventory_hostname }}"
        idrac_user: "{{ idrac_username }}"
        idrac_password: "{{ idrac_password }}"
        attributes:
          SetBootOrderEn: NIC.PxeDevice.1-1,NIC.PxeDevice.2-1,NIC.PxeDevice.3-1,NIC.PxeDevice.4-1
          UefiBootSeq: NIC.PxeDevice.1-1,NIC.PxeDevice.2-1,NIC.PxeDevice.3-1,NIC.PxeDevice.4-1
          PxeDev1Interface: "{{ active_nic[0] }}"
      register: deploy_os_pxe1
      until: not deploy_os_pxe1.failed
      retries: "{{ retries_count }}"
      when: active_nic_count == "1"

    - name: Configure boot order for PXE booting of 2 active_nic
      dellemc.openmanage.idrac_bios:
        idrac_ip: "{{ inventory_hostname }}"
        idrac_user: "{{ idrac_username }}"
        idrac_password: "{{ idrac_password }}"
        attributes:
          SetBootOrderEn: NIC.PxeDevice.1-1,NIC.PxeDevice.2-1,NIC.PxeDevice.3-1,NIC.PxeDevice.4-1
          UefiBootSeq: NIC.PxeDevice.1-1,NIC.PxeDevice.2-1,NIC.PxeDevice.3-1,NIC.PxeDevice.4-1
          PxeDev1Interface: "{{ active_nic[0] }}"
          PxeDev2Interface: "{{ active_nic[1] }}"
      register: deploy_os_pxe2
      until: not deploy_os_pxe2.failed
      retries: "{{ retries_count }}"
      when: active_nic_count == "2"

    - name: Configure boot order for PXE booting of 3 active_nic
      dellemc.openmanage.idrac_bios:
        idrac_ip: "{{ inventory_hostname }}"
        idrac_user: "{{ idrac_username }}"
        idrac_password: "{{ idrac_password }}"
        attributes:
          SetBootOrderEn: NIC.PxeDevice.1-1,NIC.PxeDevice.2-1,NIC.PxeDevice.3-1,NIC.PxeDevice.4-1
          UefiBootSeq: NIC.PxeDevice.1-1,NIC.PxeDevice.2-1,NIC.PxeDevice.3-1,NIC.PxeDevice.4-1
          PxeDev1Interface: "{{ active_nic[0] }}"
          PxeDev2Interface: "{{ active_nic[1] }}"
          PxeDev3Interface: "{{ active_nic[2] }}"
      register: deploy_os_pxe3
      until: not deploy_os_pxe3.failed
      retries: "{{ retries_count }}"
      when: active_nic_count == "3"

    - name: Configure boot order for PXE booting of 4 active_nic
      dellemc.openmanage.idrac_bios:
        idrac_ip: "{{ inventory_hostname }}"
        idrac_user: "{{ idrac_username }}"
        idrac_password: "{{ idrac_password }}"
        attributes:
          SetBootOrderEn: NIC.PxeDevice.1-1,NIC.PxeDevice.2-1,NIC.PxeDevice.3-1,NIC.PxeDevice.4-1
          UefiBootSeq: NIC.PxeDevice.1-1,NIC.PxeDevice.2-1,NIC.PxeDevice.3-1,NIC.PxeDevice.4-1
          PxeDev1Interface: "{{ active_nic[0] }}"
          PxeDev2Interface: "{{ active_nic[1] }}"
          PxeDev3Interface: "{{ active_nic[2] }}"
          PxeDev4Interface: "{{ active_nic[3] }}"
      register: deploy_os_pxe4
      until: not deploy_os_pxe4.failed
      retries: "{{ retries_count }}"
      when: active_nic_count >= "4"
  rescue:
    - block:
        - name: Retry configuring boot order for PXE booting 
          dellemc.openmanage.idrac_bios:
            idrac_ip: "{{ inventory_hostname }}"
            idrac_user: "{{ idrac_username }}"
            idrac_password: "{{ idrac_password }}"
            attributes:
              SetBootOrderEn: NIC.PxeDevice.1-1,NIC.PxeDevice.2-1,NIC.PxeDevice.3-1,NIC.PxeDevice.4-1
              UefiBootSeq: NIC.PxeDevice.1-1,NIC.PxeDevice.2-1,NIC.PxeDevice.3-1,NIC.PxeDevice.4-1
          register: deploy_os_pxe_retry
      rescue:
        - name: OS provisioning failed using PXE
          fail:
            msg: "{{ pxe_provisioning_fail_msg }}"
  always:
    - name: Set deploy_os_status when provision_method == PXE for 1 active_nic
      set_fact:
        deploy_os_status: "{{ not deploy_os_pxe1.failed }}"
      when: active_nic_count == "1"

    - name: Set deploy_os_status when provision_method == PXE for 2 active_nic
      set_fact:
        deploy_os_status: "{{ not deploy_os_pxe2.failed }}"
      when: active_nic_count == "2"
    
    - name: Set deploy_os_status when provision_method == PXE for 3 active_nic
      set_fact:
        deploy_os_status: "{{ not deploy_os_pxe3.failed }}"
      when: active_nic_count == "3"

    - name: Set deploy_os_status when provision_method == PXE for 4 active_nic
      set_fact:
        deploy_os_status: "{{ not deploy_os_pxe4.failed }}"
      when: active_nic_count >= "4"
    
    - name: Set deploy_os_status when provision_method == PXE for retry
      set_fact:
        deploy_os_status: "{{ not deploy_os_pxe_retry.failed }}"
      when: deploy_os_pxe_retry.failed is defined