# Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Read dhcp file for rocky
      set_fact:
        var: "{{ lookup('file', '/var/lib/dhcp/dhcpd.leases').split()| unique | select| list }}"

    - name: Filter the ip
      set_fact:
        vars_new: "{{ var | ipv4('address') | to_nice_yaml}}"

    - name: Create the static ip
      shell: awk -F',' 'NR >1{print $3}' omnia/control_plane/roles/control_plane_device/files/new_host_mapping_file.csv > static_hosts.yml
      changed_when: false
      failed_when: false

    - name: Create the static ip for mgmt hosts for shared lom
      shell: awk -F',' 'NR >1{print $2}' omnia/control_plane/roles/control_plane_device/files/new_mgmt_mapping_file.csv > static_mgmt.yml
      changed_when: false
      when: network_interface_type == "lom"
      failed_when: false

    - name: Create the dynamic inventory
      shell: |
        echo "{{ vars_new }}" > temp.txt
        egrep -o '[1-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' temp.txt >> dynamic_hosts.yml
      changed_when: false
      failed_when: false

    - block:
        - name: Read dhcp file for rocky
          set_fact:
            dynamic_ip: "{{ lookup('file', 'dynamic_hosts.yml').split()| unique | select| list }}"

        - name: Divide the IPs into seperate files
          command: ipcalc {{ item }}/{{ netmask }}
          register: provisioned_ips
          with_items: "{{ dynamic_ip }}"
          changed_when: false

        - name: Divide the IPs into seperate files
          command: ipcalc {{ item }}/{{ mgmt_network_netmask }}
          register: device_ips
          with_items: "{{ dynamic_ip }}"
          changed_when: false

        - name: Set fact for host network subnet
          set_fact:
            all_subnets: "{{ all_subnets | default ([]) + [{ 'ip': item.item,'subnet':item.stdout_lines.1.split('/').0.split(':').1.split('\t').1 }]  }}"
          loop: "{{ provisioned_ips.results}}"
          loop_control:
            label: "{{ item.stdout_lines }}"

        - name: Add the ips in host files
          shell: echo "{{ item.ip }}" | sort | uniq >> /root/hosts.yml
          when:  item.subnet == subnet
          with_items: "{{ all_subnets }}"

        - name: Add the ips in device files
          shell: echo "{{ item.ip }}"| sort | uniq >> /root/devices.yml
          when:  item.subnet  == mgmt_network_subnet
          with_items: "{{ all_subnets }}"

        - name: Final inventory for hosts
          shell: |
            cat hosts.yml static_hosts.yml| sort -ur  >> omnia/control_plane/roles/collect_node_info/files/provisioned_hosts.yml
          changed_when: false

        - name: Final inventory for devices
          shell: |
            cat devices.yml static_mgmt.yml| sort -ur  >> omnia/control_plane/roles/collect_device_info/files/mgmt_provisioned_hosts.yml
          changed_when: false

        - name: Temp result for device
          shell: cat /root/omnia/control_plane/roles/collect_node_info/files/provisioned_hosts.yml | sort | uniq
          register: inventory
          changed_when: false

        - name: Final Inventory
          copy:
            content: "{{ inventory.stdout}}"
            dest: omnia/control_plane/roles/collect_node_info/files/provisioned_hosts.yml

        - name: New line at end of file
          shell: echo "">> omnia/control_plane/roles/collect_node_info/files/provisioned_hosts.yml
          changed_when: false
      when: network_interface_type == "lom"

    - name: Final inventory
      shell: cat dynamic_hosts.yml static_hosts.yml| sort -ur >> omnia/control_plane/roles/collect_device_info/files/mgmt_provisioned_hosts.yml
      changed_when: false
      when: network_interface_type == "dedicated"

    - name: Temp result
      shell: cat /root/omnia/control_plane/roles/collect_device_info/files/mgmt_provisioned_hosts.yml | sort | uniq
      register: inventory
      changed_when: false

    - name: Final Inventory
      copy:
        content: "{{ inventory.stdout }}"
        dest: omnia/control_plane/roles/collect_device_info/files/mgmt_provisioned_hosts.yml

    - name: New line at end of file
      shell: echo "">> omnia/control_plane/roles/collect_device_info/files/mgmt_provisioned_hosts.yml
      changed_when: false

    - name: Delete files
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "/root/dynamic_hosts.yml"
        - "/root/temp.txt"
