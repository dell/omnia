#  Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---
# Validate web_ui_awx and deploy_job_templates role being skipped in control_plane execution
# Validate device inventory job execution and idrac inventory creation
- name: OMNIA_1.3_CLI_TC_002
  hosts: localhost
  vars_files:
    - test_vars/test_cli_vars.yml
    - /root/omnia/control_plane/input_params/base_vars.yml
  tasks:
    - name: Validate device inventory job execution
      block:
        - name: Execute device inventory job through CLI
          command: "ansible-playbook {{ device_inventory_job }} -vv"
          register: device_inventory_job_log
          changed_when: false
          no_log: true

        - name: Validate whether iDRAC inventory file is present
          stat:
            path: "{{ inventory_path }}/{{ item }}"
          register: is_inventory
          with_items:
            - idrac_inventory
            - ethernet_inventory
            - infiniband_inventory
            - powervault_inventory

        - name: Validate presence of iDRAC inventory
          assert:
            that:
              - "item.stat.exists == true"
            success_msg: "{{ inventory_present_msg }}"
            fail_msg: "{{ inventory_not_present_msg }}"
          loop: "{{ is_inventory.results }}"
          when: ( "failed=0" in device_inventory_job_log.stdout )
      when: ( network_interface_type== "dedicated" )
      tags: TC_CLI_002

# Validate idrac provisioning and provisioned idrac inventory creation
- name: OMNIA_1.3_CLI_TC_003
  hosts: localhost
  vars_files:
    - test_vars/test_cli_vars.yml
    - /root/omnia/control_plane/input_params/base_vars.yml
  tasks:
    - name: Validate device idrac job execution
      block:
        - name: Execute idrac job through CLI
          command: "ansible-playbook idrac.yml -i {{ idrac_inventory_path }}"
          register: idrac_job_log
          changed_when: false

        - name: Get IP count from iDRAC inventory
          shell: "cat {{ idrac_inventory_path }} | wc -l"
          register: idrac_inventory_count
          changed_when: false

        - name: Get IP count from provisioned iDRAC inventory
          shell: "cat {{ provisioned_idrac_inventory_path }} | wc -l"
          register: provisioned_idrac_inventory_count
          changed_when: false

        - name: Validate iDRAC inventory after device inventory job execution
          assert:
            that:
              - "provisioned_idrac_inventory_count.stdout | int == idrac_inventory_count.stdout | int"
            success_msg: "{{ provisioning_successful_msg }}"
            fail_msg: "{{ provisioning_failure_msg }}"
          when: ( "failed=0" in idrac_job_log.stdout )
      tags: TC_CLI_003

# Validate node inventory job and node inventory creation
- name: OMNIA_1.3_CLI_TC_004
  hosts: localhost
  vars_files:
    - test_vars/test_cli_vars.yml
    - /root/omnia/control_plane/input_params/base_vars.yml
  tasks:
    - name: Validate node inventory job execution
      block:
        - name: Execute node inventory job through CLI
          command: "ansible-playbook {{ node_inventory_job }} -vv"
          register: node_inventory_job_log
          changed_when: false

        - name: Get IP count from node inventory
          shell: "cat {{ node_inventory_path }} | wc -l"
          register: node_inventory_count
          changed_when: false

        - name: Get IP count from iDRAC inventory
          shell: "cat {{ idrac_inventory_path }} | wc -l"
          register: idrac_inventory_count
          changed_when: false

        - name: Get IP count from provisioned iDRAC inventory
          shell: "cat {{ provisioned_idrac_inventory_path }} | wc -l"
          register: provisioned_idrac_inventory_count
          changed_when: false

        - name: Validate node inventory after node inventory job execution
          assert:
            that:
              - "provisioned_idrac_inventory_count.stdout | int == idrac_inventory_count.stdout | int"
              - "node_inventory_count.stdout | int == provisioned_idrac_inventory_count.stdout"
            success_msg: "{{ node_inventory_success_msg }}"
            fail_msg: "{{ node_inventory_fail_msg }}"
          when: ( "failed=0" in node_inventory_job_log.stdout )
      tags: TC_CLI_004

# Validate ethernet template execution
- name: OMNIA_1.3_CLI_TC_005
  hosts: localhost
  vars_files:
    - test_vars/test_cli_vars.yml
    - /root/omnia/control_plane/input_params/base_vars.yml
  tasks:
    - name: Validate ethernet job execution
      block:
        - name: Execute ethernet job through CLI
          command: "ansible-playbook {{ ethernet_template }} -i {{ ethernet_invenotry_path }}"
          register: ethernet_job_log
          changed_when: false

        - name: Validate ethernet job execution
          assert:
            that:
              - "'failed=0' in ethernet_job_log.stdout"
            success_msg: "{{ ethernet_job_execution_success_msg }}"
            fail_msg: "{{ ethernet_job_execution_fail_msg }}"
      tags: TC_CLI_005

# Validate IB template execution
- name: OMNIA_1.3_CLI_TC_005
  hosts: localhost
  vars_files:
    - test_vars/test_cli_vars.yml
    - /root/omnia/control_plane/input_params/base_vars.yml
  tasks:
    - name: Validate ethernet job execution
      block:
        - name: Execute ethernet job through CLI
          command: "ansible-playbook {{ infiniband_template }} -i {{ infiniband_invenotry_path }}"
          register: infiniband_job_log
          changed_when: false

        - name: Validate ethernet job execution
          assert:
            that:
              - "'failed=0' in infiniband_job_log.stdout"
            success_msg: "{{ infiniband_job_execution_success_msg }}"
            fail_msg: "{{ infiniband_job_execution_fail_msg }}"
      tags: TC_CLI_006

# Validate PPower vault template execution
- name: OMNIA_1.3_CLI_TC_005
  hosts: localhost
  vars_files:
    - test_vars/test_cli_vars.yml
    - /root/omnia/control_plane/input_params/base_vars.yml
  tasks:
    - name: Validate powervault job execution
      block:
        - name: Execute powervault job through CLI
          command: "ansible-playbook {{ powervault_template }} -i {{ powervault_inventory_path }}"
          register: powervault_job_log
          changed_when: false

        - name: Validate ethernet job execution
          assert:
            that:
              - "'failed=0' in powervault_job_log.stdout"
            success_msg: "{{ powervault_job_execution_success_msg }}"
            fail_msg: "{{ powervault_job_execution_fail_msg }}"
      tags: TC_CLI_007

# Validate device inventory job execution when mgmt_provisioned_hosts.yml is not present
- name: OMNIA_1.3_CLI_TC_006
  hosts: localhost
  vars_files:
    - test_vars/test_cli_vars.yml
    - /root/omnia/control_plane/input_params/base_vars.yml
  tasks:
    - name: Validate mgmt_provisioned_hosts.yml exists
      stat:
        path: "{{ mgmt_provisioned_hosts_file_path }}"
      register: is_mgmt_hosts_file
      tags: TC_CLI_008

    - block:
        - name: Validate mgmt_provisioned_hosts.yml is not empty on presence
          shell: "cat {{ mgmt_provisioned_hosts_file_path }} | wc -l"
          register: mgmt_hosts_count
          changed_when: false

        - name: Rename mgmt_provisioned_hosts.yml on presence
          command: "mv {{ mgmt_provisioned_hosts_file_path }} {{ backup_mgmt_provisioned_hosts_file_path }}"
          changed_when: false

        - name: Execute device inventory job through CLI after renaming mgmt_provisioned_hosts.yml
          command: "ansible-playbook {{ device_inventory_job }} -vv"
          register: device_inventory_job_log
          changed_when: false

        - name: Validate device inventory job execution after renaming mgmt_provisioned_hosts.yml
          assert:
            that:
              - "'skipping: no hosts matched' in device_inventory_job_log.stdout"
            success_msg: "{{ device_inventory_job_no_hosts_msg }}"
            fail_msg: "{{ device_inventory_job_no_hosts_fail_msg }}"

        - name: Wait for 5mins for mgmt_provisioned_hosts.yml to be created again
          wait_for:
             timeout: 300

        - name: Validate mgmt_provisioned_hosts.yml exists
          stat:
            path: "{{ mgmt_provisioned_hosts_file_path }}"
          register: is_mgmt_file

        - name: Remove the backup file created
          file:
            path: "{{ backup_mgmt_provisioned_hosts_file_path }}"
            state: absent
          when: ( is_mgmt_file.stat.exists )
      when: ( is_mgmt_hosts_file.stat.exists )
      tags: TC_CLI_008

    - block:
        - name: Execute device inventory job through CLI when mgmt_provisioned_hosts.yml is not present
          command: "ansible-playbook {{ device_inventory_job }} -vv"
          register: device_inventory_job_log
          changed_when: false

        - name: Validate device inventory job execution when mgmt_provisioned_hosts.yml is not present
          assert:
            that:
              - "'skipping: no hosts matched' in device_inventory_job_log.stdout"
            success_msg: "{{ device_inventory_job_no_hosts_msg }}"
            fail_msg: "{{ device_inventory_job_no_hosts_fail_msg }}"
      when: ( is_mgmt_hosts_file.stat.exists == false )
      tags: TC_CLI_008
