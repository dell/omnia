# Copyright 2021 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
# Testcase OMNIA_1.3_enable_upgrade_TC_001
# Validate omnia_version by executing control plane is copied or not 
- name: OMNIA_1.3_enable_upgrade_TC_001
  hosts: localhost
  vars_files:
   - /test_vars/test_enable_upgrade_vars.yml

  tasks:
    - block:
       - name: execute control plane 
         command: ansible-playbook control_plane.yml
         register: control_plane_info
         changed_when: true
         tags: ena_up_tc_001

    - name: Assert failure on executing control plane
      assert:
        that:
         - '"error" in control_plane_info.stderr'
        success_msg: "{{ control_plan_success_msg }}"
        fail_msg: "{{ control_plane_fail_msg }}"
      tags: ena_up_tc_001
    
    - name: Validation for omnia version file
      command: find  /opt/omnia_version
      register: omnia_version_file_info
      changed_when: false
      tags: ena_up_tc_001

    - name: Assert failure on copying omnia version file
      assert:
        that:
         - '"omnia_version" in control_plane_info.stdout'
        success_msg: "{{ omnia_version_file_success_msg }}"
        fail_msg: "{{ omnia_version_file_fail_msg }}"
      tags: ena_up_tc_001

    - name: Validate for omnia version
      command: vi /opt/omnia_version
      register: omnia_version_info
      changed_when: false
      tags: ena_up_tc_001

    - name: Assert for omnia version
      assert:
        that:
         - '"omnia_version: 1.3" in omnia_version_info.stdout'
        success_msg: "{{ omnia_version_success_msg }}"
        fail_msg: "{{ omnia_version_fail_msg }}"
      tags: ena_up_tc_001

# Testcase OMNIA_1.3_enable_upgrade_TC_002
# Delete existing omnia_version file and execute control plane validate if omnia_version file is copied or not with cloned omnia version. 

- name: OMNIA_1.3_enable_upgrade_TC_002
  hosts: localhost

  tasks:
    - name: Delete existing omnia version file
      command: cd /opt | rm omnia_version
      changed_when: true
      tags: ena_up_tc_002

    - block:
       - name: execute control plane 
         command: ansible-playbook control_plane.yml
         register: control_plane_info
         changed_when: true
         tags: ena_up_tc_002

    - name: Assert failure on executing control plane
      assert:
        that:
          - '"error" in control_plane_info.stderr'
        success_msg: "{{ control_plan_success_msg }}"
        fail_msg: "{{ control_plane_fail_msg }}"
      tags: ena_up_tc_002
    
    - name: Validation for omnia version file
      command: find /opt/omnia_version
      register: omnia_version_file_info
      changed_when: false
      tags: ena_up_tc_002

    - name: Assert failure on copying omnia version file
      assert:
        that:
         - '"omnia_version" in control_plane_info.stdout'
        success_msg: "{{ omnia_version_file_success_msg }}"
        fail_msg: "{{ omnia_version_file_fail_msg }}"
      tags: ena_up_tc_002

    - name: Validate for omnia version
      command: vi /opt/omnia_version
      register: omnia_version_info
      changed_when: false
      tags: ena_up_tc_002

    - name: Assert for omnia version
      assert:
        that:
          - '"omnia_version: 1.3" in omnia_version_info.stdout'
        success_msg: "{{ omnia_version_success_msg }}"
        fail_msg: "{{ omnia_version_fail_msg }}"
      tags: ena_up_tc_002