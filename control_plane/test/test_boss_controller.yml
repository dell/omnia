#  Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

---

# Test Case to test when none of the the nodes are having BOSS Controller - Regular Flow PXE - Rocky
# This will only run when control_plane has already executed. Cobbler and Management Pods are running. Custom ISO is created. 

- name: OMNIA_1.2.1_BOSS_TC_01
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - /test_vars/test_boss_controller_vars.yaml

  tags: BOSS_TC_01

  tasks:

    - name: Create inventory for idrac template execution
      copy:
        content: {{ item }}
        path: "/root/omnia/control_plane/inventory.yml"
      with_items:
        - "{{ nodes }}"
      args:
        chdir: "/root/omnia/control_plane"

    - name: Set provision_method to PXE
      lineinfile:
        path: "/root/omnia/control_plane/input_params/base_vars.yml"
        regexp: "^provision_method:"
        line: 'provision_method: PXE'

    - name: Execute Idrac Template
      command: ansible-playbook idrac.yml -i inventory
      changed_when: true
      args:
        chdir: "/root/omnia/control_plane"

    - name: Validate Idrac Execution
      command: ansible-playbook test_boss_validation.yml
      changed_when: true

    - name: Delete inventory file
      command: rm -rf inventory
      args:
        chdir: "/root/omnia/control_plane"


# Test Case to test when none of the the nodes are having BOSS Controller - Regular Flow PXE - Leap
# This will only run when control_plane has already executed. Cobbler and Management Pods are running. Custom ISO is created. 

- name: OMNIA_1.2.1_BOSS_TC_02
  hosts: localhost
  connection: local
  gather_facts: false

  tags: BOSS_TC_02

  tasks:

    - name: Create inventory for idrac template execution
      copy:
        content: {{ item }}
        path: "/root/omnia/control_plane/inventory.yml"
      with_items:
        - "{{ nodes }}"
      args:
        chdir: "/root/omnia/control_plane"

    - name: Set provision_method to PXE
      lineinfile:
        path: "/root/omnia/control_plane/input_params/base_vars.yml"
        regexp: "^provision_method:"
        line: 'provision_method: PXE'

    - name: Execute Idrac Template
      command: ansible-playbook idrac.yml -i inventory
      changed_when: true
      args:
        chdir: "/root/omnia/control_plane"

    - name: Validate Idrac Execution
      command: ansible-playbook test_boss_validation.yml
      changed_when: true

    - name: Delete inventory file
      command: rm -rf inventory
      args:
        chdir: "/root/omnia/control_plane"


# Test Case to test when none of the the nodes are having BOSS Controller - Regular Flow PXE - RHEL
# This will only run when control_plane has already executed. Cobbler and Management Pods are running. Custom ISO is created. 

- name: OMNIA_1.2.1_BOSS_TC_03
  hosts: localhost
  connection: local
  gather_facts: false

  tags: BOSS_TC_03

  tasks:

    - name: Create inventory for idrac template execution
      copy:
        content: {{ item }}
        path: "/root/omnia/control_plane/inventory.yml"
      with_items:
        - "{{ nodes }}"
      args:
        chdir: "/root/omnia/control_plane"

    - name: Set provision_method to PXE
      lineinfile:
        path: "/root/omnia/control_plane/input_params/base_vars.yml"
        regexp: "^provision_method:"
        line: 'provision_method: PXE'

    - name: Execute Idrac Template
      command: ansible-playbook idrac.yml -i inventory
      changed_when: true
      args:
        chdir: "/root/omnia/control_plane"

    - name: Validate Idrac Execution
      command: ansible-playbook test_boss_validation.yml
      changed_when: true

    - name: Delete inventory file
      command: rm -rf inventory
      args:
        chdir: "/root/omnia/control_plane"


# Test Case to test when none of the the nodes are having BOSS Controller - Regular Flow IDRAC - Rocky
# This will only run when control_plane has already executed. Cobbler and Management Pods are running. Custom ISO is created. 

- name: OMNIA_1.2.1_BOSS_TC_04
  hosts: localhost
  connection: local
  gather_facts: false

  tags: BOSS_TC_04

  tasks:

    - name: Create inventory for idrac template execution
      copy:
        content: {{ item }}
        path: "/root/omnia/control_plane/inventory.yml"
      with_items:
        - "{{ nodes }}"
      args:
        chdir: "/root/omnia/control_plane"

    - name: Set provision_method to idrac
      lineinfile:
        path: "/root/omnia/control_plane/input_params/base_vars.yml"
        regexp: "^provision_method:"
        line: 'provision_method: idrac'

    - name: Execute Idrac Template
      command: ansible-playbook idrac.yml -i inventory
      changed_when: true
      args:
        chdir: "/root/omnia/control_plane"

    - name: Validate Idrac Execution
      command: ansible-playbook test_boss_validation.yml
      changed_when: true

    - name: Delete inventory file
      command: rm -rf inventory
      args:
        chdir: "/root/omnia/control_plane"


# Test Case to test when none of the the nodes are having BOSS Controller - Regular Flow IDRAC - Leap
# This will only run when control_plane has already executed. Cobbler and Management Pods are running. Custom ISO is created. 

- name: OMNIA_1.2.1_BOSS_TC_05
  hosts: localhost
  connection: local
  gather_facts: false

  tags: BOSS_TC_05

  tasks:

    - name: Create inventory for idrac template execution
      copy:
        content: {{ item }}
        path: "/root/omnia/control_plane/inventory.yml"
      with_items:
        - "{{ nodes }}"
      args:
        chdir: "/root/omnia/control_plane"

    - name: Set provision_method to idrac
      lineinfile:
        path: "/root/omnia/control_plane/input_params/base_vars.yml"
        regexp: "^provision_method:"
        line: 'provision_method: idrac'

    - name: Execute Idrac Template
      command: ansible-playbook idrac.yml -i inventory
      changed_when: true
      args:
        chdir: "/root/omnia/control_plane"

    - name: Validate Idrac Execution
      command: ansible-playbook test_boss_validation.yml
      changed_when: true

    - name: Delete inventory file
      command: rm -rf inventory
      args:
        chdir: "/root/omnia/control_plane"


# Test Case to test when none of the the nodes are having BOSS Controller - Regular Flow IDRAC - RHEL
# This will only run when control_plane has already executed. Cobbler and Management Pods are running. Custom ISO is created. 

- name: OMNIA_1.2.1_BOSS_TC_06
  hosts: localhost
  connection: local
  gather_facts: false

  tags: BOSS_TC_06

  tasks:

    - name: Create inventory for idrac template execution
      copy:
        content: {{ item }}
        path: "/root/omnia/control_plane/inventory.yml"
      with_items:
        - "{{ nodes }}"
      args:
        chdir: "/root/omnia/control_plane"

    - name: Set provision_method to idrac
      lineinfile:
        path: "/root/omnia/control_plane/input_params/base_vars.yml"
        regexp: "^provision_method:"
        line: 'provision_method: idrac'

    - name: Execute Idrac Template
      command: ansible-playbook idrac.yml -i inventory
      changed_when: true
      args:
        chdir: "/root/omnia/control_plane"

    - name: Validate Idrac Execution
      command: ansible-playbook test_boss_validation.yml
      changed_when: true

    - name: Delete inventory file
      command: rm -rf inventory
      args:
        chdir: "/root/omnia/control_plane"


# Test Case to test when one/all of the nodes are having BOSS Controller -- New Flow -- PXE - Rocky
# This will only run when control_plane has already executed. Cobbler and Management Pods are running. Custom ISO is created.

- name: OMNIA_1.2.1_BOSS_TC_07
  hosts: localhost
  connection: local
  gather_facts: false

  tags: BOSS_TC_07

  tasks:

    - name: Create inventory for idrac template execution
      copy:
        content: {{ item }}
        path: "/root/omnia/control_plane/inventory.yml"
      with_items:
        - "{{ nodes }}"
        - "{{ nodes-BOSS }}"

      args:
        chdir: "/root/omnia/control_plane"

    - name: Set provision_method to PXE
      lineinfile:
        path: "/root/omnia/control_plane/input_params/base_vars.yml"
        regexp: "^provision_method:"
        line: 'provision_method: PXE'

    - name: Execute Idrac Template
      command: ansible-playbook idrac.yml -i inventory
      changed_when: true
      args:
        chdir: "/root/omnia/control_plane"

    - name: Validate Idrac Execution
      command: ansible-playbook test_boss_validation.yml
      changed_when: true

    - name: Delete inventory file
      command: rm -rf inventory
      args:
        chdir: "/root/omnia/control_plane"


# Test Case to test when one/all of the nodes are having BOSS Controller -- New Flow -- PXE - Leap
# This will only run when control_plane has already executed. Cobbler and Management Pods are running. Custom ISO is created.

- name: OMNIA_1.2.1_BOSS_TC_08
  hosts: localhost
  connection: local
  gather_facts: false

  tags: BOSS_TC_08

  tasks:

    - name: Create inventory for idrac template execution
      copy:
        content: {{ item }}
        path: "/root/omnia/control_plane/inventory.yml"
      with_items:
        - "{{ nodes }}"
        - "{{ nodes-BOSS }}"

      args:
        chdir: "/root/omnia/control_plane"

    - name: Set provision_method to PXE
      lineinfile:
        path: "/root/omnia/control_plane/input_params/base_vars.yml"
        regexp: "^provision_method:"
        line: 'provision_method: PXE'

    - name: Execute Idrac Template
      command: ansible-playbook idrac.yml -i inventory
      changed_when: true
      args:
        chdir: "/root/omnia/control_plane"

    - name: Validate Idrac Execution
      command: ansible-playbook test_boss_validation.yml
      changed_when: true

    - name: Delete inventory file
      command: rm -rf inventory
      args:
        chdir: "/root/omnia/control_plane"


# Test Case to test when one/all of the nodes are having BOSS Controller -- New Flow -- PXE - RHEL
# This will only run when control_plane has already executed. Cobbler and Management Pods are running. Custom ISO is created.

- name: OMNIA_1.2.1_BOSS_TC_09
  hosts: localhost
  connection: local
  gather_facts: false

  tags: BOSS_TC_09

  tasks:

    - name: Create inventory for idrac template execution
      copy:
        content: {{ item }}
        path: "/root/omnia/control_plane/inventory.yml"
      with_items:
        - "{{ nodes }}"
        - "{{ nodes-BOSS }}"

      args:
        chdir: "/root/omnia/control_plane"

    - name: Set provision_method to PXE
      lineinfile:
        path: "/root/omnia/control_plane/input_params/base_vars.yml"
        regexp: "^provision_method:"
        line: 'provision_method: PXE'

    - name: Execute Idrac Template
      command: ansible-playbook idrac.yml -i inventory
      changed_when: true
      args:
        chdir: "/root/omnia/control_plane"

    - name: Validate Idrac Execution
      command: ansible-playbook test_boss_validation.yml
      changed_when: true

    - name: Delete inventory file
      command: rm -rf inventory
      args:
        chdir: "/root/omnia/control_plane"


# Test Case to test when one/all of the nodes are having BOSS Controller -- New Flow -- idrac - Rocky
# This will only run when control_plane has already executed. Cobbler and Management Pods are running. Custom ISO is created.

- name: OMNIA_1.2.1_BOSS_TC_10
  hosts: localhost
  connection: local
  gather_facts: false

  tags: BOSS_TC_10

  tasks:

    - name: Create inventory for idrac template execution
      copy:
        content: {{ item }}
        path: "/root/omnia/control_plane/inventory.yml"
      with_items:
        - "{{ nodes }}"
        - "{{ nodes-BOSS }}"

      args:
        chdir: "/root/omnia/control_plane"

    - name: Set provision_method to idrac
      lineinfile:
        path: "/root/omnia/control_plane/input_params/base_vars.yml"
        regexp: "^provision_method:"
        line: 'provision_method: idrac'

    - name: Execute Idrac Template
      command: ansible-playbook idrac.yml -i inventory
      changed_when: true
      args:
        chdir: "/root/omnia/control_plane"

    - name: Validate Idrac Execution
      command: ansible-playbook test_boss_validation.yml
      changed_when: true

    - name: Delete inventory file
      command: rm -rf inventory
      args:
        chdir: "/root/omnia/control_plane"


# Test Case to test when one/all of the nodes are having BOSS Controller -- New Flow -- idrac - Leap
# This will only run when control_plane has already executed. Cobbler and Management Pods are running. Custom ISO is created.

- name: OMNIA_1.2.1_BOSS_TC_11
  hosts: localhost
  connection: local
  gather_facts: false

  tags: BOSS_TC_11

  tasks:

    - name: Create inventory for idrac template execution
      copy:
        content: {{ item }}
        path: "/root/omnia/control_plane/inventory.yml"
      with_items:
        - "{{ nodes }}"
        - "{{ nodes-BOSS }}"

      args:
        chdir: "/root/omnia/control_plane"

    - name: Set provision_method to idrac
      lineinfile:
        path: "/root/omnia/control_plane/input_params/base_vars.yml"
        regexp: "^provision_method:"
        line: 'provision_method: idrac'

    - name: Execute Idrac Template
      command: ansible-playbook idrac.yml -i inventory
      changed_when: true
      args:
        chdir: "/root/omnia/control_plane"

    - name: Validate Idrac Execution
      command: ansible-playbook test_boss_validation.yml
      changed_when: true

    - name: Delete inventory file
      command: rm -rf inventory
      args:
        chdir: "/root/omnia/control_plane"


# Test Case to test when one/all of the nodes are having BOSS Controller -- New Flow -- idrac - RHEL
# This will only run when control_plane has already executed. Cobbler and Management Pods are running. Custom ISO is created.

- name: OMNIA_1.2.1_BOSS_TC_12
  hosts: localhost
  connection: local
  gather_facts: false

  tags: BOSS_TC_12

  tasks:

    - name: Create inventory for idrac template execution
      copy:
        content: {{ item }}
        path: "/root/omnia/control_plane/inventory.yml"
      with_items:
        - "{{ nodes }}"
        - "{{ nodes-BOSS }}"
      args:
        chdir: "/root/omnia/control_plane"

    - name: Set provision_method to idrac
      lineinfile:
        path: "/root/omnia/control_plane/input_params/base_vars.yml"
        regexp: "^provision_method:"
        line: 'provision_method: idrac'

    - name: Execute Idrac Template
      command: ansible-playbook idrac.yml -i inventory
      changed_when: true
      args:
        chdir: "/root/omnia/control_plane"

    - name: Validate Idrac Execution
      command: ansible-playbook test_boss_validation.yml
      changed_when: true

    - name: Delete inventory file
      command: rm -rf inventory
      args:
        chdir: "/root/omnia/control_plane"
